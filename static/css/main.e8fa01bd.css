*{box-sizing:border-box}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;margin:0;overflow:auto}code{font-family:source-code-pro,Menlo,Monaco,Consolas,Courier New,monospace}.hide_selection ::selection,.hide_selection::selection{background:#0000}.show_mid [data-mid]:before{background-color:#07b53b;color:#fff;content:attr(data-mid);font-family:monospace;font-size:14px;height:14px;left:0;line-height:14px;-webkit-mask:none;opacity:0;overflow:hidden;padding:4px;pointer-events:none;position:absolute;text-overflow:ellipsis;top:0;transform:translateY(-100%)!important;transition:all .3s ease;white-space:nowrap;width:5em;z-index:9}.show_mid [data-mid]:hover{box-shadow:inset 0 0 5px #07b53b;position:relative}.show_mid [data-mid]:hover:before{opacity:.9;transform:translateY(0)!important}.show_message_id [data-message-id]:before{background-color:#4879eb;color:#fff;content:attr(data-message-id);font-family:monospace;font-size:14px;height:14px;left:0;line-height:14px;-webkit-mask:none;opacity:0;overflow:hidden;padding:4px;pointer-events:none;position:absolute;text-overflow:ellipsis;top:0;transform:translateY(-100%)!important;transition:all .3s ease;white-space:nowrap;width:5em;z-index:9}.show_message_id [data-message-id]:hover{box-shadow:inset 0 0 5px #4879eb;position:relative}.show_message_id [data-message-id]:hover:before{opacity:.9;transform:translateY(0)!important}.show_message_id [data-message-id]:before{font-size:12px;padding:0 2px;width:auto}.show_global_alert .modal_wrap:not(.global_alert):before{display:none}.show_e2ee_mark [data-is-e2ee-message=true]>[class^=messageLayout-module]:before{content:"🔑";font-size:2em;position:relative;z-index:1}body,html{height:100%;position:relative;user-select:none;width:100%}html{font-size:16px;overflow:hidden}body{-webkit-text-size-adjust:none;text-rendering:optimizeSpeed}body,button,dd,dl,dt,form,h1,h2,h3,input,li,ol,p,pre,textarea,ul{margin:0;padding:0}a,body,button,input,pre,textarea{color:#000;font-family:-apple-system,BlinkMacSystemFont,Helvetica Neue,helvetica,Hiragino Sans,arial,MS PGothic,sans-serif;font-size:1rem;line-height:1.25;outline:0}button,input,textarea{-webkit-appearance:none;background-color:#0000;border:0;border-radius:0}table{border-collapse:collapse;border-spacing:0}img{border:0;vertical-align:top}ol,ul{list-style:none}em{font-style:normal}pre{word-wrap:break-word;font-size:inherit;line-height:inherit;white-space:pre-wrap;word-break:break-word}mark,pre{color:inherit}mark{background-color:#0000}a,button{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-drag:none;user-select:none}a{text-decoration:none}button{cursor:pointer;text-align:left}button[disabled]{cursor:default}input[type=search]::-webkit-search-cancel-button{-webkit-appearance:none}:root{--action-popover-popover-wrap-box-shadow:#0000000f;--action-popover-popover-wrap-border-color:#c8c8c8;--action-popover-popover-wrap-background-color:#fff;--action-popover-action-list-border-top-color:#efefef;--action-popover-action-item-font-color:#1f1f1f;--action-popover-action-item-font-color-disabled:#c8c8c8;--action-popover-action-item-background-color-hover:#fafafa;--action-popover-action-item-icon-color:#000;--action-popover-description-border-top-color:#efefef;--action-popover-description-icon-color:#c8c8c8;--action-popover-description-font-color:#949494}.positive_button_first,:root{--positive-button-order:-1}.negative_button_first{--positive-button-order:2}.blind{clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.icon{color:inherit;display:inline-flex}.icon svg{height:inherit;width:inherit}.icon svg,svg.loading_spinner{color:inherit}svg.loading_spinner circle{stroke:currentColor}.search_text{color:#07b53b}.is_loading{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg class='loading_spinner' xmlns='http://www.w3.org/2000/svg' width='30' height='30'%3E%3Ccircle cx='15' cy='15' fill='none' r='13' stroke='%23b7b7b7' stroke-width='2' stroke-linecap='round' transform='rotate(216.57 15 15)'%3E%3CanimateTransform attributeName='transform' type='rotate' calcMode='linear' values='0 15 15;320 15 15;720 15 15' keyTimes='0;0.5;1' dur='1s' begin='0s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' calcMode='linear' values='0 80; 70 80; 00 80' keyTimes='0;0.5;1' dur='1' begin='0s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/svg%3E");background-position:50%;background-repeat:no-repeat;pointer-events:none}button.is_loading{background-size:auto 70%}.is_loading>*{visibility:hidden}.is_loading.color_white{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg class='loading_spinner' xmlns='http://www.w3.org/2000/svg' width='30' height='30'%3E%3Ccircle cx='15' cy='15' fill='none' r='13' stroke='%23fff' stroke-width='2' stroke-linecap='round' transform='rotate(216.57 15 15)'%3E%3CanimateTransform attributeName='transform' type='rotate' calcMode='linear' values='0 15 15;320 15 15;720 15 15' keyTimes='0;0.5;1' dur='1s' begin='0s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' calcMode='linear' values='0 80; 70 80; 00 80' keyTimes='0;0.5;1' dur='1' begin='0s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/svg%3E")}.vh_center{left:50%;position:absolute;top:50%;transform:translate3d(-50%,-50%,0)}.emoji{height:calc(1em + 2px);pointer-events:none;vertical-align:middle;width:calc(1em + 2px)}.emoji-wrap[data-tooltip]{display:inline-block}.sticker{align-items:center;display:flex;height:100%;justify-content:center;position:relative;width:100%}.sticker img{display:block;object-fit:cover}.sticker img.overlay{pointer-events:none;position:absolute}.sticker img.sticon_sticker{max-height:77px;max-width:77px}@keyframes shake-right{0%{transform:translate3d(26.4px,0,0)}10%{transform:translate3d(-17.6px,0,0)}20%{transform:translate3d(11px,0,0)}30%{transform:translate3d(-7.7px,0,0)}40%{transform:translate3d(4.4px,0,0)}50%{transform:translate3d(-3.3px,0,0)}60%{transform:translate3d(2.2px,0,0)}70%{transform:translate3d(-1.1px,0,0)}80%{transform:translate3d(1.1px,0,0)}90%{transform:translateZ(0)}to{transform:translateZ(0)}}@keyframes shake-left{0%{transform:translate3d(-26.4px,0,0)}10%{transform:translate3d(17.6px,0,0)}20%{transform:translate3d(-11px,0,0)}30%{transform:translate3d(7.7px,0,0)}40%{transform:translate3d(-4.4px,0,0)}50%{transform:translate3d(3.3px,0,0)}60%{transform:translate3d(-2.2px,0,0)}70%{transform:translate3d(1.1px,0,0)}80%{transform:translate3d(-1.1px,0,0)}90%{transform:translateZ(0)}to{transform:translateZ(0)}}@keyframes shake-right-sticker{0%{transform:translateZ(0)}10%{transform:translate3d(15px,0,0)}30%{transform:translate3d(-12px,0,0)}50%{transform:translate3d(3px,0,0)}70%{transform:translate3d(-1px,0,0)}90%{transform:translate3d(1px,0,0)}to{transform:translateZ(0)}}@keyframes shake-left-sticker{0%{transform:translateZ(0)}10%{transform:translate3d(-15px,0,0)}30%{transform:translate3d(12px,0,0)}50%{transform:translate3d(-3px,0,0)}70%{transform:translate3d(1px,0,0)}90%{transform:translate3d(-1px,0,0)}to{transform:translateZ(0)}}.shake{transform:translateZ(0)}.shake:not([data-direction=reverse]){animation:shake-right 1.8s ease both}.shake[data-direction=reverse]{animation:shake-left 1.8s ease both}.shake_sticker{transform:translateZ(0)}.shake_sticker:not([data-direction=reverse]){animation:shake-right-sticker .65s cubic-bezier(0,.6,0,1)}.shake_sticker[data-direction=reverse]{animation:shake-left-sticker .65s cubic-bezier(0,.6,0,1)}body{overflow:overlay}::-webkit-scrollbar{-webkit-appearance:none;height:15px;width:15px}::-webkit-scrollbar-corner{background:#0000}:hover::-webkit-scrollbar,[data-scrolling-timer-id]::-webkit-scrollbar{display:block}:hover::-webkit-scrollbar-track,[data-scrolling-timer-id]::-webkit-scrollbar-track{background-clip:padding-box;border:4px solid #0000;border-radius:10px}:hover::-webkit-scrollbar-track:hover,[data-scrolling-timer-id]::-webkit-scrollbar-track:hover{background-color:#b7b7b766}:hover::-webkit-scrollbar-thumb,[data-scrolling-timer-id]::-webkit-scrollbar-thumb{background-clip:padding-box;background-color:#b7b7b7;border:4px solid #0000;border-radius:10px}body,html{box-sizing:border-box;display:flex}#root,.app{height:100%;width:100%}.share_multiple_profile-module__share_multiple_profile_wrap__p0lYA{position:relative}.share_multiple_profile-module__share_multiple_profile_wrap__p0lYA [class*=profileImage][class*=thumbnail_wrap]{border-radius:50%;height:18px;width:18px}.share_multiple_profile-module__share_multiple_profile_wrap__p0lYA [class*=profileImage][class*=thumbnail_wrap]:first-child{-webkit-clip-path:path("M0,0 L18,0 L18,7.3 A9,9 0 0,0 7.3,18 L0 18 z");clip-path:path("M0,0 L18,0 L18,7.3 A9,9 0 0,0 7.3,18 L0 18 z");-webkit-transform:translate3d(-3px,-3px,0);transform:translate3d(-3px,-3px,0)}.share_multiple_profile-module__share_multiple_profile_wrap__p0lYA [class*=profileImage][class*=thumbnail_wrap]+[class*=profileImage][class*=thumbnail_wrap]{left:6px;position:absolute;top:6px}.categoryLayout-module__category_wrap__31191{background-color:#fff;box-sizing:border-box;padding-top:20px;z-index:5}[class*=noticeBanner]+[class*=friendlist] .categoryLayout-module__category_wrap__31191:first-child{padding-top:20px}.categoryLayout-module__category_wrap__31191:first-child{padding-top:0}.categoryLayout-module__button_category__nqIZM{word-wrap:break-word;align-items:center;box-sizing:border-box;color:#949494;cursor:pointer;display:grid;font-size:12px;gap:3px;grid-template-columns:auto minmax(0,-webkit-max-content);grid-template-columns:auto minmax(0,max-content);line-height:20px;min-height:20px;padding:0 17px 0 22px;width:100%;word-break:break-word}.categoryLayout-module__button_category__nqIZM .categoryLayout-module__title__iV725{display:flex}.categoryLayout-module__button_category__nqIZM .categoryLayout-module__text__crUcb{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;margin-right:3px;overflow:hidden;overflow-wrap:anywhere}.categoryLayout-module__button_category__nqIZM .categoryLayout-module__count__8h25Q{flex:0 0 auto}.categoryLayout-module__button_category__nqIZM[aria-expanded=true] .categoryLayout-module__icon_arrow__kdyor{-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}.checkbox-module__label__oUor4{align-items:center;cursor:inherit;display:inline-flex;justify-content:center;min-height:30px;min-width:30px}.checkbox-module__input_checkbox__og7mx:checked+.checkbox-module__icon_checkbox__CN72X:before{background-color:#06c755;border-color:#06c755}.checkbox-module__input_checkbox__og7mx:checked+.checkbox-module__icon_checkbox__CN72X svg{color:#fff}.checkbox-module__input_checkbox__og7mx[disabled]+.checkbox-module__icon_checkbox__CN72X:before{background-color:#f5f5f5;border:1px solid #e4e4e4}.checkbox-module__input_checkbox__og7mx[disabled]+.checkbox-module__icon_checkbox__CN72X svg{display:none}.checkbox-module__input_checkbox__og7mx[disabled]~.checkbox-module__text__x9A12{color:#e4e4e4}.checkbox-module__icon_checkbox__CN72X{align-items:center;border-radius:50%;display:flex;flex:0 0 auto;height:20px;justify-content:center;position:relative;width:20px;z-index:1}.checkbox-module__icon_checkbox__CN72X:before{background-color:#0006;border-radius:inherit;bottom:0;content:"";left:0;position:absolute;right:0;top:0}.checkbox-module__icon_checkbox__CN72X svg{color:#fff6;height:12px;width:12px;z-index:1}.checkbox-module__text__x9A12{font-size:15px;line-height:22px;margin-left:8px}:has(>.friendlistItem-module__item__1tuZn:not([aria-selected=true]) button[role=link]:focus) .friendlistItem-module__item__1tuZn[aria-current=true] button[role=link]:not(:focus){background-color:#0000}.friendlistItem-module__item__1tuZn{align-items:center;box-sizing:border-box;display:flex;height:57px;padding:0 18px;position:relative;z-index:1}.friendlistItem-module__item__1tuZn[role=button]{cursor:pointer}.friendlistItem-module__item__1tuZn:not([aria-selected=true]) button[role=link]:focus,.friendlistItem-module__item__1tuZn[aria-current=true] button[role=link]{background-color:#0000000d}.friendlistItem-module__item__1tuZn:not([aria-current=true]):hover button[role=link],.friendlistItem-module__item__1tuZn:not([aria-current=true])[aria-selected=true] button[role=link]{background-color:rgba(0,0,0,.035)}.friendlistItem-module__item__1tuZn[aria-busy=true] img{display:none}.friendlistItem-module__item__1tuZn[aria-busy=true] p,.friendlistItem-module__item__1tuZn[aria-busy=true] span{background:#efefef;color:#0000}.friendlistItem-module__item__1tuZn[aria-busy=true] time{visibility:hidden}.friendlistItem-module__item__1tuZn:hover .friendlistItem-module__button_delete__fNXrw,.friendlistItem-module__item__1tuZn:hover .friendlistItem-module__button_leave__-WNEG,.friendlistItem-module__item__1tuZn:hover .friendlistItem-module__button_unblock__j2ToL,.friendlistItem-module__item__1tuZn:hover .friendlistItem-module__button_unhidden__OeIN-{display:inline-flex;position:relative;z-index:2}.friendlistItem-module__item__1tuZn[data-disabled=true]{opacity:.3;pointer-events:none}.friendlistItem-module__item__1tuZn[data-type=checkbox]{height:50px}.friendlistItem-module__item__1tuZn[data-type=checkbox]:hover{background-color:#0000}.friendlistItem-module__item__1tuZn[data-state=new],.friendlistItem-module__item__1tuZn[data-state=new]:hover{background-color:#feffea}.friendlistItem-module__item__1tuZn .friendlistItem-module__button_delete__fNXrw,.friendlistItem-module__item__1tuZn .friendlistItem-module__button_unblock__j2ToL,.friendlistItem-module__item__1tuZn .friendlistItem-module__button_unhidden__OeIN-{display:none;flex:0 0 auto;height:28px;padding:0 14px}.friendlistItem-module__item__1tuZn .friendlistItem-module__button_unblock__j2ToL,.friendlistItem-module__item__1tuZn .friendlistItem-module__button_unhidden__OeIN-{margin-left:auto}.friendlistItem-module__item__1tuZn .friendlistItem-module__button_unblock__j2ToL+.friendlistItem-module__button_delete__fNXrw,.friendlistItem-module__item__1tuZn .friendlistItem-module__button_unhidden__OeIN-+.friendlistItem-module__button_delete__fNXrw{margin-left:5px}.friendlistItem-module__item__1tuZn div[class*=thumbnail_wrap]{border-radius:50%;height:43px;width:43px}.friendlistItem-module__item__1tuZn div[class*=thumbnail_wrap] button[class*=button_profile]{position:relative;z-index:2}.friendlistItem-module__item__1tuZn[data-type=checkbox] .friendlistItem-module__item__1tuZn div[class*=thumbnail_wrap]{height:38px;width:38px}.friendlistItem-module__info__89Stz{display:flex;flex:1 1 auto;flex-direction:column;justify-content:center;margin:0 14px}.friendlistItem-module__name_box__fUKhX{color:#1f1f1f;display:flex;font-size:14px;font-weight:500;pointer-events:none}.friendlistItem-module__name_box__fUKhX[role=button]{cursor:pointer;pointer-events:auto}.friendlistItem-module__item__1tuZn[data-type=checkbox] .friendlistItem-module__name_box__fUKhX{font-size:12px}.friendlistItem-module__name_box__fUKhX .friendlistItem-module__text__YxSko{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;overflow-wrap:anywhere;position:relative;z-index:2}.friendlistItem-module__name_box__fUKhX .friendlistItem-module__member_count__Eh52G{margin-left:4px}.friendlistItem-module__description__y36vl{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#777;display:-webkit-box;font-size:13px;margin-top:4px;overflow:hidden;overflow-wrap:anywhere;position:relative;z-index:2}.friendlistItem-module__description__y36vl[role=button]{cursor:pointer}.friendlistItem-module__item__1tuZn[data-type=checkbox] .friendlistItem-module__description__y36vl{font-size:11px}.friendlistItem-module__button_friend__V06gC{bottom:0;left:0;position:absolute;right:0;top:0;z-index:2}.friendlistItem-module__button_add__ykPqt{align-items:center;display:inline-flex;height:32px;justify-content:center;margin:0 -8px 0 auto;position:relative;width:32px;z-index:2}.friendlistItem-module__button_add__ykPqt .friendlistItem-module__icon__y-b0z{color:#c8c8c8;height:19px;width:19px}.friendlistItem-module__button_leave__-WNEG{box-sizing:initial;display:none;height:14px;padding:2px;position:relative;width:14px;z-index:2}.friendlistItem-module__button_leave__-WNEG .friendlistItem-module__icon__y-b0z{color:#b7b7b7;height:inherit;width:inherit}.friendlistItem-module__checkbox__JtJwS{width:20px}.friendlistItem-module__checkbox__JtJwS label{bottom:0;height:100%;left:0;position:absolute;right:0;top:0;z-index:1}.friendlistItem-module__checkbox__JtJwS i[class*=icon]{height:18px;position:absolute;right:18px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:18px}.friendlistItem-module__checkbox__JtJwS i[class*=icon]:before{background-color:#fff;border:1px solid #c8c8c8}.friendlistItem-module__button_friendlist_item__xoWur{bottom:0;left:0;position:absolute;right:0;top:0;z-index:1}.button-module__button__NBD6v{display:inline-flex;height:42px;padding:0 10px;position:relative}.button-module__button__NBD6v[data-shape=contained]{align-items:center;background-color:#fff;border:1px solid #e3e3e4;border-radius:4px;color:#1f1f1f;font-size:12px;font-weight:600;justify-content:center}.button-module__button__NBD6v[data-shape=contained]:hover{background-color:#f6f6f8}.button-module__button__NBD6v[data-shape=contained]:active{background-color:#fff}.button-module__button__NBD6v[data-shape=contained][data-color=primary]{background-color:#07b53b;border-color:#0000;color:#fff}.button-module__button__NBD6v[data-shape=contained][data-color=primary]:not(:disabled):hover{background-color:#1fc04f}.button-module__button__NBD6v[data-shape=contained][data-color=primary]:not(:disabled):active{background-color:#07b53b}.button-module__button__NBD6v[data-shape=contained]:disabled{background-color:#c8c8c8}.button-module__button__NBD6v[data-flexible=fixed]{width:100%}.button-module__button__NBD6v[data-flexible=flexible]{padding:0 20px}.button-module__text__sF0fb{word-wrap:break-word;line-height:1;word-break:break-word}.friendlist-module__list_wrap__IeJXY{display:flex;flex:1 1 auto;flex-direction:column;grid-area:list;height:100%;overflow-y:overlay}.friendlist-module__list_wrap__IeJXY:last-child{grid-column:2/4}.friendlist-module__list_wrap__IeJXY[data-type=checkbox] [class*=category_wrap]{border-top:1px solid #efefef;padding-top:7px}.friendlist-module__list_wrap__IeJXY[data-type=checkbox] [class*=category_wrap]:not(:first-child){padding-top:4px}.friendlist-module__list_wrap__IeJXY>div[class*=input_box]{background-color:#fff;box-sizing:border-box;left:0;padding:34px 18px 12px;position:-webkit-sticky;position:sticky;top:0;z-index:1}.friendlist-module__list_wrap__IeJXY[data-type=checkbox] div[class*=input_box],.friendlist-module__list_wrap__IeJXY[data-type=invite] div[class*=input_box]{padding:6px 9px}.friendlist-module__list_wrap__IeJXY[data-type=checkbox] div[class*=input_box] label,.friendlist-module__list_wrap__IeJXY[data-type=invite] div[class*=input_box] label{background-color:#fff;border:1px solid #dfdfdf}.friendlist-module__list_wrap__IeJXY[data-type=checkbox] div[class*=input_box] input,.friendlist-module__list_wrap__IeJXY[data-type=invite] div[class*=input_box] input{height:28px}.friendlist-module__action_box__gj7Zy{background-color:#fff;box-sizing:border-box;left:0;padding:30px 0 15px;position:-webkit-sticky;position:sticky;top:0;z-index:1}.friendlist-module__list_wrap__IeJXY[data-type=invite] .friendlist-module__action_box__gj7Zy{border-top:1px solid #efefef;padding:5px 0}.friendlist-module__list__Z-8nt{overflow-y:overlay}.friendlist-module__inner__d3xFH,.friendlist-module__list__Z-8nt{display:flex;flex:1 1 auto;flex-direction:column}.friendlist-module__inner__d3xFH>a{box-sizing:border-box;display:inherit;width:inherit}.profileImage-module__thumbnail_wrap__0bK7m{border-radius:inherit;height:inherit;position:relative;width:inherit}.profileImage-module__thumbnail_wrap__0bK7m .profileImage-module__icon_badge__jMxlp{bottom:0;position:absolute;right:0}.profileImage-module__thumbnail_wrap__0bK7m .profileImage-module__icon_badge__jMxlp:before{border-radius:50%;bottom:.5px;box-shadow:0 0 0 2px #fff;box-sizing:border-box;content:"";left:.5px;position:absolute;right:.5px;top:.5px}.profileImage-module__thumbnail_wrap__0bK7m[data-state=new]:before{background-color:#07b53b;border-radius:50%;content:"";height:5px;position:absolute;right:0;top:0;width:5px}.profileImage-module__button_profile__GqKue{border-radius:inherit;cursor:pointer;height:inherit;width:inherit}.profileImage-module__thumbnail_area__nqIpB{background-color:#fff;border-radius:inherit;box-sizing:border-box;display:grid;gap:1px;grid-auto-flow:dense;grid-template-columns:repeat(auto-fit,minmax(calc(50% - 1px),1fr));grid-template-rows:repeat(auto-fit,minmax(calc(50% - 1px),1fr));height:inherit;overflow:hidden;width:inherit}.profileImage-module__thumbnail__Q6OsR{background-color:#efefef;overflow:hidden;position:relative}.profileImage-module__thumbnail__Q6OsR:nth-child(3):last-child{grid-column:2/span 1}.profileImage-module__thumbnail__Q6OsR:nth-last-child(3):first-child{grid-row:1/span 2}.profileImage-module__thumbnail__Q6OsR img{height:100%;left:50%;object-fit:cover;position:absolute;top:50%;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0);width:100%}.profileImage-module__thumbnail__Q6OsR img.is_loading{background-image:none}.profileImage-module__button_action__JoaC2{align-items:center;background-color:#fff;border:1px solid #dbdce1;border-radius:50%;bottom:0;box-sizing:border-box;display:inline-flex;height:25px;justify-content:center;line-height:0;position:absolute;right:0;width:25px}.profileImage-module__button_action__JoaC2 .profileImage-module__icon_camera__gUxaF{color:#808997;height:13px;margin-top:-1px;width:13px}.notificationStateToast-module__notification_toast__b7WP7{align-items:center;background-color:#131313cc;border-radius:5px;color:#fff;display:flex;flex-direction:column;height:101px;justify-content:center;pointer-events:none;width:101px;z-index:10}.notificationStateToast-module__notification_toast__b7WP7[data-visible]{opacity:1}.notificationStateToast-module__notification_toast__b7WP7[data-visible=false]{opacity:0;transition:opacity .15s ease-out,visibility 0s .15s,z-index 0s .15s;visibility:hidden;z-index:-1}.notificationStateToast-module__notification_toast__b7WP7[data-visible=true]{opacity:1;transition:opacity 50ms linear;visibility:visible;z-index:10}.notificationStateToast-module__icon__hvseN{font-size:25px}.notificationStateToast-module__text__PGuSE{font-size:13px;margin-top:6px}@-webkit-keyframes guideTooltip-module__show-tooltip__ROBrn{0%{opacity:0;visibility:hidden}to{opacity:1;visibility:visible}}@keyframes guideTooltip-module__show-tooltip__ROBrn{0%{opacity:0;visibility:hidden}to{opacity:1;visibility:visible}}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw{position:unset}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement*=top]:after{border-top:7px solid var(--tooltip-bg-color);top:100%}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement*=bottom]:after{border-bottom:7px solid var(--tooltip-bg-color);bottom:100%}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=bottom]:after,[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=top]:after{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=bottom-end]:after,[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=top-end]:after{right:0;-webkit-transform:translateX(-100%);transform:translateX(-100%)}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement*=left]:after{border-left:7px solid var(--tooltip-bg-color);left:100%}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement*=right]:after{border-right:7px solid var(--tooltip-bg-color);right:100%}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=left]:after,[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=right]:after{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=left-end]:after,[class*=floating_ui_tooltip] .guideTooltip-module__tooltip_wrap__Tq1qw[data-placement=right-end]:after{bottom:0;-webkit-transform:translateY(-100%);transform:translateY(-100%)}.guideTooltip-module__tooltip_wrap__Tq1qw{--tooltip-bg-color:#6388ff;--tooltip-border-color:#0000;--tooltip-text-color:#fff;-webkit-animation:guideTooltip-module__show-tooltip__ROBrn .5s forwards;animation:guideTooltip-module__show-tooltip__ROBrn .5s forwards;background-color:var(--tooltip-bg-color);border:1px solid var(--tooltip-border-color);border-radius:2px;box-sizing:border-box;color:var(--tooltip-text-color);display:inline-flex;font-size:12px;line-height:16px;padding:10px 11px;pointer-events:none;position:absolute;width:-webkit-max-content;width:max-content;z-index:1}.guideTooltip-module__tooltip_wrap__Tq1qw[data-delay=true]{-webkit-animation:guideTooltip-module__show-tooltip__ROBrn .5s .5s forwards;animation:guideTooltip-module__show-tooltip__ROBrn .5s .5s forwards;opacity:0;visibility:hidden}.guideTooltip-module__tooltip_wrap__Tq1qw[data-type=basic]{--tooltip-bg-color:#fff;--tooltip-border-color:#c8c8c8;--tooltip-text-color:#1f1f1f}.guideTooltip-module__tooltip_wrap__Tq1qw[data-type=basic]:after{content:none!important}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail=true]:after{border:6px solid #0000;content:"";position:absolute}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=top]{bottom:calc(100% + 12px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=bottom]{top:calc(100% + 12px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=bottom][data-tail-align=right],.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=top][data-tail-align=right]{right:calc(50% - 12px);-webkit-transform:translateX(6px);transform:translateX(6px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=bottom][data-tail-align=left],.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=top][data-tail-align=left]{left:calc(50% - 12px);-webkit-transform:translateX(-6px);transform:translateX(-6px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=bottom][data-tail-align=center],.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=top][data-tail-align=center]{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=right]{left:calc(100% + 12px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=left]{right:calc(100% + 12px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=left][data-tail-align=top],.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=right][data-tail-align=top]{top:calc(50% - 12px);-webkit-transform:translateY(-6px);transform:translateY(-6px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=left][data-tail-align=bottom],.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=right][data-tail-align=bottom]{bottom:calc(50% - 12px);-webkit-transform:translateY(6px);transform:translateY(6px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=left][data-tail-align=center],.guideTooltip-module__tooltip_wrap__Tq1qw[data-tooltip-position=right][data-tail-align=center]{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=top]:after{border-bottom:7px solid var(--tooltip-bg-color);bottom:100%}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=bottom]:after{border-top:7px solid var(--tooltip-bg-color);top:100%}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=right]:after{border-left:7px solid var(--tooltip-bg-color);left:calc(100% - 1px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=left]:after{border-right:7px solid var(--tooltip-bg-color);right:calc(100% - 1px)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-align=top]:after{top:12px}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-align=bottom]:after{bottom:12px}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-align=left]:after{left:12px}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-align=right]:after{right:12px}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=bottom][data-tail-align=center]:after,.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=top][data-tail-align=center]:after{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=left][data-tail-align=center]:after,.guideTooltip-module__tooltip_wrap__Tq1qw[data-tail-side=right][data-tail-align=center]:after{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.createChatButton-module__popover_wrap__CxRuU{display:inline-flex;opacity:1;transition:opacity .43s ease-in-out .7s}.createChatButton-module__popover_wrap__CxRuU[aria-hidden=true]{opacity:0;transition:opacity .43s ease-in-out,z-index 0s .43s;z-index:-1}.createChatButton-module__popover_wrap__CxRuU[aria-hidden=true] .createChatButton-module__button_create__-BK-p{pointer-events:none}.createChatButton-module__button_create__-BK-p{align-items:center;background:#06c755;border-radius:100px;box-shadow:0 1px 6px #0000001f;color:#fff;display:inline-flex;height:52px;justify-content:center;width:52px}.createChatButton-module__button_create__-BK-p[aria-expanded=true]+.createChatButton-module__popover_content__DG6zk{display:block}.createChatButton-module__icon_create__pLEwQ{height:22px;width:22px}.createChatButton-module__popover_content__DG6zk{background-color:#fff;border:1px solid #c8c8c8;border-radius:5px;box-shadow:0 0 10px 0 #0000001a;box-sizing:border-box;display:none;left:37px;min-width:107px;padding:6px 0;position:absolute;top:8px;-webkit-transform:translate3d(-100%,-100%,0);transform:translate3d(-100%,-100%,0);z-index:2}.createChatButton-module__action_list__zZqLv{align-items:center;display:grid}.createChatButton-module__action_list_item__I1EVN{align-items:center;color:#1f1f1f;display:inline-flex;font-size:13px;height:31px;white-space:nowrap;width:100%}.createChatButton-module__action_list_item__I1EVN:hover{background-color:#fafafa}.createChatButton-module__action_list_item__I1EVN .createChatButton-module__link__1CoG2{all:inherit;cursor:revert;gap:7px;padding:0 15px}.chatlist-module__tab__xaUJd{border-bottom:1px solid #ddd;box-sizing:border-box;grid-area:tab}.chatlist-module__chatlist_wrap__KtTpq{display:flex;flex:1 1 auto;flex-direction:column;grid-area:list;height:100%;overflow-y:overlay;position:relative}.chatlist-module__chatlist_wrap__KtTpq:last-child{grid-column:2/4}.chatlist-module__tab__xaUJd~.chatlist-module__chatlist_wrap__KtTpq .chatlist-module__search_box__enOMX{padding-top:14px}.chatlist-module__search_box__enOMX{background-color:#fff;box-sizing:border-box;left:0;padding:34px 18px 12px;position:-webkit-sticky;position:sticky;top:0;z-index:1}.chatlist-module__chatlist__qruAE,.chatlist-module__chatlist_inner__YtvQB{display:flex;flex:1 1 auto;flex-direction:column;overflow-y:overlay}.chatlist-module__chatlist_inner__YtvQB>a{box-sizing:border-box;display:inherit;width:inherit}.chatlist-module__create_chat_button__lADKP{bottom:17px;margin-left:auto;margin-top:-52px;position:-webkit-sticky;position:sticky;-webkit-transform:translate3d(-17px,0,0);transform:translate3d(-17px,0,0);z-index:20}:has(>.chatlistItem-module__chatlist_item__MOwxh:not([aria-selected=true]) button[role=link]:focus) .chatlistItem-module__chatlist_item__MOwxh[aria-current=true] button[role=link]:not(:focus){background-color:#0000}.chatlistItem-module__chatlist_item__MOwxh{box-sizing:border-box;display:flex;padding:9px 18px;position:relative;width:100%}.chatlistItem-module__chatlist_item__MOwxh:not([aria-selected=true]) button[role=link]:focus,.chatlistItem-module__chatlist_item__MOwxh[aria-current=true] button[role=link]{background-color:#0000000d}.chatlistItem-module__chatlist_item__MOwxh:not([aria-current=true]):hover button[role=link],.chatlistItem-module__chatlist_item__MOwxh:not([aria-current=true])[aria-selected=true] button[role=link]{background-color:rgba(0,0,0,.035)}.chatlistItem-module__chatlist_item__MOwxh[aria-busy=true] img{display:none}.chatlistItem-module__chatlist_item__MOwxh[aria-busy=true] p,.chatlistItem-module__chatlist_item__MOwxh[aria-busy=true] span{background:#efefef;color:#0000}.chatlistItem-module__chatlist_item__MOwxh[aria-busy=true] time{visibility:hidden}.chatlistItem-module__chatlist_item__MOwxh [class*=profileImage][class*=thumbnail_wrap] button[class*=button_profile]{position:relative;z-index:2}.chatlistItem-module__info__nHGhi{display:grid;flex:1 1 auto;gap:3px 0;grid-auto-flow:dense;grid-template-areas:"title date" "desc state";grid-template-columns:repeat(auto-fill,minmax(auto,100%));margin-left:14px;position:relative}.chatlistItem-module__title_box__aDNJD{align-self:flex-end;color:#1f1f1f;display:flex;font-size:14px;font-weight:500;grid-area:title;line-height:18px;overflow:hidden}.chatlistItem-module__title_box__aDNJD .chatlistItem-module__text__daDD3{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:flex;display:-webkit-box;flex:0 1 auto;overflow:hidden;overflow-wrap:anywhere}.chatlistItem-module__title_box__aDNJD .chatlistItem-module__icon_mute__HbsbO,.chatlistItem-module__title_box__aDNJD .chatlistItem-module__member_count__MbL2c{margin-left:4px}.chatlistItem-module__date__tG-MV{color:#b7b7b7;font-size:12px;grid-area:date;line-height:1;margin:3px 0 0 10px}.chatlistItem-module__description__JH3NE{grid-area:desc}.chatlistItem-module__description__JH3NE .chatlistItem-module__text__daDD3{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#777;display:-webkit-box;font-size:13px;line-height:16px;overflow:hidden;overflow-wrap:anywhere}.chatlistItem-module__description__JH3NE .chatlistItem-module__text__daDD3:first-child:last-child{-webkit-line-clamp:2;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;overflow-wrap:anywhere}.chatlistItem-module__description__JH3NE .chatlistItem-module__text__daDD3+.chatlistItem-module__mention__zCe-o{margin-top:1px}.chatlistItem-module__description__JH3NE .chatlistItem-module__mention__zCe-o{color:#2f59cc;font-size:12px;line-height:15px}.chatlistItem-module__icon_error__mSymZ,.chatlistItem-module__icon_new__DuDjB,.chatlistItem-module__message_count__FRt4s{bottom:4px;grid-area:state;position:absolute;right:2px}.chatlistItem-module__message_count__FRt4s{align-items:center;background-color:#07b53b;border-radius:10px;box-sizing:border-box;color:#fff;display:flex;font-size:12px;height:19px;justify-content:center;line-height:1;min-width:19px;padding:0 6px}.chatlistItem-module__icon_arrow__6ci1Z{align-items:center;grid-area:arrow;margin-left:10px;-webkit-transform:translateX(5px);transform:translateX(5px)}.chatlistItem-module__button_chatlist_item__pcmtA{bottom:0;left:0;position:absolute;right:0;top:0;z-index:1}.errorMessage-module__message_area__Hyidf{align-items:center;box-sizing:border-box;display:flex;flex:1 1 auto;flex-direction:column;font-size:13px;justify-content:center;padding:0 40px;text-align:center}.errorMessage-module__title__qwAlM{color:#1f1f1f;line-height:17px}.errorMessage-module__title__qwAlM+.errorMessage-module__description__TlR0-{margin-top:6px}.errorMessage-module__description__TlR0-{color:#949494;line-height:18px}.folderSettingModal-module__modal__cBdH-{background-color:#fff;box-sizing:border-box;height:auto;padding:15px;position:absolute;width:100%}.folderSettingModal-module__folder_list_wrap__0LBW3{display:flex}.folderSettingModal-module__folder_list__xEljX{box-sizing:border-box;display:inline-flex;flex-wrap:wrap;gap:8px 0;margin-left:-4px;padding-right:10px}.folderSettingModal-module__folder_list_item__wwN0m{display:inline-flex;font-size:13px;line-height:1;padding:0 4px;position:relative}.folderSettingModal-module__folder_list_item__wwN0m[data-drag-position=after]:after,.folderSettingModal-module__folder_list_item__wwN0m[data-drag-position=before]:before{border-left:2px solid #c2c2c2;border-radius:3px;bottom:2px;content:"";position:absolute;top:2px}.folderSettingModal-module__folder_list_item__wwN0m[data-drag-position=before]:before{left:1px;-webkit-transform:translateX(-100%);transform:translateX(-100%)}.folderSettingModal-module__folder_list_item__wwN0m[data-drag-position=after]:after{right:1px;-webkit-transform:translateX(100%);transform:translateX(100%)}.folderSettingModal-module__folder_list_item__wwN0m .folderSettingModal-module__text__yHbAL{align-items:center;border:1px dashed #dfdfdf;border-radius:5px;box-sizing:border-box;display:inherit;height:32px;justify-content:center;padding:0 7px}.folderSettingModal-module__folder_list_item__wwN0m .folderSettingModal-module__text__yHbAL[draggable=true]{cursor:grab;position:relative}.folderSettingModal-module__folder_list_item__wwN0m .folderSettingModal-module__text__yHbAL[draggable=true]:active{border-color:#dcdcdc;color:#dcdcdc;cursor:grabbing}.folderSettingModal-module__folder_list_item__wwN0m .folderSettingModal-module__text__yHbAL[draggable=true]:active .folderSettingModal-module__button_delete__IV5XI{color:inherit}.folderSettingModal-module__button_create__frCwe{align-items:center;border:1px solid #efefef;border-radius:5px;display:inline-flex;height:32px;justify-content:center;width:32px}.folderSettingModal-module__button_create__frCwe:hover{border-color:#dfdfdf}.folderSettingModal-module__button_create__frCwe .folderSettingModal-module__icon_plus__fEaTS{height:10px;width:10px}.folderSettingModal-module__button_create__frCwe path{fill:currentColor}.folderSettingModal-module__button_delete__IV5XI{box-sizing:border-box;color:#c8c8c8;display:inline-flex;height:10px;margin-left:5px;width:10px}.folderSettingModal-module__button_delete__IV5XI .folderSettingModal-module__icon_close__ZTzBM{height:inherit;width:inherit}.folderSettingModal-module__button_delete__IV5XI path{color:currentColor}.folderSettingModal-module__info__4nU8e{align-items:center;display:flex;gap:0 10px;margin-top:15px}.folderSettingModal-module__description__UvYW9{color:#c3c3c3;font-size:11px;letter-spacing:-.05px;line-height:16px}.folderSettingModal-module__link_info__BZUlJ{display:inline-flex;flex:0 0 auto;margin-left:auto}.folderTab-module__tab__YXsQR{box-sizing:border-box;padding:14px 2px 0;position:relative;z-index:2}.folderTab-module__tab_list__hjBJ2{display:flex;overflow-x:overlay}.folderTab-module__tab_item__7dbuI{box-sizing:border-box;color:#b7b7b7;display:inline-flex;flex:0 0 auto;font-size:13px;font-weight:500;padding:10px 10px 12px;position:relative}.folderTab-module__tab_item__7dbuI[aria-selected=true]{color:#1f1f1f}.folderTab-module__tab_item__7dbuI[aria-selected=true]:after{border-bottom:2px solid;bottom:0;content:"";left:10px;position:absolute;right:10px}.folderTab-module__tab_item__7dbuI[data-state=new]:before{background-color:#07b53b;border-radius:50%;content:"";height:4px;position:absolute;right:2px;top:8px;width:4px}.folderTab-module__button_option__zEzPW{align-items:center;box-sizing:border-box;display:inline-flex;margin-left:12px;padding:5px 10px 5px 5px;position:-webkit-sticky;position:sticky;right:0}.folderTab-module__button_option__zEzPW:before{background:linear-gradient(90deg,#ffffff80,#fff 30%);bottom:0;content:"";padding-left:10px;position:absolute;right:0;top:0;width:100%;z-index:-1}.folderTab-module__icon_option__AN0Jh{color:#1f1f1f;height:16px;width:16px}.folderTab-module__icon_option__AN0Jh path{fill:currentColor}div[class*=gnb]~.folderTab-module__modal_wrap__Jky0s{left:62px}div[class*=gnb]~.folderTab-module__modal_wrap__Jky0s:after{bottom:0;content:"";left:0;position:fixed;right:0;top:0;z-index:-1}.selectedlist-module__list__1O5cG{flex:1 1 auto;flex-direction:row;overflow-y:overlay;padding:10px}.selectedlist-module__inner__88riS{display:flex;flex-wrap:wrap;gap:5px}.selectFriendPopup-module__popup__Br4b-{background-color:#fff;border-top:1px solid #dfdfdf;box-sizing:border-box;display:flex;flex-direction:column;height:100%}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__contents__oa4pD{flex-direction:column}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__friend_list_area__mjlRL{flex:1 1 auto}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__friend_list_area__mjlRL div[class*=input_box]{padding:10px 13px 17px}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__friend_list_area__mjlRL div[class*=input_box] input[class*=searchInput]{height:37px}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__friend_list_area__mjlRL [class*=categoryLayout][class*=button_category]{color:#000;margin-bottom:5px;padding:0 16px}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__friend_list_area__mjlRL [class*=profileImage][class*=thumbnail_wrap]{height:37px;width:37px}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__selected_list_area__-gcmo{border-top:1px solid #dfdfdf;flex:0 0 auto}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__selected_list_area__-gcmo:empty{display:none}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__selected_list_area__-gcmo:before{content:none}.selectFriendPopup-module__header__-4JlD{background-color:#eff1f6;box-sizing:border-box;padding:10px}.selectFriendPopup-module__contents__oa4pD{display:flex;flex:1 1 auto;overflow-y:overlay}.selectFriendPopup-module__friend_list_area__mjlRL{display:flex;flex:0 0 50%;overflow-y:overlay}.selectFriendPopup-module__friend_list_area__mjlRL .search_text{color:#e56730}.selectFriendPopup-module__selected_list_area__-gcmo{box-sizing:border-box;display:flex;flex:0 0 50%;position:relative}.selectFriendPopup-module__popup__Br4b-[data-type=share] .selectFriendPopup-module__selected_list_area__-gcmo{background-color:#f5f5f5;max-height:115px}.selectFriendPopup-module__selected_list_area__-gcmo:before{border-left:1px solid #dfdfdf;bottom:0;content:"";left:0;position:absolute;top:0}.selectFriendPopup-module__selected_list_item__di-dP .selectFriendPopup-module__inner__90oHj{display:flex}.selectFriendPopup-module__selected_list_item__di-dP .selectFriendPopup-module__thumbnail__ZbRPz{border-radius:50%;height:20px;width:20px}.selectFriendPopup-module__footer__Qn6Yb{border-top:1px solid #dfdfdf;box-sizing:border-box;display:flex;flex:0 0 48px;flex-direction:column;padding:10px 15px}.selectFriendPopup-module__button_group__Icwd1{align-items:center;display:flex;gap:5px;justify-content:center}.selectFriendPopup-module__button_group__Icwd1:not(:first-child){border-top:1px solid #dfdfdf;margin:10px -15px 0;padding-top:10px}.selectFriendPopup-module__button_group__Icwd1 button{height:30px;padding:0 36px}.selectFriendPopup-module__button_group__Icwd1 button[data-color=primary]{order:var(--positive-button-order)}.selectedlistItem-module__item__1Szf6{align-items:center;background-color:#fff;border:1px solid #efefef;border-radius:30px;box-sizing:border-box;display:inline-flex;justify-content:center;padding:3px 6px;position:relative}.selectedlistItem-module__item__1Szf6 .thumbnail{border-radius:50%;flex:0 0 auto;height:18px;width:18px}.selectedlistItem-module__name__wRnIp{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#3c3c3c;display:-webkit-box;flex:1 1 auto;font-size:11px;margin-left:4px;overflow:hidden;overflow-wrap:anywhere;width:100%}.selectedlistItem-module__button_close__hzeCX{bottom:0;left:0;position:absolute;right:0;top:0}.selectedlistItem-module__icon__heRio{color:#c8c8c8;flex:0 0 auto;height:10px;margin-left:5px;width:10px}.editInput-module__edit_box__ygtSs{display:flex;flex:1 1 auto;height:25px;position:relative}button[class*=button_edit]~.editInput-module__edit_box__ygtSs{display:none}button[class*=button_edit][aria-pressed=true]~.editInput-module__edit_box__ygtSs{display:flex}.editInput-module__edit_box__ygtSs:before{border:1px solid #c8c8c8;bottom:0;content:"";left:0;pointer-events:none;position:absolute;right:0;top:0}.editInput-module__edit_box__ygtSs .editInput-module__label_text__5j1Nn{align-items:center;background-color:#f6f6f6;display:inline-flex;flex:1 1 auto;height:100%;padding:0 5px}.editInput-module__edit_box__ygtSs .editInput-module__input_text__X58rV{color:#3f3f3f;flex:1 1 auto;font-size:12px;width:100%}.editInput-module__edit_box__ygtSs .editInput-module__input_text__X58rV::-webkit-input-placeholder{color:#b7b7b7}.editInput-module__edit_box__ygtSs .editInput-module__input_text__X58rV::placeholder{color:#b7b7b7}.editInput-module__edit_box__ygtSs .editInput-module__input_text__X58rV:placeholder-shown~.editInput-module__button_reset__5QNsv{display:none}.editInput-module__edit_box__ygtSs .editInput-module__count__GpSgr{color:#b7b7b7;flex:0 0 auto;font-size:10px;margin-left:5px}.editInput-module__edit_box__ygtSs .editInput-module__button_reset__5QNsv{background-color:#f6f6f6;display:flex}.editInput-module__edit_box__ygtSs .editInput-module__button_cancel__A7CNA,.editInput-module__edit_box__ygtSs .editInput-module__button_confirm__r46cQ{align-items:center;background-color:#fcfcfc;border-left:1px solid #c8c8c8;box-sizing:border-box;display:inline-flex;height:100%;justify-content:center;width:25px}.editInput-module__edit_box__ygtSs .editInput-module__button_cancel__A7CNA:hover .editInput-module__icon__UT9Fu,.editInput-module__edit_box__ygtSs .editInput-module__button_confirm__r46cQ:hover .editInput-module__icon__UT9Fu{color:#464f69}.editInput-module__edit_box__ygtSs .editInput-module__button_cancel__A7CNA .editInput-module__icon__UT9Fu,.editInput-module__edit_box__ygtSs .editInput-module__button_confirm__r46cQ .editInput-module__icon__UT9Fu{background-size:contain;color:#858fa8;height:12px;width:12px}.autoAddMember-module__title__LXY6Z{display:inline-flex;font-size:13px;font-weight:500}.autoAddMember-module__title__LXY6Z .autoAddMember-module__link__KHY0U{align-items:center;display:inline-flex;height:15px;justify-content:center;margin-left:5px;width:15px}.autoAddMember-module__title__LXY6Z .autoAddMember-module__icon__0Mnfb{color:#b7b7b7}.autoAddMember-module__description_box__H3wQP{color:#949494;display:flex;margin-top:4px}.autoAddMember-module__description_box__H3wQP .autoAddMember-module__description__YIUMY{word-wrap:break-word;flex:1 1 auto;font-size:12px;line-height:17px;word-break:break-word}.autoAddMember-module__checkbox__1CdTe{flex:0 0 auto}.autoAddMember-module__checkbox__1CdTe i{border-radius:4px;height:17px;width:17px}.autoAddMember-module__checkbox__1CdTe i:before{background-color:#fff;border:1px solid #dfdfdf}.chatroomProfileEdit-module__profile_edit__-ZnEh{align-items:center;display:flex;gap:10px}.chatroomProfileEdit-module__profile_edit__-ZnEh .thumbnail{border-radius:50%;flex:0 0 auto;height:60px;width:60px}:root{--chatroom-notice-absolute-top:0}.chatroomNotice-module__notice_area__2CN4p{background-color:#fff;box-shadow:0 2px 4px 0 #0000001a;display:flex;flex-direction:column;left:0;max-height:100%;overflow-y:overlay;position:absolute;right:0;top:0;-webkit-transform:translateZ(0);transform:translateZ(0);z-index:15}div[class*=push_notice_area]~.chatroomNotice-module__notice_area__2CN4p:not([data-fold=true]){max-height:calc(100% - var(--chatroom-notice-absolute-top));top:var(--chatroom-notice-absolute-top)}.chatroomNotice-module__notice_area__2CN4p[data-fold=true]{background-color:#0000;box-shadow:none;display:inline-flex;height:0;left:auto;overflow:overlay;position:absolute;right:14px;top:10px}.chatroomNotice-module__notice_area__2CN4p[data-fold=true] .chatroomNotice-module__action_box__7v0G4,.chatroomNotice-module__notice_area__2CN4p[data-fold=true] .chatroomNotice-module__button_expanded__FougN,.chatroomNotice-module__notice_area__2CN4p[data-fold=true] .chatroomNotice-module__notice_list__7V2dh{display:none}.chatroomNotice-module__notice_list__7V2dh{overflow-y:overlay;position:relative}.chatroomNotice-module__button_expanded__FougN{align-items:center;color:#777;display:inline-flex;height:24px;justify-content:center;position:absolute;right:1px;top:27%;width:24px;z-index:2}.chatroomNotice-module__button_expanded__FougN[aria-expanded=true]{bottom:5px;position:fixed;right:3px;top:auto}.chatroomNotice-module__button_expanded__FougN[aria-expanded=true] .chatroomNotice-module__icon_close__2N4Y-{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.chatroomNotice-module__button_expanded__FougN .chatroomNotice-module__icon_close__2N4Y-{height:12px;width:12px}.chatroomNotice-module__button_expanded__FougN[aria-expanded=false]~.chatroomNotice-module__notice_list__7V2dh .chatroomNotice-module__notice_item__Knswc{min-height:50px}.chatroomNotice-module__button_expanded__FougN[aria-expanded=false]~.chatroomNotice-module__notice_list__7V2dh .chatroomNotice-module__notice_item__Knswc:first-child .chatroomNotice-module__icon_notice__0xzfB{margin-top:0}.chatroomNotice-module__button_expanded__FougN[aria-expanded=false]~.chatroomNotice-module__action_box__7v0G4,.chatroomNotice-module__button_expanded__FougN[aria-expanded=false]~.chatroomNotice-module__notice_list__7V2dh .chatroomNotice-module__notice_item__Knswc:first-child .chatroomNotice-module__name__9KQeW,.chatroomNotice-module__button_expanded__FougN[aria-expanded=false]~.chatroomNotice-module__notice_list__7V2dh .chatroomNotice-module__notice_item__Knswc:not(:first-child){display:none}.chatroomNotice-module__notice_item__Knswc{display:flex;position:relative}.chatroomNotice-module__notice_item__Knswc+.chatroomNotice-module__notice_item__Knswc:before{border-top:1px solid #0000000d;content:"";left:0;position:absolute;right:0;top:0}.chatroomNotice-module__button_notice__kFYxJ{align-items:center;box-sizing:border-box;display:inherit;flex:1 1 auto;min-height:50px;padding:0 32px 0 16px}.chatroomNotice-module__button_notice__kFYxJ .chatroomNotice-module__icon_notice__0xzfB{align-self:center;color:#4270ed;height:16px;margin:-18px 6px 0 0;width:16px}.chatroomNotice-module__info__0ZpDM{flex:1 1 auto;line-height:0;padding:10px 0}.chatroomNotice-module__description__ThFuu{-webkit-line-clamp:2;-webkit-box-orient:vertical;color:#1f1f1f;display:-webkit-box;font-size:13px;line-height:16px;overflow:hidden;overflow-wrap:anywhere}.chatroomNotice-module__name__9KQeW{color:#949494;display:inline-block;font-size:12px;line-height:15px;margin-top:3px}.chatroomNotice-module__action_box__7v0G4{align-items:center;background-color:#fff;border-top:1px solid #0000000d;bottom:0;display:flex;flex:0 0 auto;height:35px;padding:0 2px;position:-webkit-sticky;position:sticky;z-index:1}.chatroomNotice-module__button_action__eLbKG{color:#949494;font-size:12px;padding:0 8px}.chatroomNotice-module__button_unfold__glDn8{align-items:center;background-color:#fff;border:1px solid #0000001a;border-radius:50%;box-shadow:0 0 5px 0 #0000000d,0 2px 3px 0 #00000005;box-sizing:border-box;display:inline-flex;flex:0 0 auto;height:44px;justify-content:center;width:44px;z-index:10}.chatroomNotice-module__button_unfold__glDn8 .chatroomNotice-module__icon_notice__0xzfB{align-self:center;color:#4270ed;height:17px;margin-top:-1px;width:17px}.audioMessageContent-module__content_wrap__oWDgj{word-wrap:break-word;background-color:#efefef;border-radius:17.5px;box-sizing:border-box;display:inline-flex;flex-direction:column;max-width:690px;position:relative;word-break:break-word}[class*=message][data-direction=reverse]>[class*=content]>[class*=content]>[class*=content_inner]>.audioMessageContent-module__content_wrap__oWDgj{background-color:#c3f69d}.audioMessageContent-module__content_wrap__oWDgj:before{background-color:inherit;content:"";height:12px;left:-3px;-webkit-mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;position:absolute;top:0;width:12px}[class*=message][data-group=item] .audioMessageContent-module__content_wrap__oWDgj:before,[class*=message][data-group=start] .audioMessageContent-module__content_wrap__oWDgj:before{display:none}[class*=message][data-direction=reverse] .audioMessageContent-module__content_wrap__oWDgj:before{left:auto;right:-3px;-webkit-transform:scaleX(-1);transform:scaleX(-1)}.audioMessageContent-module__play_info__tmjOL{align-items:center;border-radius:17.5px;box-sizing:border-box;display:flex;height:50px;justify-content:space-between;padding:0 11px;position:relative;width:131px}.audioMessageContent-module__progress__1V-57{-webkit-appearance:none;border-radius:17.5px;bottom:0;height:100%;left:0;overflow:hidden;pointer-events:none;position:absolute;right:0;top:0;width:100%}.audioMessageContent-module__progress__1V-57::-webkit-progress-bar{background-color:#0000}.audioMessageContent-module__progress__1V-57::-webkit-progress-value{background-color:#d1d3d6}[class*=message][data-direction=reverse] .audioMessageContent-module__progress__1V-57::-webkit-progress-value{background-color:#a0eb78}.audioMessageContent-module__tail__D5AGS{background-color:#d1d3d6;height:12px;left:-3px;-webkit-mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;position:absolute;top:0;width:12px}.audioMessageContent-module__progress__1V-57[value="0"]~.audioMessageContent-module__tail__D5AGS{background-color:inherit}[class*=message][data-group=item] .audioMessageContent-module__tail__D5AGS,[class*=message][data-group=start] .audioMessageContent-module__tail__D5AGS{display:none}[class*=message][data-direction=reverse] .audioMessageContent-module__tail__D5AGS{background-color:inherit;left:auto;right:-3px;-webkit-transform:scaleX(-1);transform:scaleX(-1)}[class*=message][data-direction=reverse] .audioMessageContent-module__progress__1V-57[value="100"]~.audioMessageContent-module__tail__D5AGS{background-color:#a0eb78}.audioMessageContent-module__button_action__o2bFY,.audioMessageContent-module__play_time__4Ko4D{position:relative;z-index:1}.audioMessageContent-module__button_action__o2bFY{color:#303030;display:inline-flex;padding:5px}.audioMessageContent-module__button_action__o2bFY:disabled{color:#c8c8c8}.audioMessageContent-module__button_action__o2bFY .audioMessageContent-module__icon__NBWqv{color:inherit;height:18px;width:18px}.audioMessageContent-module__play_time__4Ko4D{color:#1f1f1f;font-size:13px}:root{--message-font-size:13px}.chatroom-module__chatroom__eVUaK{border-left:1px solid #ddd;box-sizing:border-box;display:flex;flex-direction:column;grid-area:room;min-width:375px;overflow-y:overlay}.chatroom-module__chatroom__eVUaK[data-font-size=small]{--message-font-size:11px}.chatroom-module__chatroom__eVUaK[data-font-size=large]{--message-font-size:16px}.chatroom-module__chatroom__eVUaK[data-font-size=extra_large]{--message-font-size:18px}.chatroom-module__start_chat_box__J2tRp{word-wrap:break-word;margin:auto;padding:0 20px;text-align:center;word-break:keep-all}.chatroom-module__start_chat_box__J2tRp .chatroom-module__icon__UKzua{color:#0000001a;width:101px}.chatroom-module__start_chat_box__J2tRp .chatroom-module__icon__UKzua path{fill:currentColor}.chatroom-module__start_chat_box__J2tRp .chatroom-module__description__QC2Vo{color:#949494;font-size:13px;line-height:18px;margin-top:20px}.startChat-module__start_chat__zGtjv{align-items:center;display:flex;flex-direction:column;margin:auto}.startChat-module__start_chat__zGtjv .startChat-module__button_start__FjvEK{font-size:13px;font-weight:500;height:36px;margin-top:20px;padding:0 12px}.startChat-module__start_chat__zGtjv .thumbnail{border-radius:50%;height:80px;width:80px}.startChat-module__name__KH5un{color:#1f1f1f;font-size:14px;font-weight:500;line-height:17px;margin-top:10px}.toast-module__toast__lDwvo{border-radius:5px;box-sizing:border-box;display:inline-block;font-size:13px;max-width:100%;padding:0 20px;pointer-events:none;z-index:100}.toast-module__toast__lDwvo[role=button]{cursor:pointer;pointer-events:auto}.toast-module__toast__lDwvo[data-size=s]{font-size:12px;font-weight:400}.toast-module__toast__lDwvo[data-size=s] .toast-module__toast_inner__ZHGGn{padding:7px 15px}.toast-module__toast__lDwvo[data-size=s] .toast-module__toast_inner__ZHGGn .profile_image{height:23px;width:23px}.toast-module__toast__lDwvo[data-visible]{opacity:1}.toast-module__toast__lDwvo[data-visible=false]{opacity:0;transition:opacity .55s ease-out,visibility 0s .55s,z-index 0s .55s;visibility:hidden;z-index:-1}.toast-module__toast__lDwvo[data-visible=true]{opacity:1;transition:opacity 50ms linear;visibility:visible;z-index:10}.toast-module__toast__lDwvo[data-ellipsis=true] .toast-module__text__YkX3a{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.toast-module__toast__lDwvo [class*=share_multiple_profile_wrap]{margin-right:2px}.toast-module__text__YkX3a{color:#fff;flex:1 1 auto;font-size:inherit;font-weight:500}.toast-module__text__YkX3a:only-child{text-align:center;width:100%}.toast-module__toast_inner__ZHGGn{align-items:center;background-color:#0009;border-radius:5px;box-sizing:border-box;display:flex;gap:10px;margin:0 auto;max-width:100%;min-height:50px;padding:12px 20px}.toast-module__toast_inner__ZHGGn .profile_image{border-radius:50%;flex:0 0 auto;height:25px;width:25px}.toast-module__icon__5Zmj9{color:#fff;font-size:inherit;margin-left:auto}.actionGroup-module__action_box__-HA8N{align-items:center;box-sizing:border-box;display:flex;gap:6px;height:34px;padding:0 14px 5px;width:100%}.actionGroup-module__button_action__VwNgx{align-items:center;display:inline-flex;height:24px;justify-content:center;min-width:24px;position:relative}.actionGroup-module__button_action__VwNgx:disabled{opacity:.6}.actionGroup-module__button_action__VwNgx[data-type=sticker]{margin-left:auto}.actionGroup-module__button_action__VwNgx[data-type=sticker][data-tooltip-placement=top-start]{margin-left:0;order:var(--positive-button-order)}.blockStatus-module__block_box__qevhw{font-size:13px;left:14px;line-height:16px;position:absolute;top:10px}.blockStatus-module__description__Vd3QF{color:#b7b7b7}.blockStatus-module__button_unblock__pHBlS{color:#2f59cc;font-size:inherit;margin-top:5px}.pastedImageList-module__image_list_wrap__5yuws{box-sizing:border-box;position:relative;z-index:2}.pastedImageList-module__image_list__1S6Eo{display:flex;gap:5px;margin-bottom:-10px;overflow-x:overlay;padding:10px 14px 0}.pastedImageList-module__image_list_item__MrYSE{border:1px solid #dfdfdf;box-sizing:border-box;color:#b7b7b7;display:inline-flex;flex:0 0 auto;font-size:13px;font-weight:700;height:60px;padding:10px 10px 12px;position:relative;width:60px}.pastedImageList-module__image_list_item__MrYSE:hover:after{background-color:#fffc;bottom:0;content:"";left:0;position:absolute;right:0;top:0}.pastedImageList-module__image_list_item__MrYSE:hover .pastedImageList-module__button_delete__Npv0n{display:block}.pastedImageList-module__thumbnail__WOgKn .image{bottom:0;display:block;height:100%;left:0;object-fit:contain;position:absolute;right:0;top:0;width:100%}.pastedImageList-module__button_delete__Npv0n{display:none;font-size:15px;position:absolute;right:3px;top:3px;z-index:1}.pastedImageList-module__button_delete__Npv0n .pastedImageList-module__icon__0tv0C{color:#777}.chatroomEditor-module__editor_area__1UsgR{border-top:1px solid #00000014;flex:0 0 auto;position:relative}.chatroomEditor-module__image_list_wrap__--b21+.chatroomEditor-module__textarea__yKTlH{margin-top:15px}.chatroomEditor-module__textarea__yKTlH{background-color:#fff;border:0;box-sizing:border-box;color:#1f1f1f;font-size:var(--message-font-size);line-height:1.23077;max-height:260px;min-height:76px;padding:10px 14px 0;resize:none;transition:font-size .1s ease}.chatroomEditor-module__textarea__yKTlH:disabled{background:gray;opacity:.6}.chatroomEditor-module__textarea__yKTlH.chatroomEditor-module__large_emoji__CW-DS{font-size:calc(var(--message-font-size)*var(--message-large-emoji-scale, 1.5))}.chatroomEditor-module__textarea__yKTlH::part(input)::-webkit-input-placeholder{color:#b7b7b7}.chatroomEditor-module__textarea__yKTlH::part(input)::placeholder{color:#b7b7b7}.chatroomEditor-module__textarea__yKTlH::part(mention){background-size:100% 100%}.chatroomHeader-module__header__ihDT2{box-sizing:border-box;flex:0 0 auto;justify-content:space-between;padding:5px 0 10px 14px}.chatroomHeader-module__header__ihDT2 .thumbnail{border-radius:50%;height:50px;margin-right:8px;width:50px}.chatroomHeader-module__inner__0P5fp{display:flex;min-height:50px}.chatroomHeader-module__info__2my0W{align-items:center;display:flex;flex:1 1 auto;font-size:14px;position:relative}.chatroomHeader-module__member_popup__61TuD{background-color:#fff;border:1px solid #dfdfdf;border-radius:5px;display:none;height:200px;left:58px;position:absolute;top:100%;width:280px;z-index:20}.chatroomHeader-module__button_name__US7lb{align-items:center;display:flex;font-size:inherit}.chatroomHeader-module__button_name__US7lb[aria-expanded=true]~.chatroomHeader-module__member_popup__61TuD{display:flex}.chatroomHeader-module__name__t-K11{-webkit-line-clamp:2;-webkit-box-orient:vertical;display:-webkit-box;font-weight:500;line-height:17px;overflow:hidden;overflow-wrap:anywhere}.chatroomHeader-module__member_count__s6hqu{margin-left:3px}.chatroomHeader-module__button_alarm__dBqwP,.chatroomHeader-module__button_popup__tcF1V{color:#b7b7b7;display:inline-flex;padding:5px}.chatroomHeader-module__button_alarm__dBqwP:not(:disabled):hover,.chatroomHeader-module__button_popup__tcF1V:not(:disabled):hover{color:#9e9e9e}.chatroomHeader-module__button_alarm__dBqwP:disabled,.chatroomHeader-module__button_popup__tcF1V:disabled{color:#b7b7b799}.chatroomHeader-module__icon_alarm__tgjw2,.chatroomHeader-module__icon_popup__q5Czq{color:inherit;height:12px;width:12px}.chatroomHeader-module__action_group__k8w1P{align-items:center;display:inline-flex;flex:0 0 auto;margin-left:30px}.chatroomHeader-module__button_more__9rz-2{display:inline-flex;padding:4px}.chatroomHeader-module__button_more__9rz-2:disabled{color:#b7b7b799}.chatroomHeader-module__icon_more__Q8OVO{height:19px;width:19px}.callChatroomGuide-module__guide_box__OkUzu{margin:auto;text-align:center}.callChatroomGuide-module__description__B-tA8{color:#949494;font-size:13px;line-height:18px}.callChatroomGuide-module__button_call__JTRMo{margin-top:20px}.callChatroomGuide-module__button_call__JTRMo[data-shape=contained]{background-color:#efefef;color:#3f3f3f;font-size:13px;font-weight:700;height:36px;padding:0 12px}.contactMessageContent-module__content_wrap__x3ScW{word-wrap:break-word;background-color:#efefef;border-radius:17.5px;box-sizing:border-box;display:inline-flex;flex-direction:column;max-width:690px;padding:8px 12px;position:relative;word-break:break-word}[class*=message][data-direction=reverse]>[class*=content]>[class*=content]>[class*=content_inner]>.contactMessageContent-module__content_wrap__x3ScW{background-color:#c3f69d}.contactMessageContent-module__content_wrap__x3ScW:before{background-color:inherit;content:"";height:12px;left:-3px;-webkit-mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;position:absolute;top:0;width:12px}[class*=message][data-group=item] .contactMessageContent-module__content_wrap__x3ScW:before,[class*=message][data-group=start] .contactMessageContent-module__content_wrap__x3ScW:before{display:none}[class*=message][data-direction=reverse] .contactMessageContent-module__content_wrap__x3ScW:before{left:auto;right:-3px;-webkit-transform:scaleX(-1);transform:scaleX(-1)}.contactMessageContent-module__contact_info__40Ljf{align-items:center;box-sizing:border-box;display:flex;padding-right:20px}.contactMessageContent-module__contact_info__40Ljf div[class*=thumbnail_wrap]{border-radius:50%;height:40px;margin-right:7px;width:40px}.contactMessageContent-module__name__ZI9-9{color:#000;font-size:13px;line-height:1.25}.contactMessageContent-module__button_contact__9I-wn{align-items:center;bottom:0;display:flex;justify-content:flex-end;left:0;padding-right:10px;position:absolute;right:0;top:0}.contactMessageContent-module__icon__9s72s{color:#949494;height:12px;width:12px}.dateTimePickerPopup-module__popup__zBwfY{display:flex;flex-direction:column;height:100%}.dateTimePickerPopup-module__contents__2OKu9{align-items:center;box-sizing:border-box;display:flex;flex:1 1 auto;flex-direction:column;justify-content:center;overflow-y:overlay;position:relative}.dateTimePickerPopup-module__contents__2OKu9 .dateTimePickerPopup-module__input_group__5--R2{display:flex;flex-direction:column;font-size:13px;gap:12px;position:relative}.dateTimePickerPopup-module__contents__2OKu9 .dateTimePickerPopup-module__label__JqTR-{align-items:center;display:flex;gap:10px;justify-content:space-between}.dateTimePickerPopup-module__contents__2OKu9 .dateTimePickerPopup-module__input_date__CDU2e,.dateTimePickerPopup-module__contents__2OKu9 .dateTimePickerPopup-module__input_time__3CGK-{border:1px solid #ddd;border-radius:2px;box-sizing:border-box;font-size:10px;font-size:inherit;height:27px;padding:4px 10px;width:140px}.dateTimePickerPopup-module__contents__2OKu9 .dateTimePickerPopup-module__error_description__Bx715{word-wrap:break-word;bottom:-10px;color:#ff3a44;font-size:12px;line-height:15px;position:absolute;-webkit-transform:translateY(100%);transform:translateY(100%);word-break:keep-all}.dateTimePickerPopup-module__footer__ydFIk{margin-top:auto}.dateTimePickerPopup-module__footer__ydFIk .dateTimePickerPopup-module__button_group__8IiIS{display:flex;gap:6px;justify-content:center;margin:0 22px 16px}.dateTimePickerPopup-module__footer__ydFIk .dateTimePickerPopup-module__button_confirm__Yq2bl{box-sizing:border-box;font-weight:700;height:35px;padding:0 14px;width:100%}.fileMessageContent-module__content_wrap__2Px8O{word-wrap:break-word;background-color:#efefef;border-radius:17.5px;box-sizing:border-box;display:inline-flex;flex-direction:column;max-width:690px;padding:8px 12px;position:relative;word-break:break-word}[class*=message][data-direction=reverse]>[class*=content]>[class*=content]>[class*=content_inner]>.fileMessageContent-module__content_wrap__2Px8O{background-color:#c3f69d}[class*=message][data-direction=reverse]>[class*=content]>[class*=content]>[class*=content_inner]>.fileMessageContent-module__content_wrap__2Px8O .fileMessageContent-module__button_download__bFJja{background-color:#c3f69de6}.fileMessageContent-module__content_wrap__2Px8O:before{background-color:inherit;content:"";height:12px;left:-3px;-webkit-mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;position:absolute;top:0;width:12px}[class*=message][data-group=item] .fileMessageContent-module__content_wrap__2Px8O:before,[class*=message][data-group=start] .fileMessageContent-module__content_wrap__2Px8O:before{display:none}[class*=message][data-direction=reverse] .fileMessageContent-module__content_wrap__2Px8O:before{left:auto;right:-3px;-webkit-transform:scaleX(-1);transform:scaleX(-1)}.fileMessageContent-module__content_wrap__2Px8O:hover .fileMessageContent-module__button_download__bFJja{display:flex}.fileMessageContent-module__inner__R34xN{display:flex;position:relative}.fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{align-items:center;border:1px solid #dfdfdf;border-radius:5px;color:#b7b7b7;display:inline-flex;flex:0 0 auto;height:50px;justify-content:center;margin-right:12px;width:50px}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=pdf] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#f00004}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=illustrator] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#ea8206}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=photoshop] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#5163e0}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=word] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#4878d9}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=powerpoint] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#ee6422}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=excel] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#14a37b}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=document] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#777}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=zip] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#949494}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=audio] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf,.fileMessageContent-module__content_wrap__2Px8O[data-file-type=voice] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#925bd6}.fileMessageContent-module__content_wrap__2Px8O[data-file-type=video] .fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf{color:#5163e0}.fileMessageContent-module__inner__R34xN>.fileMessageContent-module__icon__u-cSf svg{height:25px;width:25px}.fileMessageContent-module__info__i7p9r{display:flex;flex-direction:column;gap:2px;line-height:1.2}.fileMessageContent-module__info__i7p9r .fileMessageContent-module__name__-GtzW{-webkit-line-clamp:3;-webkit-box-orient:vertical;display:-webkit-box;font-size:14px;font-weight:500;margin-bottom:1px;overflow:hidden;overflow-wrap:anywhere}.fileMessageContent-module__error_message__1G1dz{color:#1f1f1f;font-size:12px;line-height:1.25;margin:5px 0}.fileMessageContent-module__period__N2YdD,.fileMessageContent-module__size__0wDYo{color:#949494;font-size:12px}.fileMessageContent-module__period__N2YdD[data-expired=true]{color:#ff3a44}.fileMessageContent-module__button_download__bFJja{align-items:center;background-color:#efefefe6;border-radius:17.5px;bottom:-8px;display:none;justify-content:center;left:-12px;padding:8px 12px;position:absolute;right:-12px;top:-8px}.fileMessageContent-module__button_download__bFJja .fileMessageContent-module__icon__u-cSf{align-items:center;background-color:#fff9;border:1px solid #dfdfdf;border-radius:50%;box-sizing:border-box;flex:0 0 auto;height:35px;justify-content:center;margin-right:10px;width:35px}.fileMessageContent-module__button_download__bFJja .fileMessageContent-module__icon__u-cSf svg{height:18px;width:18px}.fileMessageContent-module__button_download__bFJja .fileMessageContent-module__info__i7p9r{display:flex;flex-direction:column}.fileMessageContent-module__button_download__bFJja .fileMessageContent-module__description__s2Khr{font-size:12px}.fileMessageContent-module__button_download__bFJja .fileMessageContent-module__name__-GtzW{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#949494;display:-webkit-box;font-size:12px;font-weight:500;overflow:hidden;overflow-wrap:anywhere}.imageMessageContent-module__content_wrap__bT-Si{background-color:#fff;max-width:265px;min-width:100px;-webkit-user-select:text;user-select:text}.imageMessageContent-module__content_wrap__bT-Si[data-type=multiple]{flex:1 1 auto}.reaction_popover_wrap{background-image:linear-gradient(#0000,#0006);bottom:0;height:50px;left:0;pointer-events:none;position:absolute;right:0;z-index:10}.reaction_popover_wrap:not(:has([data-expanded=true])){display:none}.reaction_popover_wrap [class*=reaction_popover]{bottom:10px;position:absolute;right:10px}.reaction_popover_wrap [class*=reaction_popover] [class*=button_popover]:not([data-active=true]){color:#fff}.imageMessageContent-module__image_group__ZOeAa{display:grid;gap:1px;grid-auto-flow:dense;grid-template-columns:repeat(auto-fit,minmax(49%,auto))}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih{position:relative}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih [class*=reaction_popover_wrap]{font-size:16px}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:hover .reaction_popover_wrap{display:block}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:not(:only-child):first-child .imageMessageContent-module__thumbnail__z4GO8{border-top-left-radius:5px}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:not(:only-child,:nth-last-child(odd)):first-child+.imageMessageContent-module__item__fJDih .imageMessageContent-module__thumbnail__z4GO8{border-top-right-radius:5px}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:not(:only-child):last-child .imageMessageContent-module__thumbnail__z4GO8{border-bottom-right-radius:5px}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:not(:only-child):nth-last-child(2) .imageMessageContent-module__thumbnail__z4GO8{border-bottom-left-radius:5px}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:not(:only-child):first-child:nth-last-child(odd){grid-column:span 2;grid-row-start:1}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:not(:only-child):first-child:nth-last-child(odd) .imageMessageContent-module__thumbnail__z4GO8{border-top-right-radius:5px;height:130px;padding-top:0}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih[data-checked=true] .imageMessageContent-module__thumbnail__z4GO8:after{background-color:#0000004d;bottom:0;content:"";left:0;pointer-events:none;position:absolute;right:0;top:0}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:only-child:last-child .imageMessageContent-module__thumbnail__z4GO8{border-radius:5px;height:100%;max-height:340px;padding-top:0}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:only-child:last-child .imageMessageContent-module__thumbnail__z4GO8 img{object-fit:contain;position:static}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:only-child:last-child .imageMessageContent-module__thumbnail__z4GO8 img:not(.is_loading){background-color:#fff;border:1px solid #f5f5f5;border-radius:5px;box-sizing:border-box}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:only-child:last-child .imageMessageContent-module__thumbnail__z4GO8 img.is_loading{height:180px!important;width:260px!important}.imageMessageContent-module__image_group__ZOeAa .imageMessageContent-module__item__fJDih:only-child:last-child[data-size=small].imageMessageContent-module__thubmnail__CcYVD{max-height:100px}.imageMessageContent-module__thumbnail__z4GO8{background-color:#f0f0f1;max-height:340px;overflow:hidden;padding-top:100%;position:relative;width:100%}.imageMessageContent-module__thumbnail__z4GO8 img{bottom:0;display:block;height:100%;left:0;object-fit:cover;position:absolute;right:0;top:0;width:100%}.imageMessageContent-module__button_view__4y-jN{display:block;height:inherit;width:inherit}.imageMessageContent-module__checkbox__2N2bL{position:absolute;right:0;top:0}.chatroomPushNotice-module__push_notice_area__n3LPB{background-color:#f5f5f5;padding:10px 14px 15px;z-index:10}.chatroomPushNotice-module__name__Jm1fG{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#1f1f1f;display:-webkit-box;font-size:13px;font-weight:700;margin-left:50px;overflow:hidden;overflow-wrap:anywhere;text-align:left}.chatroomPushNotice-module__name__Jm1fG+.chatroomPushNotice-module__profile_image_box__N150k{position:absolute;top:10px}.chatroomPushNotice-module__name__Jm1fG+.chatroomPushNotice-module__profile_image_box__N150k .thumbnail{height:42px;width:42px}.chatroomPushNotice-module__name__Jm1fG~.chatroomPushNotice-module__description__YhTIh{margin:4px 0 0 50px;text-align:left}.chatroomPushNotice-module__profile_image_box__N150k{display:flex;flex-wrap:wrap;gap:7px;justify-content:center}.chatroomPushNotice-module__profile_image_box__N150k .thumbnail{border-radius:50%;height:32px;width:32px}.chatroomPushNotice-module__profile_image_box__N150k .chatroomPushNotice-module__button_more__CgmPr{align-items:center;display:inline-flex}.chatroomPushNotice-module__profile_image_box__N150k .chatroomPushNotice-module__icon_arrow__82OOK{color:#616161;height:10px;margin-left:2px;width:10px}.chatroomPushNotice-module__profile_image_box__N150k .chatroomPushNotice-module__count__P6i91{color:#1f1f1f;font-size:13px}.chatroomPushNotice-module__description__YhTIh{word-wrap:break-word;color:#949494;font-size:13px;line-height:17px;margin-top:10px;text-align:center;word-break:break-word}.chatroomPushNotice-module__description__YhTIh:first-child{margin-top:0}.chatroomPushNotice-module__button_group__xq8hU{display:flex;gap:7px;justify-content:center;margin-top:10px;width:100%}.chatroomPushNotice-module__button_group__xq8hU .button_action{flex:0 1 auto;height:36px;text-align:center;width:110px}.username-module__username__vGQGj{color:#0009;display:inline-flex;font-size:12px;font-weight:500;line-height:14px;-webkit-user-select:none;user-select:none;vertical-align:top}[class*=message][data-direction=reverse]>.username-module__username__vGQGj{display:none}.username-module__button_username__AyqLN{line-height:0}.username-module__button_username__AyqLN .username-module__username__vGQGj{margin-bottom:0}[class*=message][data-direction=reverse]>.username-module__button_username__AyqLN{display:none}.messageLayout-module__message__YVDhk{box-sizing:border-box;flex:0 0 auto;line-height:0;margin-right:20px;padding-top:20px}.messageLayout-module__message__YVDhk[data-direction=reverse]{margin-left:20px;margin-right:0}.messageLayout-module__message__YVDhk[data-direction=reverse]>.thumbnail{display:none}.messageLayout-module__message__YVDhk[data-direction=reverse]>.messageLayout-module__content__PGz66{flex-direction:row-reverse;margin-left:0}.messageLayout-module__message__YVDhk[data-direction=reverse] .icon_state{align-items:center;align-self:flex-end;background-color:#c8c8c8;border-radius:50%;color:#fff;display:inline-flex;font-size:13px;font-style:normal;height:18px;justify-content:center;margin-bottom:8px;min-height:18px;min-width:18px;width:18px}.messageLayout-module__message__YVDhk[data-direction=reverse] .icon_state[role=button]{cursor:pointer}.messageLayout-module__message__YVDhk[data-direction=reverse] .icon_state svg{color:#fff;height:13px;width:13px}.messageLayout-module__message__YVDhk[data-direction=reverse] a,.messageLayout-module__message__YVDhk[data-direction=reverse] button{-webkit-user-select:inherit;user-select:inherit}.messageLayout-module__message__YVDhk[data-group=item],.messageLayout-module__message__YVDhk[data-group=start]{padding-top:0}.messageLayout-module__message__YVDhk .icon_state,.messageLayout-module__message__YVDhk[data-group=item]>.thumbnail[class*=profileImage],.messageLayout-module__message__YVDhk[data-group=item]>[class*=username],.messageLayout-module__message__YVDhk[data-group=start]>.thumbnail[class*=profileImage],.messageLayout-module__message__YVDhk[data-group=start]>[class*=username]{display:none}.messageLayout-module__message__YVDhk .thumbnail{border-radius:50%;float:left;height:38px;margin-right:6px;width:38px}.messageLayout-module__message__YVDhk[data-selected=true] div[class*=content_wrap] div[class*=content_group],.messageLayout-module__message__YVDhk[data-selected=true] div[class*=message-module][class*=content_inner] div[class*=content_wrap]{-webkit-filter:brightness(.8);filter:brightness(.8)}.messageLayout-module__content__PGz66{display:flex;font-size:var(--message-font-size,13px);gap:0 6px;margin-left:44px;margin-top:5px;position:relative}.metaInfo-module__meta__F2Lfn{color:#0000004d;display:flex;flex:0 0 auto;flex-direction:column;font-size:11px;justify-content:flex-end;line-height:14px;position:relative}[class*=message][data-direction=reverse] .metaInfo-module__meta__F2Lfn{align-items:flex-end}.metaInfo-module__meta__F2Lfn>*{-webkit-user-select:none;user-select:none}.metaInfo-module__meta__F2Lfn .metaInfo-module__read_count__8-U6j{height:14px}.metaInfo-module__meta__F2Lfn .metaInfo-module__send_time__-3Q6-{text-align:left;width:6em}[class*=message][data-group=end] .metaInfo-module__meta__F2Lfn .metaInfo-module__send_time__-3Q6-,[class*=message][data-group=item] .metaInfo-module__meta__F2Lfn .metaInfo-module__send_time__-3Q6-{visibility:hidden}[class*=message][data-direction=reverse] .metaInfo-module__meta__F2Lfn .metaInfo-module__send_time__-3Q6-{text-align:right}.metaInfo-module__meta__F2Lfn .type_icon{align-items:center;background-color:#fff;border:1px solid #dfdfdf;border-radius:50%;box-sizing:border-box;cursor:pointer;display:inline-flex;height:24px;justify-content:center;position:relative;width:24px}.metaInfo-module__meta__F2Lfn .type_icon:hover:after{background-color:#00000014;border-radius:inherit;bottom:0;content:"";left:0;position:absolute;right:0;top:0}.metaInfo-module__meta__F2Lfn .type_icon:not(:only-child){margin-bottom:3px}.metaInfo-module__meta__F2Lfn .type_icon svg{color:#7e8496;height:16px;width:16px}.metaInfo-module__meta__F2Lfn .type_icon svg path{fill:currentColor}.metaInfo-module__meta__F2Lfn [class*=reaction_popover]{font-size:16px;line-height:0}.metaInfo-module__meta__F2Lfn:has(+.icon_state) .metaInfo-module__send_time__-3Q6-{width:auto}.iframeMessage-module__message__uD51D[data-direction=reverse] [class*=reaction_bubble_list]{left:auto;position:absolute;right:0}.iframeMessage-module__message__uD51D[data-direction=reverse] [class*=meta]{margin-left:0;margin-right:auto}.iframeMessage-module__type_full__cjUSx{margin-right:0}.iframeMessage-module__type_full__cjUSx[data-direction=reverse]{margin-left:0}.iframeMessage-module__type_full__cjUSx [class*=content]:not([class*=content_wrap])[class*=messageLayout]{display:block;margin-left:0}.iframeMessage-module__type_full__cjUSx [class*=content]:not([class*=content_wrap]) div[class*=content_inner]{width:100%}.iframeMessage-module__type_full__cjUSx .iframeMessage-module__content_wrap__Trsl-{white-space:nowrap}.iframeMessage-module__type_full__cjUSx .iframeMessage-module__iframe_wrap__PUSyZ{margin-left:-12px;margin-right:-12px;margin-top:8px}.iframeMessage-module__content_wrap__Trsl-{line-height:normal;min-height:50px;width:100%}.iframeMessage-module__bottom_action_group__977iw{display:flex;font-size:16px;margin-top:2px;max-width:100%;position:relative}.iframeMessage-module__bottom_action_group__977iw [class*=reaction_bubble_list]{bottom:3px;left:0;position:absolute}.iframeMessage-module__bottom_action_group__977iw [class*=__meta__]{justify-content:center;min-height:28px}.iframeMessage-module__bottom_action_group__977iw [class*=meta]{margin-left:auto}.iframeMessageContent-module__content__jrRvg{display:flex;gap:6px;width:100%}[class*=message][data-direction=reverse] .iframeMessageContent-module__content__jrRvg{flex-direction:row-reverse}[class*=message][data-direction=reverse] .iframeMessageContent-module__content__jrRvg div[class*=meta] [class*=reaction_popover]{left:0;right:auto}.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI{display:inline-flex;flex-direction:column}.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI div[class*=meta] [class*=reaction_popover]{bottom:5px;display:none;position:absolute;right:0}.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI div[class*=meta] [class*=reaction_popover][data-expanded=true]{display:flex}.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI div[class*=meta] [class*=reaction_popover][data-expanded=true]~[class*=read_count],.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI div[class*=meta] [class*=reaction_popover][data-expanded=true]~[class*=send_time]{visibility:hidden}.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI:hover div[class*=meta] [class*=reaction_popover]{display:flex}.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI:hover div[class*=meta] [class*=reaction_popover]~[class*=read_count],.iframeMessageContent-module__content__jrRvg .iframeMessageContent-module__content_inner__XVLKI:hover div[class*=meta] [class*=reaction_popover]~[class*=send_time]{visibility:hidden}.in_iframe body{display:block;overflow:hidden}.in_iframe .T1{border:1px solid #dfdfdf}.in_iframe .LySlider::-webkit-scrollbar{display:none!important}.in_iframe [data-url]{cursor:pointer}.in_iframe .IframeMessage-module__buttons__UTYyB{display:none}.in_iframe .IframeMessage-module__buttons__UTYyB button{align-items:center;background-color:#fffc;border:1px solid #0003;border-radius:50%;color:#00000080;cursor:pointer;display:flex;font-size:1em;height:28px;justify-content:center;margin-top:-14px;position:absolute;top:50%;transition:background-color .2s ease;width:28px;z-index:999}.in_iframe .IframeMessage-module__buttons__UTYyB button:hover{color:#07b53b}.in_iframe .IframeMessage-module__buttons__UTYyB button.IframeMessage-module__prev__jJ-qq{left:10px}.in_iframe .IframeMessage-module__buttons__UTYyB button.IframeMessage-module__next__uveZS{right:10px}.in_iframe body:hover .IframeMessage-module__buttons__UTYyB{display:block}.linkbox-module__link_box__2kb84{display:flex;margin-top:13px;position:relative;-webkit-user-select:none!important;user-select:none!important}.linkbox-module__link_box__2kb84+.linkbox-module__link_box__2kb84{margin-top:10px;padding-top:11px}.linkbox-module__info__7-nbo{box-sizing:border-box;flex:1 1 auto;padding-left:10px;position:relative}.linkbox-module__info__7-nbo:before{border-left:1px solid #4270ed;bottom:0;content:"";left:0;position:absolute;top:1px}[class*=message][data-direction=reverse] .linkbox-module__info__7-nbo:before{border-color:#07b53b}.linkbox-module__info__7-nbo .linkbox-module__title__D-OVq{-webkit-line-clamp:1;color:#1f1f1f;display:block;font-size:14px;font-weight:400;line-height:1.36;max-width:100%}.linkbox-module__info__7-nbo .linkbox-module__description__AKtYP,.linkbox-module__info__7-nbo .linkbox-module__title__D-OVq{-webkit-box-orient:vertical;word-wrap:break-word;display:-webkit-box;overflow:hidden;overflow-wrap:anywhere;word-break:break-word}.linkbox-module__info__7-nbo .linkbox-module__description__AKtYP{-webkit-line-clamp:2;color:#1f1f1f80;font-size:13px;line-height:1.15}.linkbox-module__thumbnail__-4ZeM{background-color:#0000001a;border:1px solid #0000000d;border-radius:7px;flex:0 0 auto;height:47px;margin-left:12px;overflow:hidden;position:relative;width:47px}.linkbox-module__thumbnail__-4ZeM .linkbox-module__image__6gf2e{border-radius:inherit;display:block;height:100%;object-fit:cover;position:relative;width:100%;z-index:1}.linkbox-module__thumbnail__-4ZeM .linkbox-module__icon_media__o4Qb8{color:#fff;font-size:20px;height:20px;left:50%;position:absolute;top:50%;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0);width:20px}[class*=message][data-direction=reverse] .linkbox-module__thumbnail__-4ZeM .linkbox-module__icon_media__o4Qb8{color:#8bc68b}.linkbox-module__thumbnail__-4ZeM .linkbox-module__icon_media__o4Qb8 path{fill:currentColor}.mediaViewPopup-module__popup__w2FQo{background-color:#1f1f1f;display:flex;flex-direction:column;height:100%;max-height:100%;position:relative;z-index:2}.mediaViewPopup-module__popup__w2FQo:hover .mediaViewPopup-module__media_info__5rzWU,.mediaViewPopup-module__popup__w2FQo:hover .mediaViewPopup-module__view_control__lHVBg,.mediaViewPopup-module__popup__w2FQo[data-fix-controls=true] .mediaViewPopup-module__media_info__5rzWU,.mediaViewPopup-module__popup__w2FQo[data-fix-controls=true] .mediaViewPopup-module__view_control__lHVBg{visibility:visible}.mediaViewPopup-module__popup__w2FQo:hover .mediaViewPopup-module__reaction_wrap__HarMj,.mediaViewPopup-module__popup__w2FQo[data-fix-controls=true] .mediaViewPopup-module__reaction_wrap__HarMj{display:inline-flex}.mediaViewPopup-module__media_info__5rzWU{color:#f5f5f5;display:grid;grid-template-columns:1fr 1fr 1fr;left:0;pointer-events:none;position:absolute;right:0;top:0;visibility:hidden;z-index:2}.mediaViewPopup-module__media_info__5rzWU *{pointer-events:all}.mediaViewPopup-module__media_info__5rzWU:before{background-image:linear-gradient(0deg,#0000,#00000085,#000);content:"";height:100px;left:0;position:absolute;right:0;top:0;z-index:-1}.mediaViewPopup-module__meta__TKqRR{align-items:center;box-sizing:border-box;color:#f5f5f5;display:inline-flex;flex-direction:column;order:1;padding-top:16px;text-align:center}.mediaViewPopup-module__meta__TKqRR .mediaViewPopup-module__name__y-PQi{font-size:12px;font-weight:700}.mediaViewPopup-module__meta__TKqRR .mediaViewPopup-module__button_date__rrcfu{align-items:center;color:inherit;display:inline-flex;font-size:11px;line-height:0;margin-top:2px}.mediaViewPopup-module__meta__TKqRR .mediaViewPopup-module__button_date__rrcfu .mediaViewPopup-module__icon__Y44xg{margin-left:2px}.mediaViewPopup-module__button_group__lxm6B{align-self:flex-end;display:flex;gap:8px;height:-webkit-min-content;height:min-content;padding:0 15px;width:-webkit-min-content;width:min-content}.mediaViewPopup-module__button_group__lxm6B:last-child{justify-self:flex-end;order:2}.mediaViewPopup-module__button_group__lxm6B .mediaViewPopup-module__button_action__kLo6G{align-items:center;color:#f5f5f5;display:inline-flex;justify-content:center}.mediaViewPopup-module__button_group__lxm6B .mediaViewPopup-module__button_action__kLo6G[disabled]{opacity:.5}.mediaViewPopup-module__button_group__lxm6B .mediaViewPopup-module__button_action__kLo6G[data-type=more]:not(:first-child:last-child):after{border-right:1px solid #ffffff4d;content:"";display:inline-flex;height:18px;padding-left:8px}.mediaViewPopup-module__button_group__lxm6B .mediaViewPopup-module__button_action__kLo6G .mediaViewPopup-module__icon__Y44xg{height:18px;width:18px}.mediaViewPopup-module__media_view__K7X4k{height:100%;overflow:hidden;position:relative}.mediaViewPopup-module__media_view_inner__ehwAs{align-items:center;display:flex;height:100%;justify-content:center}.mediaViewPopup-module__media_view_inner__ehwAs>img,.mediaViewPopup-module__media_view_inner__ehwAs>video{display:block;height:100%;object-fit:contain;width:100%}.mediaViewPopup-module__media_view_inner__ehwAs>img.is_loading{height:100%!important;width:100%!important}.mediaViewPopup-module__media_view_inner__ehwAs .mediaViewPopup-module__error__onGfj{color:#fff6}.mediaViewPopup-module__media_view_inner__ehwAs .mediaViewPopup-module__error__onGfj .mediaViewPopup-module__icon__Y44xg{display:block;height:40px;margin:0 auto 10px;width:40px}.mediaViewPopup-module__media_view_inner__ehwAs .mediaViewPopup-module__error__onGfj .mediaViewPopup-module__error_text__AHOYM{font-size:12px}.mediaViewPopup-module__reaction_wrap__HarMj{align-items:center;bottom:20px;display:none;font-size:22px;gap:2px;left:20px;min-height:33px;position:absolute;z-index:1}.mediaViewPopup-module__reaction_wrap__HarMj [class*=popover_content]{bottom:25px;font-size:18px;left:0;-webkit-transform:none;transform:none}.mediaViewPopup-module__reaction_wrap__HarMj [class*=reaction_bubble] [class*=more] i{background-color:#616161e6}.mediaViewPopup-module__view_control__lHVBg{visibility:hidden}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_next__zVtC6,.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_prev__4cWuv{align-items:center;color:#ffffffb3;display:inline-flex;height:45px;justify-content:center;position:absolute;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0);width:45px;z-index:2}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_next__zVtC6:hover,.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_prev__4cWuv:hover{color:#fff}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_next__zVtC6:disabled,.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_prev__4cWuv:disabled{color:#fff6}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_prev__4cWuv{left:0}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_next__zVtC6{right:0}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__button_next__zVtC6 .mediaViewPopup-module__icon__Y44xg{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.mediaViewPopup-module__view_control__lHVBg .mediaViewPopup-module__icon__Y44xg path{fill:currentColor}.mediaViewPopup-module__media_gallery__jzL9-{background-color:#000;box-sizing:border-box;display:flex;flex:0 0 auto;flex-direction:column;position:relative}.mediaViewPopup-module__media_gallery__jzL9- .mediaViewPopup-module__button_fold__KCEX3{align-self:center;color:#949494b3;display:inline-block;font-size:0;height:14px;padding:0 13px}.mediaViewPopup-module__media_gallery__jzL9- .mediaViewPopup-module__button_fold__KCEX3[aria-expanded=true]:before{border-top:.5px solid #9494941a;content:"";left:0;position:absolute;right:0;top:0}.mediaViewPopup-module__media_gallery__jzL9- .mediaViewPopup-module__button_fold__KCEX3[aria-expanded=true]+.mediaViewPopup-module__gallery_list__DGO15{min-height:73px}.mediaViewPopup-module__media_gallery__jzL9- .mediaViewPopup-module__button_fold__KCEX3[aria-expanded=false]{background-color:#030303;border-top-left-radius:5px;border-top-right-radius:5px;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.mediaViewPopup-module__media_gallery__jzL9- .mediaViewPopup-module__button_fold__KCEX3[aria-expanded=false]~.mediaViewPopup-module__gallery_list__DGO15{display:none}.mediaViewPopup-module__media_gallery__jzL9- .mediaViewPopup-module__icon_fold__xGzd3{height:14px;width:14px}.mediaViewPopup-module__gallery_list__DGO15{-webkit-overflow-scrolling:touch;box-sizing:border-box;display:block;line-height:0;overflow-x:overlay;overflow-y:hidden;text-align:center;white-space:nowrap}.mentionSuggestion-module__suggestion_list__1Z4GO{--item-height:47px;background-color:#fff;border:1px solid #c8c8c8;border-radius:5px;bottom:calc(100% + 2px);box-shadow:0 0 10px #0000001a;left:15px;max-height:183px;overflow:overlay;position:absolute;right:15px;z-index:15}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p{display:block}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .mentionSuggestion-module__button_suggestion_item__7SOE2{align-items:center;box-sizing:border-box;display:flex;gap:10px;min-height:var(--item-height);padding:7px 10px 8px;width:100%}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .mentionSuggestion-module__button_suggestion_item__7SOE2 .icon_suggestion_mark{align-items:center;color:#1a74d5;flex:0 0 auto;height:32px;justify-content:center;width:32px}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .mentionSuggestion-module__button_suggestion_item__7SOE2 .icon_suggestion_mark svg{height:20px;width:20px}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .mentionSuggestion-module__button_suggestion_item__7SOE2 .suggestion_item_info{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#1f1f1f;display:-webkit-box;font-size:14px;overflow:hidden;overflow-wrap:anywhere}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .mentionSuggestion-module__button_suggestion_item__7SOE2 .suggestion_item_info .search_text{color:#1a74d5;font-weight:600}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .mentionSuggestion-module__button_suggestion_item__7SOE2:hover{background-color:#00000008}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p[aria-selected=true]{background-color:#0000000a}.mentionSuggestion-module__suggestion_list__1Z4GO .mentionSuggestion-module__suggestion_list_item__jtX8p .thumbnail{border-radius:50%;height:32px;width:32px}.message-module__message__7odk3>[class*=content]{flex-wrap:wrap}.message-module__message__7odk3 [class*=reaction_bubble_list]{font-size:16px;margin-top:2px}.message-module__message__7odk3 [class*=reaction_bubble_list] img[class*=reactionBubble]{height:24px;width:24px}.message-module__content__OuUCi{display:flex;gap:6px;width:100%}[class*=message][data-direction=reverse] .message-module__content__OuUCi{flex-direction:row-reverse}.message-module__content__OuUCi .message-module__content_inner__j-iko{display:inline-flex;gap:6px}.message-module__content__OuUCi .message-module__content_inner__j-iko:has([class*=imageMessageContent]){width:100%}.message-module__content__OuUCi .message-module__content_inner__j-iko:has([class*=icon_state]) div[class*=meta] div[class*=reaction_popover][data-expanded=true]~[class*=read_count],.message-module__content__OuUCi .message-module__content_inner__j-iko:has([class*=icon_state]) div[class*=meta] div[class*=reaction_popover][data-expanded=true]~[class*=send_time]{display:none}.message-module__content__OuUCi .message-module__content_inner__j-iko:has([class*=icon_state]):hover div[class*=meta] [class*=reaction_popover]~[class*=read_count],.message-module__content__OuUCi .message-module__content_inner__j-iko:has([class*=icon_state]):hover div[class*=meta] [class*=reaction_popover]~[class*=send_time]{height:18px;overflow:hidden;width:18px}[class*=message][data-direction=reverse] .message-module__content__OuUCi .message-module__content_inner__j-iko{flex-direction:row-reverse}[class*=message][data-direction=reverse] .message-module__content__OuUCi .message-module__content_inner__j-iko div[class*=meta] div[class*=reaction_popover]{justify-content:flex-end}.message-module__content__OuUCi .message-module__content_inner__j-iko div[class*=meta] [class*=reaction_popover]{align-items:flex-end;bottom:7px;display:none;justify-content:flex-start;position:absolute}.message-module__content__OuUCi .message-module__content_inner__j-iko div[class*=meta] [class*=reaction_popover][data-expanded=true]{display:flex}.message-module__content__OuUCi .message-module__content_inner__j-iko div[class*=meta] [class*=reaction_popover][data-expanded=true]~[class*=read_count],.message-module__content__OuUCi .message-module__content_inner__j-iko div[class*=meta] [class*=reaction_popover][data-expanded=true]~[class*=send_time]{visibility:hidden}.message-module__content__OuUCi .message-module__content_inner__j-iko:hover div[class*=meta] [class*=reaction_popover]{display:flex}.message-module__content__OuUCi .message-module__content_inner__j-iko:hover div[class*=meta] [class*=reaction_popover]~[class*=read_count],.message-module__content__OuUCi .message-module__content_inner__j-iko:hover div[class*=meta] [class*=reaction_popover]~[class*=send_time]{visibility:hidden}.message-module__action_group__c8hSm,.message-module__progress_bar__fVU-K{margin-top:5px}[class*=message][data-direction=reverse] .message-module__action_group__c8hSm,[class*=message][data-direction=reverse] .message-module__progress_bar__fVU-K{justify-content:flex-end}.message-module__progress_bar__fVU-K progress{max-width:83px}[class*=message][data-direction=reverse] .message-module__progress_bar__fVU-K{margin-right:6px}.actionGroup-module__action_group__sGYDY{display:flex;margin-left:-6px;margin-right:-7px;width:100%}.actionGroup-module__button_action__Cu9RJ{box-sizing:border-box;color:#00000059;display:inline-flex;font-size:11px;padding:0 6px 0 7px;position:relative;-webkit-user-select:none;user-select:none}.actionGroup-module__button_action__Cu9RJ+.actionGroup-module__button_action__Cu9RJ:before{border-left:1px solid #0003;content:"";height:10px;left:0;position:absolute;top:2px}.progressBar-module__progress_bar_wrap__uKGJ1{align-items:center;display:flex;gap:6px;width:100%}.progressBar-module__progress_bar__9Bwhb{-webkit-appearance:none;border-radius:7.5px;flex:1 1 auto;height:6px;overflow:hidden;position:relative}.progressBar-module__progress_bar__9Bwhb::-webkit-progress-bar{background-color:#dfdfdf}.progressBar-module__progress_bar__9Bwhb::-webkit-progress-value{background-color:#07b53b;border-radius:7.5px}.progressBar-module__status__Ld5MA{color:#b7b7b7;flex:0 0 32px;font-size:12px;text-align:right}.progressBar-module__button_cancel__k5692{align-items:center;box-sizing:border-box;color:#c8c8c8;display:flex;flex:0 0 auto;font-size:14px;margin:-6px;padding:6px}.replyMessage-module__message__U55Bo [class*=content_wrap] [class*=button_move],.replyMessage-module__message__U55Bo [class*=content_wrap] [class*=origin_content]{-webkit-user-select:none;user-select:none}.replyMessageContent-module__content_wrap__D0K-5{word-wrap:break-word;box-sizing:border-box;display:inline-flex;flex-direction:column;max-width:690px;position:relative;word-break:break-word}.replyMessageContent-module__content_wrap__D0K-5:before{background-color:inherit;content:"";height:12px;left:-3px;-webkit-mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;position:absolute;top:0;width:12px}[class*=message][data-direction=reverse] .replyMessageContent-module__content_wrap__D0K-5:before{left:auto;right:-3px;-webkit-transform:scaleX(-1);transform:scaleX(-1)}.replyMessageContent-module__content_wrap__D0K-5[data-type=image] .replyMessageContent-module__message__0FNkK,.replyMessageContent-module__content_wrap__D0K-5[data-type=sticker] .replyMessageContent-module__message__0FNkK,.replyMessageContent-module__content_wrap__D0K-5[data-type=video] .replyMessageContent-module__message__0FNkK{align-items:center;display:flex}.replyMessageContent-module__content_wrap__D0K-5[data-type=image] .replyMessageContent-module__message__0FNkK>[class*=content],.replyMessageContent-module__content_wrap__D0K-5[data-type=sticker] .replyMessageContent-module__message__0FNkK>[class*=content],.replyMessageContent-module__content_wrap__D0K-5[data-type=video] .replyMessageContent-module__message__0FNkK>[class*=content]{margin-left:20px}.replyMessageContent-module__content_wrap__D0K-5[data-type=video] .replyMessageContent-module__icon_video__w6zEa{display:flex}.replyMessageContent-module__content_wrap__D0K-5[data-type=sticker] .thumbnail{background-color:#0000}.replyMessageContent-module__content_wrap__D0K-5:not([data-content-type=sticker]){background-color:#efefef;border-radius:17.5px}[class*=message][data-direction=reverse] .replyMessageContent-module__content_wrap__D0K-5:not([data-content-type=sticker]){background-color:#c3f69d}.replyMessageContent-module__button_move__Jo33w{padding:8px 12px;position:relative}[data-content-type=sticker] .replyMessageContent-module__button_move__Jo33w{background-color:#efefef;border-radius:17.5px}[class*=message][data-direction=reverse] [data-content-type=sticker] .replyMessageContent-module__button_move__Jo33w{background-color:#c3f69d}.replyMessageContent-module__origin_content__SWrLv{padding:20px 12px}.replyMessageContent-module__origin_content__SWrLv .replyMessageContent-module__message__0FNkK>[class*=content]{margin:0}.replyMessageContent-module__message__0FNkK{margin:0;padding-top:0}.replyMessageContent-module__message__0FNkK>.thumbnail{height:22px;margin-right:7px;width:22px}.replyMessageContent-module__message__0FNkK>[class*=name]{flex:1 1 auto;font-size:13px;line-height:14px}.replyMessageContent-module__message__0FNkK>[class*=content]{flex:0 0 auto;margin-left:29px}.replyMessageContent-module__message__0FNkK .replyMessageContent-module__text__0T50-{-webkit-line-clamp:2;-webkit-box-orient:vertical;color:#1f1f1f80;display:inline-block;display:-webkit-box;font-size:inherit;line-height:1.23077;overflow:hidden;overflow-wrap:anywhere}.replyMessageContent-module__thumbnail__B9bTf{border-radius:5px;height:28px;overflow:hidden;position:relative;width:28px}.replyMessageContent-module__thumbnail__B9bTf img{display:block;height:100%;object-fit:contain;width:100%}.replyMessageContent-module__thumbnail__B9bTf img.is_loading{background-image:none}.replyMessageContent-module__thumbnail__B9bTf .multiple_large_emoji img:only-child{height:100%;width:100%}.replyMessageContent-module__icon_video__w6zEa{align-items:center;bottom:0;color:#fff;display:none;justify-content:center;left:0;position:absolute;right:0;top:0;z-index:1}.replyMessageContent-module__icon_video__w6zEa svg{height:8px;width:8px}.replyMessageContent-module__icon_video__w6zEa:after{background-color:#0000004d;bottom:0;content:"";left:0;position:absolute;right:0;top:0;z-index:-1}.replyMessageContent-module__reply_content__xS0gv{border-top:1px solid #0000001a}[data-content-type=sticker] .replyMessageContent-module__reply_content__xS0gv{border-top:0;padding-left:20px;position:relative}[data-content-type=sticker] .replyMessageContent-module__reply_content__xS0gv:before{background-color:#808080b3;content:"";height:15px;left:5px;-webkit-mask-image:url(/static/media/icon_replay.4ed50886326e66723703.svg);mask-image:url(/static/media/icon_replay.4ed50886326e66723703.svg);position:absolute;top:5px;-webkit-transform:rotate(180deg);transform:rotate(180deg);width:15px}.replyMessageContent-module__reply_content__xS0gv [class*=content_wrap]{all:unset;display:inline-flex;flex-direction:column;padding:10px 12px;position:relative}[data-content-type=sticker] .replyMessageContent-module__reply_content__xS0gv [class*=content_wrap]{padding:5px}.chatroomContent-module__content_area__gK6db{box-sizing:border-box;display:flex;flex:1 1 auto;flex-direction:column;height:100%;overflow-y:hidden;position:relative}.chatroomContent-module__content_area__gK6db .message_list{box-sizing:border-box;display:flex;flex-direction:column-reverse;margin-bottom:auto;max-height:100%;overflow-x:hidden;overflow-y:overlay;padding:0 12px 22px;-webkit-user-select:text;user-select:text}.chatroomContent-module__content_area__gK6db .message_list:after{background-color:#ffffffb3;border:1px solid #efefef;border-radius:12px;color:#949494;content:attr(data-scroll-date);display:none;font-size:12px;left:calc(var(--message-list-width, 100%)/2);padding:3px 12px;position:absolute;top:calc(var(--system-message-date-sticky-top, 0px) + 20px);-webkit-transform:translateX(-50%);transform:translateX(-50%);z-index:10}.chatroomContent-module__content_area__gK6db[data-scroll-state=scroll] .message_list[data-scroll-date]:after{display:inline-flex}.chatroomContent-module__content_area__gK6db [class*=chatroomNotice][class*=notice_area]~.message_list{margin-top:52px}.chatroomContent-module__content_area__gK6db [class*=network_error]{left:0;position:absolute;right:0;top:0;z-index:20}.messageDate-module__date_wrap__I4ily{box-sizing:border-box;display:flex;justify-content:center;padding-top:20px;text-align:center;-webkit-user-select:text;user-select:text}.messageDate-module__date_wrap__I4ily[data-selected=true] .messageDate-module__date__pDnK3{-webkit-filter:brightness(.8);filter:brightness(.8)}.messageDate-module__date__pDnK3{background-color:#00000008;border:1px solid #0000;border-radius:12px;color:#949494;display:inline-flex;font-size:12px;padding:3px 12px}.newMessage-module__new_message__7AimN{align-items:center;background-color:#efefef99;bottom:0;color:#1f1f1f;display:flex;font-size:13px;height:36px;left:0;position:absolute;right:0;z-index:10}.newMessage-module__new_message__7AimN[data-hidden=true]{height:0;overflow:hidden;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0);transition:height 0s ease-in-out .4s,-webkit-transform .4s ease-in-out;transition:transform .4s ease-in-out,height 0s ease-in-out .4s;transition:transform .4s ease-in-out,height 0s ease-in-out .4s,-webkit-transform .4s ease-in-out}.newMessage-module__button_new_message__4lxeN{align-items:inherit;box-sizing:border-box;color:inherit;display:inherit;flex:1 1 auto;font-size:inherit;height:100%;padding:0 14px}.newMessage-module__name__i7cy-{flex:0 0 auto;font-weight:700;margin-right:10px}.newMessage-module__icon__eCjek{margin-right:10px}.newMessage-module__description__Bp-zX{-webkit-line-clamp:1;-webkit-box-orient:vertical;word-wrap:break-word;display:-webkit-box;flex:1 1 auto;overflow:hidden;overflow-wrap:anywhere;word-break:break-word}.scrollDownButton-module__button_scroll_down__-XrLT{align-items:center;background-color:#fff;border-radius:50%;bottom:10px;box-shadow:0 0 5px 0 #0000000d,0 2px 3px 0 #00000005;box-sizing:border-box;display:inline-flex;height:36px;justify-content:center;position:absolute;right:10px;width:36px;z-index:50}.scrollDownButton-module__button_scroll_down__-XrLT:before{border:1px solid #0000001a;border-radius:50%;bottom:0;content:"";left:0;pointer-events:none;position:absolute;right:0;top:0}.scrollDownButton-module__button_scroll_down__-XrLT[data-hidden=true]{height:0;overflow:hidden;-webkit-transform:translate3d(0,calc(100% + 10px),0);transform:translate3d(0,calc(100% + 10px),0);transition:height 0s ease-in-out .4s,-webkit-transform .4s ease-in-out;transition:transform .4s ease-in-out,height 0s ease-in-out .4s;transition:transform .4s ease-in-out,height 0s ease-in-out .4s,-webkit-transform .4s ease-in-out}.preview_message+.scrollDownButton-module__button_scroll_down__-XrLT{bottom:45px}.preview_message+.scrollDownButton-module__button_scroll_down__-XrLT[data-hidden=true]{-webkit-transform:translate3d(0,calc(100% + 55px),0);transform:translate3d(0,calc(100% + 55px),0);transition:height 0s ease-in-out .7s,-webkit-transform .7s ease-in-out;transition:transform .7s ease-in-out,height 0s ease-in-out .7s;transition:transform .7s ease-in-out,height 0s ease-in-out .7s,-webkit-transform .7s ease-in-out}.scrollDownButton-module__icon_arrow__6We-I{height:13px;width:13px}.systemMessage-module__message__yIiOJ{box-sizing:border-box;display:flex;justify-content:center;padding-top:12px;text-align:center}.systemMessage-module__message__yIiOJ[data-flexible=false] .systemMessage-module__text__7T3Lj{width:100%}.systemMessage-module__message__yIiOJ[data-selected=true]{-webkit-filter:brightness(.8);filter:brightness(.8)}.systemMessage-module__text__7T3Lj{word-wrap:break-word;background-color:#efefef80;border:1px solid #0000;border-radius:12px;color:#949494;display:inline-block;font-size:12px;padding:3px 12px;word-break:break-word}.systemMessage-module__text__7T3Lj .systemMessage-module__date__o1LDL{display:block}.systemMessage-module__button_change_group__AHdR7{color:inherit;font-size:inherit;margin-left:3px;text-decoration:underline}.packageListItem-module__button_package__P95UO .packageListItem-module__icon_recent__I-MUf{color:#4270ed;height:22px;width:22px}.packageListItem-module__button_package__P95UO:hover .packageListItem-module__thumbnail__uPyJ6{background-color:#ececec}.packageListItem-module__button_package__P95UO[aria-selected=true] .packageListItem-module__thumbnail__uPyJ6{background-color:#fff}.packageListItem-module__thumbnail__uPyJ6{align-items:center;border-radius:8px;display:flex;height:100%;justify-content:center;overflow:hidden;position:relative;width:100%}.packageListItem-module__thumbnail__uPyJ6 .status_icon{font-size:15px;position:absolute;right:5px;top:5px;z-index:1}.packageListItem-module__thumbnail__uPyJ6 .status_icon.color_error{color:#ff334b}.packageListItem-module__thumbnail__uPyJ6 .status_icon.color_warning{color:#fcb321}.packageListItem-module__thumbnail__uPyJ6 .type_icon{align-items:center;background-color:#fff;border:1px solid #dfdfdf;border-radius:50%;bottom:0;box-sizing:border-box;display:inline-flex;height:18px;justify-content:center;position:absolute;right:0;width:18px}.packageListItem-module__thumbnail__uPyJ6 .type_icon svg{color:#555;height:10px;width:10px}.packageListItem-module__thumbnail__uPyJ6 .type_icon svg path{fill:currentColor}.packageListItem-module__image__35Ted{height:100%;object-fit:cover;width:100%}.reactionBubble-module__reaction_bubble__qNmm3{background-color:#0000;display:inline-flex;font-size:1em;width:1.5em}.reactionBubble-module__image__62OYp{display:block;width:100%}.reactionBubble-module__more__gnVnW{align-items:center;box-sizing:border-box;display:inline-flex;height:1.5em;justify-content:center;width:1.5em}.reactionBubble-module__more__gnVnW .reactionBubble-module__icon__hu54O{align-items:center;background-color:#cfcfcf;border-radius:50%;color:#fff;display:inline-flex;height:1.0625em;justify-content:center;width:1.0625em}.reactionBubble-module__more__gnVnW .reactionBubble-module__icon__hu54O svg{height:.8em;width:.8em}.reactionBubblelist-module__reaction_bubble_list__eV9o2{display:inline-flex;position:relative;z-index:1}.reactionBubblelist-module__reaction_bubble_list__eV9o2 .reactionBubblelist-module__button_status__kwCqs{display:inline-flex}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:first-child{z-index:6}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:not(:first-child):nth-child(2){-webkit-transform:translateX(-.75em);transform:translateX(-.75em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:nth-child(2){z-index:5}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:not(:first-child):nth-child(3){-webkit-transform:translateX(-1.5em);transform:translateX(-1.5em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:nth-child(3){z-index:4}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:not(:first-child):nth-child(4){-webkit-transform:translateX(-2.25em);transform:translateX(-2.25em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:nth-child(4){z-index:3}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:not(:first-child):nth-child(5){-webkit-transform:translateX(-3em);transform:translateX(-3em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:nth-child(5){z-index:2}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:not(:first-child):nth-child(6){-webkit-transform:translateX(-3.75em);transform:translateX(-3.75em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:nth-child(6){z-index:1}.reactionBubblelist-module__reaction_bubble_list__eV9o2:not([data-halign=right]) [class*=reaction_bubble]:not(:first-child):nth-child(7){-webkit-transform:translateX(-4.5em);transform:translateX(-4.5em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:last-child,[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:last-child{-webkit-transform:none;transform:none}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:first-child,[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:first-child{z-index:6}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:not(:last-child):nth-last-child(2),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:not(:last-child):nth-last-child(2){-webkit-transform:translateX(.75em);transform:translateX(.75em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:nth-child(2),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:nth-child(2){z-index:5}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:not(:last-child):nth-last-child(3),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:not(:last-child):nth-last-child(3){-webkit-transform:translateX(1.5em);transform:translateX(1.5em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:nth-child(3),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:nth-child(3){z-index:4}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:not(:last-child):nth-last-child(4),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:not(:last-child):nth-last-child(4){-webkit-transform:translateX(2.25em);transform:translateX(2.25em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:nth-child(4),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:nth-child(4){z-index:3}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:not(:last-child):nth-last-child(5),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:not(:last-child):nth-last-child(5){-webkit-transform:translateX(3em);transform:translateX(3em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:nth-child(5),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:nth-child(5){z-index:2}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:not(:last-child):nth-last-child(6),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:not(:last-child):nth-last-child(6){-webkit-transform:translateX(3.75em);transform:translateX(3.75em)}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:nth-child(6),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:nth-child(6){z-index:1}.reactionBubblelist-module__reaction_bubble_list__eV9o2[data-halign=right] [class*=reaction_bubble]:not(:last-child):nth-last-child(7),[class*=messageLayout][data-direction=reverse] .reactionBubblelist-module__reaction_bubble_list__eV9o2 [class*=reaction_bubble]:not(:last-child):nth-last-child(7){-webkit-transform:translateX(4.5em);transform:translateX(4.5em)}.reactionButton-module__button_reaction__F6hK-{background-color:#0000;display:flex;font-size:.9375em}.reactionButton-module__button_reaction__F6hK-:hover,.reactionButton-module__button_reaction__F6hK-[data-active=true]{-webkit-transform:scale(1.25);transform:scale(1.25);-webkit-transform-origin:center center;transform-origin:center center;transition:-webkit-transform .1s ease-out;transition:transform .1s ease-out;transition:transform .1s ease-out,-webkit-transform .1s ease-out}.reactionButton-module__image__aZFUe{width:2.625em}.reactionButtonlist-module__reaction_button_list__YDUCh{display:flex;gap:3px}.reactionPopover-module__reaction_popover__whj1x{font-size:inherit;line-height:0;pointer-events:auto;position:relative}.reactionPopover-module__button_popover__QlpMP{color:#c8c8c8;font-size:inherit;line-height:0}.reactionPopover-module__button_popover__QlpMP[data-active=true]{color:#000}.reactionPopover-module__button_popover__QlpMP[data-active=true] .reactionPopover-module__icon__YUPPA:after{background-color:#ffe877;border-radius:inherit;bottom:1px;content:"";left:1px;position:absolute;right:1px;top:1px;z-index:-1}.reactionPopover-module__button_popover__QlpMP[aria-expanded=true]+.reactionPopover-module__popover_content__zYAVw{display:block}.reactionPopover-module__button_popover__QlpMP .reactionPopover-module__icon__YUPPA{border-radius:50%;font-size:1.125em;position:relative}.reactionPopover-module__popover_content__zYAVw{display:none;left:50%;position:absolute;top:1.625em;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:-webkit-max-content;width:max-content;z-index:100}.reactionPopover-module__reaction_popover__whj1x[data-valign=top] .reactionPopover-module__popover_content__zYAVw{bottom:1.625em;top:auto}.reactionCountlist-module__reaction_count_list__RCPpa{-webkit-overflow-scrolling:touch;box-sizing:border-box;display:flex;gap:5px;margin-bottom:-13px;overflow-x:overlay;overflow-y:hidden}.reactionCountlistItem-module__reaction_count_item__9nbU-{align-items:center;display:inline-flex;font-size:16px}.reactionCountlistItem-module__count__MuxeH{font-size:11px;line-height:0}.reactionResultlistItem-module__item__j8Hrn{align-items:center;box-sizing:border-box;display:flex;height:50px;padding:0 15px;position:relative;z-index:1}.reactionResultlistItem-module__item__j8Hrn div[class*=thumbnail_wrap]{border-radius:50%;height:38px;width:38px}.reactionResultlistItem-module__item__j8Hrn [class*=reaction_bubble]{font-size:20px}.reactionResultlistItem-module__item__j8Hrn [class*=reaction_bubble] img[class*=reactionBubble]{height:30px;width:30px}.reactionResultlistItem-module__info__MIbaq{align-items:center;display:flex;flex:1 1 auto;margin:0 10px}.reactionResultlistItem-module__name__NZoCg{-webkit-line-clamp:1;-webkit-box-orient:vertical;color:#1f1f1f;display:flex;display:-webkit-box;font-size:14px;font-weight:500;overflow:hidden;overflow-wrap:anywhere}.reactionResultPopup-module__popup__x70WP{box-sizing:border-box;display:flex;flex-direction:column;height:100%;min-width:310px;overflow-y:overlay}.reactionResultPopup-module__popup__x70WP [class*=reaction_count_list]{padding:6px 15px}.reactionResultPopup-module__popup__x70WP [class*=reaction_count_list] img[class*=reactionBubble]{height:24px;width:24px}.reactionResultPopup-module__header__BCzSL{align-items:center;display:flex;margin:14px 15px 8px;padding-right:100px;text-align:center}.reactionResultPopup-module__header__BCzSL .reactionResultPopup-module__reaction_count__5-pkm{color:#1f1f1f;font-size:13px}[class^=reactionCountlist-module]{margin-bottom:0}.reactionResultPopup-module__content__MA0vM{box-sizing:border-box;flex:1 1;overflow-y:overlay}[class*=modal_wrap] .reactionResultPopup-module__content__MA0vM{max-height:270px}.reactionResultPopup-module__button_group__oINtk{display:flex;position:absolute;right:8px;top:8px}.reactionResultPopup-module__button_info__AKMBF{color:#c8c8c8;display:inline-flex;padding:7px;z-index:1}.reactionResultPopup-module__button_info__AKMBF:hover{color:#b7b7b7}.reactionResultPopup-module__button_info__AKMBF:active{color:#c8c8c8}.reactionResultPopup-module__button_info__AKMBF:not(:only-child){padding:7px 5px}.reactionResultPopup-module__button_info__AKMBF svg{height:14px;width:14px}.reactionResultPopup-module__button_info__AKMBF svg g{fill:currentColor;stroke:currentColor}.packageItemList-module__package_item_wrap__WCrUz{display:flex;flex:1 1 auto;flex-direction:column;height:100%}button[class*=button_resize]~.packageItemList-module__package_item_wrap__WCrUz{height:calc(100% - 10px)}.packageItemList-module__package_item_list__L8-fl{box-sizing:border-box;grid-auto-rows:100px;padding:4px 5px;-webkit-transform:translateZ(0);transform:translateZ(0)}.packageItemList-module__package_item_list__L8-fl[data-type=emoticon]{padding:2px 19px}@supports not selector(has){.packageItemList-module__package_item_list__L8-fl:hover:after{background-color:#ffffff4d;bottom:0;content:"";left:0;pointer-events:none;position:fixed;right:0;top:0;z-index:1}}@supports selector(has){.packageItemList-module__package_item_list__L8-fl:has(.packageItemList-module__button_item__SchyW:hover) .packageItemList-module__button_item__SchyW:not(.packageItemList-module__button_item__SchyW:hover){position:relative}.packageItemList-module__package_item_list__L8-fl:has(.packageItemList-module__button_item__SchyW:hover) .packageItemList-module__button_item__SchyW:not(.packageItemList-module__button_item__SchyW:hover):after{background-color:#ffffff4d;bottom:0;content:"";left:0;pointer-events:none;position:absolute;right:0;top:0;z-index:1}}.packageItemList-module__button_item__SchyW{box-sizing:initial;height:100px;padding:4px 8px;position:relative;width:100px}[data-type=emoticon] .packageItemList-module__button_item__SchyW{height:50px;padding:6px 7px;width:50px}.packageItemList-module__button_item__SchyW:hover{bottom:0;top:0;z-index:2}.packageItemList-module__button_item__SchyW:hover .type_icon{visibility:visible}.packageItemList-module__button_item__SchyW:hover .packageItemList-module__thumbnail__Gtd96{-webkit-transform:scale(1.14);transform:scale(1.14);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:2}.packageItemList-module__package_item_list__L8-fl[data-type=emoticon] .packageItemList-module__button_item__SchyW:hover .packageItemList-module__thumbnail__Gtd96{-webkit-transform:scale(1.2);transform:scale(1.2)}.packageItemList-module__button_item__SchyW .type_icon{align-items:center;background-color:#fff;border:1px solid #dfdfdf;border-radius:50%;bottom:5px;box-sizing:border-box;cursor:pointer;display:inline-flex;height:20px;justify-content:center;position:absolute;right:5px;visibility:hidden;width:20px;z-index:2}.packageItemList-module__button_item__SchyW .type_icon:not(:only-child){margin-bottom:2px}.packageItemList-module__button_item__SchyW .type_icon svg{color:#7e8496;height:14px;width:14px}.packageItemList-module__button_item__SchyW .type_icon svg path{fill:currentColor}.packageItemList-module__thumbnail__Gtd96{align-items:center;border-radius:8px;display:flex;height:100%;justify-content:center;overflow:hidden;position:relative;width:100%}.packageItemList-module__thumbnail__Gtd96 canvas,.packageItemList-module__thumbnail__Gtd96 img{height:100%;width:100%}.packageItemList-module__thumbnail__Gtd96 img{object-fit:contain}.banner_area{align-items:center;background-color:#fff;box-sizing:border-box;display:flex;flex:1 1 auto;flex-direction:column;justify-content:center;padding:30px 15px;text-align:center;width:100%;z-index:1}.banner_area.sticky_banner{bottom:0;padding:15px;position:-webkit-sticky;position:sticky}.banner_area.no_padding{padding:0}.banner_area .banner_title{color:#1f1f1f;font-size:13px}.banner_area .banner_title+.banner_description{margin-top:6px}.banner_area .banner_description{color:#949494;font-size:12px}.banner_area .banner_description .error_message{color:#ff3a44;display:block;height:15px;margin-bottom:-8px;margin-top:10px}.banner_area .banner_description .sticker{margin-top:4px}.banner_area .banner_description .sticker img{height:125px;width:125px}.banner_area .button_area{box-sizing:border-box;display:flex;flex-wrap:wrap;gap:6px 5px;justify-content:center;padding:0 28px}.banner_area .button_area:not(:first-child){margin-top:18px}.banner_area .button_delete{background-color:#efefef;height:32px;max-width:144px;min-width:60px;padding:0 12px}.banner_area .button_delete:disabled{opacity:.6}.banner_area .button_delete:not(:disabled):hover{background-color:#ebebeb}.banner_area .button_delete[data-color=primary]{order:var(--positive-button-order)}.replyTargetMessage-module__reply_target_message__Sw1D8{border-top:1px solid #00000014;display:flex;position:relative}.replyTargetMessage-module__content_wrap__-4WM1{background-color:#0000;flex:1 1;height:50px;max-width:none}.replyTargetMessage-module__content_wrap__-4WM1:before{display:none}.replyTargetMessage-module__content_wrap__-4WM1 button{background-color:#fff;flex:1 1;padding:0 38px 0 12px}.replyTargetMessage-module__content_wrap__-4WM1 button>div{height:34px}.replyTargetMessage-module__content_wrap__-4WM1 [class*=thumbnail_wrap]{align-items:center;display:flex;height:100%}.replyTargetMessage-module__content_wrap__-4WM1 [class*=thumbnail_wrap] [class*=thumbnail]{height:22px}.replyTargetMessage-module__content_wrap__-4WM1:not([data-type]) [class*=username]{margin-top:.2em}.replyTargetMessage-module__content_wrap__-4WM1 [class*=content]{margin-top:0}.replyTargetMessage-module__content_wrap__-4WM1 [class*=content] [class*=thumbnail]{background-color:#0000;height:34px;width:34px}.replyTargetMessage-module__content_wrap__-4WM1 [class*=content] [class*=text]{font-size:.85em;margin-top:.25em}.replyTargetMessage-module__content_wrap__-4WM1 [class*=text]{-webkit-line-clamp:1}.replyTargetMessage-module__button_wrap__lrKdo{position:absolute;right:10px;top:2px}.replyTargetMessage-module__button_wrap__lrKdo .replyTargetMessage-module__button_delete__nlBIu{color:#949494;padding:2px}.replyTargetMessage-module__button_wrap__lrKdo .replyTargetMessage-module__button_delete__nlBIu svg{height:14px;width:14px}.tablist-module__tab_list__jg2ox{align-items:center;border-bottom:1px solid #efefef;box-sizing:border-box;display:flex;gap:20px;padding:0 13px}.tablistItem-module__button_tab__9urIR{align-items:center;color:#949494;display:inline-flex;flex:1 0 auto;font-size:13px;justify-content:center;min-height:30px;position:relative}.tablistItem-module__button_tab__9urIR[aria-selected=true]{color:#1f1f1f;font-weight:500}.tablistItem-module__button_tab__9urIR[aria-selected=true] .tablistItem-module__text__gJoiJ{align-items:center;box-sizing:border-box;display:inline-flex;padding:8px 0;position:relative}.tablistItem-module__button_tab__9urIR[aria-selected=true] .tablistItem-module__text__gJoiJ:after{border-bottom:2px solid;bottom:0;content:"";left:50%;padding:0 10px;position:absolute;-webkit-transform:translate3d(-50%,0,0);transform:translate3d(-50%,0,0);width:100%}.sendFilelist-module__send_file_list__CIZiJ{overflow-y:overlay;padding:1px 0;width:inherit}.sendFilelistItem-module__send_file_item__fZKNt{position:relative}.sendFilelistItem-module__send_file_item__fZKNt[data-drag-position=after]:after,.sendFilelistItem-module__send_file_item__fZKNt[data-drag-position=before]:before{border-radius:1px;border-top:2px solid #b7b7b7;content:"";left:50%;position:absolute;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:80px;z-index:1}.sendFilelistItem-module__send_file_item__fZKNt[data-drag-position=before]:before{top:-1px}.sendFilelistItem-module__send_file_item__fZKNt[data-drag-position=after]:after{bottom:-1px}.sendFilelistItem-module__send_file_item__fZKNt[data-file-support=false]{opacity:.25}.sendFilelistItem-module__send_file_item__fZKNt[data-dragging=true]{opacity:.2}.sendFilelistItem-module__send_file_inner__oNX0S{align-items:center;box-sizing:border-box;display:flex;min-height:60px;padding:8px 16px;width:100%}.sendFilelistItem-module__send_file_inner__oNX0S:hover{background-color:#fcfcfc}.sendFilelistItem-module__send_file_inner__oNX0S:hover .sendFilelistItem-module__button_delete__L2m6h{visibility:visible}.sendFilelistItem-module__button_drag__69Ur-{align-items:center;cursor:grab;display:inline-flex;justify-content:center;margin-right:4px}.sendFilelistItem-module__button_drag__69Ur-:active{cursor:grabbing}.sendFilelistItem-module__file_type__FYGhQ{align-items:center;border:1px solid #0000001a;border-radius:4px;color:#b7b7b7;display:inline-flex;flex:0 0 auto;height:44px;justify-content:center;width:44px}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=pdf]{color:#f00004}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=illustrator]{color:#ea8206}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=photoshop]{color:#5163e0}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=word]{color:#4878d9}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=powerpoint]{color:#ee6422}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=excel]{color:#14a37b}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=image]{border:1px solid #0000001a;position:relative}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=image] img{border-radius:inherit;display:block;height:100%;object-fit:cover;width:100%}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=video]{color:#5163e0}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=audio],.sendFilelistItem-module__file_type__FYGhQ[data-file-type=voice]{color:#925bd6}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=document]{color:#777}.sendFilelistItem-module__file_type__FYGhQ[data-file-type=zip]{color:#949494}.sendFilelistItem-module__file_type__FYGhQ .icon{font-size:20px}.sendFilelistItem-module__info__RGVmf{display:flex;flex:1 1 auto;flex-direction:column;margin:0 10px}.sendFilelistItem-module__info__RGVmf .sendFilelistItem-module__filename__EFgkv{color:#1f1f1f;display:flex;font-size:13px;font-weight:400;line-height:15px}.sendFilelistItem-module__info__RGVmf .sendFilelistItem-module__name__Zw8gf{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;overflow-wrap:anywhere}.sendFilelistItem-module__info__RGVmf .sendFilelistItem-module__ext__EkI4A{flex:0 0 auto}.sendFilelistItem-module__info__RGVmf .sendFilelistItem-module__size__GDcm5{color:#777;font-size:11px;line-height:13px;margin-top:4px}.sendFilelistItem-module__button_delete__L2m6h{color:#c8c8c8;margin-left:1px;visibility:hidden}.sendFilelistItem-module__button_delete__L2m6h:hover{color:#b7b7b7}.sendFileModal-module__modal__ZD4Jo{display:flex;flex-direction:column;height:100%;position:relative}[class*=modal_wrap] .sendFileModal-module__modal__ZD4Jo{width:370px}.sendFileModal-module__modal__ZD4Jo .sendFileModal-module__toast__RihGs{left:30px;position:absolute;right:30px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.sendFileModal-module__header__nW-wv{align-items:center;box-sizing:border-box;display:flex;flex:0 0 auto;height:44px;padding:15px 45px 15px 15px;width:100%}.sendFileModal-module__header__nW-wv .sendFileModal-module__title__5d3cy{color:#1f1f1f;font-size:13px;line-height:16px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sendFileModal-module__content__cs-rr{box-sizing:border-box;display:flex;flex:1 1 auto;overflow-y:overlay;position:relative;width:100%}[class*=modal_wrap] .sendFileModal-module__content__cs-rr{max-height:315px}.sendFileModal-module__content__cs-rr .sendFileModal-module__drag_box__eSquW{align-items:center;background:#fffffff2;border:1px solid #dfdfdf;border-radius:6px;bottom:0;box-sizing:border-box;color:#303030;cursor:copy;display:flex;justify-content:center;left:0;margin:0 15px;position:absolute;right:0;top:0;z-index:1}.sendFileModal-module__footer__7Tbtm{box-sizing:border-box;flex:0 0 auto;padding:10px 15px 16px;width:100%}.sendFileModal-module__footer__7Tbtm .sendFileModal-module__button_send__IQKjX{height:36px;width:100%}.stickerMessageContent-module__content_wrap__BGfk-{-webkit-user-select:text;user-select:text}.stickerMessageContent-module__button_view__rTOx0{display:block;height:inherit;width:inherit}.stickerMessageContent-module__thumbnail__eMXOS{position:relative}.stickerMessageContent-module__thumbnail__eMXOS canvas{display:block}.multiple_large_emoji img:only-child{height:120px;width:120px}.multiple_large_emoji img:first-child:nth-last-child(2)~img,.multiple_large_emoji img:nth-last-child(2){height:100%;width:100px}.multiple_large_emoji img:first-child:nth-last-child(3)~img,.multiple_large_emoji img:nth-last-child(3){height:68px;width:68px}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja{background-color:#0000004d;bottom:0;display:flex;justify-content:center;left:0;overflow:hidden;position:absolute;right:0;top:0}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=TOP],.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=top]{align-items:flex-start}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=TOP] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=top] img{object-position:center top}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=CENTER] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=center] img{bottom:max(calc(50% - var(--animation-image-height, "100%")/2),0px);position:absolute}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=CENTER][data-scale=FILL] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=CENTER][data-scale=fill] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=center][data-scale=FILL] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=center][data-scale=fill] img{object-position:bottom center}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=CENTER] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=center] img{object-position:center center}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=BOTTOM],.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=bottom]{align-items:flex-end}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=BOTTOM] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-valign=bottom] img{object-position:center bottom}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-scale=FIT] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-scale=fit] img{height:100%;object-fit:contain;width:100%}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-scale=FILL] img,.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-scale=fill] img{height:100%;object-fit:cover;width:100%}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-layer=FOREGROUND],.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-layer=foreground]{z-index:15}.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-layer=BACKGROUND],.stickerPopupAnimationLayer-module__animation_wrap__S84Ja[data-layer=background]{z-index:-1}.stickerPopup-module__popup__HGGZ0{display:flex;flex:1 1 auto;flex-direction:column;height:100%;overflow:hidden}.stickerPopup-module__popup__HGGZ0[data-is-resizing=true]{cursor:ns-resize}.stickerPopup-module__popup__HGGZ0[data-is-resizing=true]>*{pointer-events:none}.stickerPopup-module__popup__HGGZ0[data-is-resizing=true] .stickerPopup-module__button_resize__JtnKn{pointer-events:all}.stickerPopup-module__popup_header__SwXMu{height:33px}.stickerPopup-module__tab_area__KPMxm{display:flex;height:inherit;justify-content:center;width:100%}.stickerPopup-module__button_tab__pUNj5{align-items:center;box-sizing:border-box;color:#949494;display:inline-flex;font-size:13px;height:inherit;justify-content:center;margin:0 12px;padding:0 10px}.stickerPopup-module__button_tab__pUNj5[aria-pressed=true]{color:#1f1f1f}.stickerPopup-module__button_tab__pUNj5[aria-pressed=true] .stickerPopup-module__text__DJnCq:after{border-bottom:2px solid #1f1f1f;bottom:0;content:"";left:0;position:absolute;right:0}.stickerPopup-module__button_tab__pUNj5 .stickerPopup-module__text__DJnCq{box-sizing:border-box;height:inherit;padding:8px 0;position:relative}.stickerPopup-module__popup_content__nl9PU{display:flex;flex:1 1 auto;flex-direction:column;height:calc(100% - 33px);width:100%}.stickerPopup-module__package_area__KnNNQ{background-color:#f5f5f5;flex:0 0 auto;max-height:215px;min-height:85px;overflow-y:overlay}.stickerPopup-module__package_item_area__muhjS{background-color:#fff;border-top:1px solid #efefef;box-sizing:border-box;flex:1 1 auto;overflow-y:overlay;position:relative}.stickerPopup-module__button_resize__JtnKn{align-items:center;background-color:#fff;cursor:ns-resize;display:flex;flex-direction:column;height:10px;justify-content:center;left:0;position:-webkit-sticky;position:sticky;right:0;top:0;width:100%;z-index:1}.stickerPopup-module__button_resize__JtnKn:before{border-bottom:1px solid #dfdfdf;border-top:1px solid #dfdfdf;box-sizing:border-box;content:"";display:block;height:4px;width:28px}.packageList-module__package_list__-IFIR{box-sizing:border-box;display:grid;gap:8px;grid-auto-rows:minmax(42px,auto);grid-template-columns:repeat(auto-fill,42px);padding:8px}.packageList-module__button_package__q9lak .packageList-module__icon_recent__YYvVF{color:#4270ed;height:22px;width:22px}.packageList-module__button_package__q9lak:hover .packageList-module__thumbnail__6o7N9{background-color:#ececec}.packageList-module__button_package__q9lak[aria-selected=true] .packageList-module__thumbnail__6o7N9{background-color:#fff}.packageList-module__thumbnail__6o7N9{align-items:center;border-radius:8px;display:flex;height:100%;justify-content:center;overflow:hidden;position:relative;width:100%}.packageList-module__thumbnail__6o7N9 .status_icon{font-size:15px;position:absolute;right:5px;top:5px;z-index:1}.packageList-module__thumbnail__6o7N9 .status_icon.color_error{color:#ff334b}.packageList-module__thumbnail__6o7N9 .status_icon.color_warning{color:#fcb321}.packageList-module__thumbnail__6o7N9 .type_icon{align-items:center;background-color:#fff;border:1px solid #dfdfdf;border-radius:50%;bottom:0;box-sizing:border-box;display:inline-flex;height:18px;justify-content:center;position:absolute;right:0;width:18px}.packageList-module__thumbnail__6o7N9 .type_icon svg{color:#555;height:10px;width:10px}.packageList-module__thumbnail__6o7N9 .type_icon svg path{fill:currentColor}.packageList-module__image__ee0bj{height:100%;object-fit:cover;width:100%}.stickerTextEditInput-module__input_box__Knj9u{display:flex;flex-direction:column}.stickerTextEditInput-module__label__kX43E{align-items:center;background-color:#f5f5f5;border-radius:5px;box-sizing:border-box;display:flex;padding:0 6px;width:265px}.stickerTextEditInput-module__input__S3q0c{align-items:center;box-sizing:border-box;color:#1f1f1f;display:flex;flex:1 1 auto;font-size:13px;height:35px}.stickerTextEditInput-module__input__S3q0c::-webkit-input-placeholder{color:#b7b7b7}.stickerTextEditInput-module__input__S3q0c::placeholder{color:#b7b7b7}.stickerTextEditInput-module__input__S3q0c:placeholder-shown+.stickerTextEditInput-module__button_reset__YMzG6{display:none}.stickerTextEditInput-module__button_reset__YMzG6{display:flex}.stickerTextEditInput-module__input_count__nlfVM{align-self:flex-end;font-size:9px;margin-bottom:5px}.textMessageContent-module__content_wrap__238E1{word-wrap:break-word;background-color:#efefef;border-radius:17.5px;box-sizing:border-box;display:inline-flex;flex-direction:column;font-size:inherit;max-width:690px;padding:8px 12px;position:relative;-webkit-user-select:text;user-select:text;word-break:break-word}[class*=message][data-direction=reverse]>[class*=content]>[class*=content]>[class*=content_inner]>.textMessageContent-module__content_wrap__238E1{background-color:#c3f69d}.textMessageContent-module__content_wrap__238E1:before{background-color:inherit;content:"";height:12px;left:-3px;-webkit-mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);mask-image:url(/static/media/icon_tale.5e5d961840706bc842d1.svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;position:absolute;top:0;width:12px}[class*=message][data-group=item] .textMessageContent-module__content_wrap__238E1:before,[class*=message][data-group=start] .textMessageContent-module__content_wrap__238E1:before{display:none}[class*=message][data-direction=reverse] .textMessageContent-module__content_wrap__238E1:before{left:auto;right:-3px;-webkit-transform:scaleX(-1);transform:scaleX(-1)}.textMessageContent-module__icon_lock__SV-ZC{align-items:center;border:1px solid;border-radius:50%;box-sizing:border-box;color:#b7b7b7;height:calc(var(--message-font-size) + 3px);justify-content:center;margin-right:3px;vertical-align:top;width:calc(var(--message-font-size) + 3px)}[class*=message][data-direction=reverse] .textMessageContent-module__icon_lock__SV-ZC{color:#879480}.textMessageContent-module__icon_lock__SV-ZC svg{height:calc(var(--message-font-size) - 4px);width:calc(var(--message-font-size) - 4px)}.textMessageContent-module__text__EFwEN{color:#1f1f1f;font-size:inherit;line-height:1.23077}.textMessageContent-module__text__EFwEN .mention{color:#1f5eff;cursor:pointer;font-weight:500}.textMessageContent-module__text__EFwEN .mention[data-type=myname]{font-weight:700}.textMessageContent-module__text__EFwEN a{color:#1f5eff;font-size:inherit;font-weight:300;line-height:inherit;-webkit-user-select:text;user-select:text}.textMessageContent-module__text__EFwEN img:not(.native_emoji){height:24px;vertical-align:middle;width:24px}.textMessageContent-module__button_more__d02XP{align-items:center;border-bottom-left-radius:17.5px;border-bottom-right-radius:17.5px;box-sizing:border-box;color:#949494;display:flex;font-size:11px;font-weight:600;letter-spacing:.02px;margin:10px -12px -9px;padding:9px 12px;position:relative}.textMessageContent-module__button_more__d02XP span{-webkit-user-select:none;user-select:none}.textMessageContent-module__button_more__d02XP:before{border-top:1px solid #0000001a;content:"";left:0;position:absolute;right:0;top:0}.textMessageContent-module__button_more__d02XP .textMessageContent-module__icon_more__gDbLW{margin-left:auto}.textViewPopup-module__popup__soPUk{box-sizing:border-box;display:flex;flex-direction:column;height:100%;overflow-y:overlay}.textViewPopup-module__content__22GkV{font-size:14px;padding:10px}.textViewPopup-module__content__22GkV a{color:#1f5eff;font-size:inherit;font-weight:300;line-height:inherit;-webkit-user-select:text;user-select:text}.textViewPopup-module__footer__2MjCx{border-top:1px solid #efefef;margin-top:auto}.textViewPopup-module__footer__2MjCx .textViewPopup-module__button_group__6c6CN{display:flex;justify-content:center;margin:7px 0}.textViewPopup-module__footer__2MjCx .textViewPopup-module__button_confirm__pMWLN{height:30px;min-width:90px;padding:0 14px}.textViewPopup-module__footer__2MjCx .textViewPopup-module__button_confirm__pMWLN:disabled{color:#fff}.galleryItem-module__thumbnail__M4smL{background-color:#555;box-sizing:border-box;cursor:pointer;display:inline-block;flex:0 0 auto;height:60px;position:relative;width:60px}.galleryItem-module__thumbnail__M4smL:before{background-color:#000000a6;bottom:0;content:"";left:0;position:absolute;right:0;top:0;z-index:2}.galleryItem-module__thumbnail__M4smL[aria-current=true]{opacity:1}.galleryItem-module__thumbnail__M4smL[aria-current=true]:before{content:none}.galleryItem-module__thumbnail__M4smL[aria-current=true]:after{border:2px solid #07b53b;bottom:0;content:"";left:0;position:absolute;right:0;top:0;z-index:2}.galleryItem-module__thumbnail__M4smL+.galleryItem-module__thumbnail__M4smL{margin-left:5px}.galleryItem-module__thumbnail__M4smL img{display:block;height:100%;object-fit:contain;width:100%}.galleryItem-module__thumbnail__M4smL img.is_loading{background-size:20px}.galleryItem-module__icon__ixVTY{bottom:5px;left:5px;position:absolute;z-index:1}.galleryItem-module__icon__ixVTY[data-type=expired]{bottom:50%;left:50%;-webkit-transform:translate3d(-50%,50%,0);transform:translate3d(-50%,50%,0)}.videoMessageContent-module__content_wrap__ffvJq{background-color:#fff;max-width:260px;min-height:100px;min-width:100px;-webkit-user-select:text;user-select:text}.videoMessageContent-module__thumbnail__Va9Ie{background-color:#f0f0f1;border-radius:5px;max-height:340px;overflow:hidden;padding-top:100%;position:relative;width:100%}.videoMessageContent-module__thumbnail__Va9Ie[data-checked=true]:after{background-color:#0000004d;bottom:0;content:"";left:0;pointer-events:none;position:absolute;right:0;top:0}.videoMessageContent-module__thumbnail__Va9Ie:only-child:last-child{height:100%;max-height:340px;padding-top:0}.videoMessageContent-module__thumbnail__Va9Ie:only-child:last-child[data-size=small],.videoMessageContent-module__thumbnail__Va9Ie:only-child:last-child[data-size=small] img.is_loading{max-height:100px}.videoMessageContent-module__thumbnail__Va9Ie:only-child:last-child img{object-fit:contain;position:static}.videoMessageContent-module__thumbnail__Va9Ie:only-child:last-child img:not(.is_loading){background-color:#fff;border:1px solid #f5f5f5;border-radius:5px;box-sizing:border-box}.videoMessageContent-module__thumbnail__Va9Ie:only-child:last-child img.is_loading{height:180px!important;width:260px!important}.videoMessageContent-module__thumbnail__Va9Ie img{bottom:0;display:block;height:100%;left:0;object-fit:cover;position:absolute;right:0;top:0;width:100%}.videoMessageContent-module__button_view__qMX7E{display:block;height:inherit;margin:auto;width:inherit}.videoMessageContent-module__button_view__qMX7E:not(:disabled) .videoMessageContent-module__icon_play__N7WFP:hover{background-color:#00000059}.videoMessageContent-module__button_view__qMX7E .videoMessageContent-module__icon_play__N7WFP{align-items:center;border:1px solid #fff;border-radius:50%;display:inline-flex;height:40px;justify-content:center;width:40px}.videoMessageContent-module__button_view__qMX7E .videoMessageContent-module__icon_play__N7WFP svg{height:15px;width:15px}.videoMessageContent-module__info__j528-{align-items:center;background-color:#00000040;bottom:0;color:#fff;display:flex;flex-direction:column;justify-content:center;left:0;position:absolute;right:0;top:0;z-index:1}.videoMessageContent-module__play_time__AEzW0{display:inline-flex;font-size:12px;margin-top:2px}.alertModal-module__modal__7957X{height:100%;margin:auto;position:relative;width:300px}.alertModal-module__content__ooIpa,.alertModal-module__modal__7957X{align-items:center;display:flex;flex-direction:column;justify-content:center}.alertModal-module__content__ooIpa{box-sizing:border-box;padding:30px 28px 18px}.alertModal-module__title__s9Z47{color:#1f1f1f;font-size:13px;font-weight:700;line-height:16px}.alertModal-module__title__s9Z47:only-child{color:#000;font-size:12px;font-weight:500}.alertModal-module__checkbox__RwKLj{margin-top:4px}.alertModal-module__checkbox__RwKLj [class*=checkbox_wrap]{flex:0 0 auto}.alertModal-module__checkbox__RwKLj [class*=checkbox_wrap] span[class*=text]{color:#000;font-size:12px;line-height:16px}.alertModal-module__checkbox__RwKLj [class*=checkbox_wrap] i{border-radius:4px;height:17px;width:17px}.alertModal-module__checkbox__RwKLj [class*=checkbox_wrap] i:before{background-color:#fff;border:1px solid #dfdfdf}.alertModal-module__description__c0mhb{color:#1f1f1f;font-size:12px;letter-spacing:-.2px;line-height:18px;text-align:center}.alertModal-module__description__c0mhb[data-color=primary]{color:#07b53b}.alertModal-module__title__s9Z47+.alertModal-module__description__c0mhb{color:#777;margin-top:8px}.alertModal-module__description__c0mhb+.alertModal-module__description__c0mhb{margin-top:12px}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj{box-sizing:border-box;display:flex;flex-wrap:wrap;gap:6px 5px;justify-content:center;margin-bottom:26px;padding:0 28px}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_action__URAY-,.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_cancel__EJ4Vz{color:#1f1f1f}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_cancel__EJ4Vz{background-color:#efefef}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_cancel__EJ4Vz:hover{background-color:#ebebeb}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_action__URAY-{background-color:#fcfcfc}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_confirm__h7mMU{order:var(--positive-button-order)}.alertModal-module__footer__--NJ3 .alertModal-module__button_group__OfIoj .alertModal-module__button_confirm__h7mMU:disabled{background-color:#06c755}.alertModal-module__footer__--NJ3 button{height:32px;max-width:144px;min-width:60px;padding:0 12px}.alertModal-module__footer__--NJ3 button:disabled{opacity:.6}.alertModal-module__footer__--NJ3 button:nth-last-child(3):first-child{flex:0 0 auto;max-width:none;width:100%}.alertModal-module__footer__--NJ3 button:nth-last-child(3):first-child.alertModal-module__button_cancel__EJ4Vz,.alertModal-module__footer__--NJ3 button:nth-last-child(3):first-child~.alertModal-module__button_cancel__EJ4Vz{background-color:#0000;border-color:#0000;order:2}.alertModal-module__footer__--NJ3 button:nth-last-child(3):first-child.alertModal-module__button_cancel__EJ4Vz:hover,.alertModal-module__footer__--NJ3 button:nth-last-child(3):first-child~.alertModal-module__button_cancel__EJ4Vz:hover{background-color:revert}.alertModal-module__footer__--NJ3 button:nth-last-child(3):first-child~button{flex:0 0 auto;max-width:none;width:100%}.footerButtonGroup-module__button_group__BveGY{display:flex;gap:6px;justify-content:center}.footerButtonGroup-module__button_cancel__0PnCW,.footerButtonGroup-module__button_confirm__Foa8s{height:30px;min-width:88px;padding:0 14px}.footerButtonGroup-module__button_confirm__Foa8s{font-weight:700;order:var(--positive-button-order)}.memberPopup-module__popup__KtCXP{display:flex;flex-direction:column;height:100%;width:100%}.memberPopup-module__header__SerBQ{background-color:#eff1f6;box-sizing:border-box;padding:10px}.memberPopup-module__contents__7scEN{flex:1 1 auto;overflow-y:overlay}.memberPopup-module__footer__ts5qf{border-top:1px solid #dfdfdf;box-sizing:border-box;flex:0 0 auto;margin-top:auto;padding:10px 15px}.memberPopup-module__popup__KtCXP[data-type="1toN"] .memberPopup-module__contents__7scEN div[class*=list_wrap]>div{padding:10px 0}.memberPopup-module__popup__KtCXP[data-type="1toN"] div[class*=friendlistItem]{height:43px}.memberPopup-module__popup__KtCXP[data-type="1toN"] div[class*=friendlistItem] div[class*=profileImage][class*=thumbnail_wrap]{height:34px;width:34px}.profileModal-module__modal__QRrnT{height:100%;margin:auto;position:relative}.modal_wrap .profileModal-module__modal__QRrnT{height:auto;width:370px}.profileModal-module__modal__QRrnT .button_report{flex:0 0 auto;height:28px;margin-top:12px}.profileModal-module__content__qKTEy{align-items:center;box-sizing:border-box;display:flex;flex-direction:column;height:inherit}.profileModal-module__background_area__OHWte{flex:0 1 190px;min-height:100px;position:relative;width:100%}.profileModal-module__background_area__OHWte .profileModal-module__thumbnail__iYDys{background-color:#8c8c8c;background-image:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAqgAAAKoCAMAAACMZv1uAAABmFBMVEUtvZkxvqA5v7AvvZxCwMA2vqouvZpFwMVAv7syvqNFwMQ8v7QwvZ9DwMI4vq1BwL81vqc/v7oyvqI9v7ZEwMM4vq4tvZo1vqhBv74wvZ46v7EuvZtAv7xEwMQ9v7cxvp9EwMIvvZ04vqwuvZxBv70yvqE7v7JDwMFCwL8zvqM3vqwzvqUxvqE1vqkzvqQ8v7U7v7M2vqk0vqU+v7k6v7A3vqs0vqc+v7g5v65Av705v69DwMA0vqY/v7s+v7c6v7IvvZ4/v7k7v7Q9v7U3vqpBv784vK81vKkyvKMwvJ9EvsVDucVCucNAucA/ur09urg6u7Q4u682u6ozvKYxvKFDu8VCucI8urc5u7I4u640vKczvKQxvKJCucQ+urs7urY6u7M3u6w0vKYxvKBAur8+urw7u7Q0vKgzvKVDucQ+uro5u7A3u642u6tBucE7urU3u601vKhBucJBucA/ur4/urw9uro8urg7u7U2u6w1vKo9urk8urY5u7EyvKRAusAwvKBAur5DusVEvcVEvMVFv8VEu8VFvsUFQtmCAAAACXBIWXMAAAsTAAALEwEAmpwYAAAU7klEQVR42u3dCX/U5oHH8TqM8xjZY3yIeDAjg8FYg+31iWsw5mrTDQmELLnbTVLSkG663bDN1d3tse0ead52bU4fc2hmJP2f4/d9BTN6fh8djx5JP/oRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBnQP0DgCxeOqb+BUAGlcGX1T8B6MwMHVf/BKAzEw2PqH8D0JEx1VFOU2E9Y8yJMU5TYbvdUM34hPpXAB3shWomOfjDco9DjU++ov4dQFuPQzXVKfXvANp6EqqpcSsVVnsaajR5Sv1LgDaehmri6dPqnwK09ixUUxnkggr2eh6qqXPTH/Z6EWoyc0b9Y4BWXoRqzk7Pqn8N0MK+UE3l3Hn1zwGa2x+qmWN5Cix1INRk8gKX/rDSgVBNPM8qaljpYKgmPclCKtjoUKimwWkqbHQ4VDN+kdNU2OdIqNEMp6mwz5FQdy+oWJ4C6xwN1VQX1D8KOKxJqCZdVP8q4JBmoZrakvpnAQc1DdUMcZoKuzQPlQsqWKZ5qCY9R6mwSYtQTeMfuEMFi7QKNRpa5g4V7NEqVBOvLFEqrNEyVFNd5V4qrNE6VJPy4lRYo02oZm6NS39Yol2opr7OpT/s0DbUaIN7qbBD21BNwpcoYIf2oZr4EhdUsEGHUE11k9NUWKBTqCYdU/9EIEOoJuVl1NDrHKqpc0EFuQyhRhu8Nh1qGUI1Me+jhFqWULnrD7lMoZrGJnf9IZUtVDP3Y6ZToZQx1GSDBf9QyhiqibeOUyp0soZq4hUm/qGTOVRTnWY6FTLZQzXVy0ynQqWLUE2VR1Og0k2opsalP0S6CtXM8b1UaHQXqhniISpIdBmq2eLSHwrdhmpWKBUCXYcaz1Mqytd1qKbK6lSUr/tQTTrKdCrK1kOopjHImj+UrJdQoytT7FNRrl5CNckQ66hRrp5CNck4N1NRqt5CNcnGhPqXIyg9hmqSFV5LgRL1GqqJVpn4R3l6DnW3VCb+UZreQzXRNq+lQFn6CNWcPUepKEk/oZqUUlGSvkI1V3nVD8rRX6imwfN+KEWfoZraILeoUIJ+QzVzY5SK4vUdajS0o/4PCEDfoZrkGqWicP2HygIVlCCHUHklJYqXR6gmuT5BqShULqGaaIaXp6JQ+YRqklWWp6JIOYVqIhZSo0h5hWqiGyykRnFyC9Uk0+xTUZj8QjUx56koTI6h8v40FCfPUE2V81QUJNdQKRVFyTdUU73EwykoQs6hmvQSD1GjAHmHSqkoRO6hmqujHP2Ru/xDNek2+1TkrYBQTcpHU5G3IkI16QJHf+SrkFDN2ZPsU5GrYkLdLZV9KvJUUKgmHr2p/mvwSVGhmuol7qYiP4WFaqrTlIrcFBeqSdmnIjcFhmpSVlIjL0WGamI+SIGcFBqqiYd53h+5KDZUE09SKvJQcKh8OA35KDpUk0wu8V4q9K3wUE00c4FS0a/iQzXRdfap6FcJoZpokrdSok9lhGrMNd70i/6UE6oZX3xZ/U/htJJCNfWp8+q/CpeVFaqZG+Qbf+hdaaFGlIo+lBaqiWo88I+elReqMZXLlIoelRkqr6ZAz0oN1ZzlVb/oTbmhspQaPSo5VJOsUCp6UHaoJtpiiQq6V3qoxtzixj+6JgjV1Ne58Y8uKUI1lTFuUqE7klDNiUEmVNEVTaimcpKLf3RDFKpJ+XIquqEK1aSrS+r/DofIQjXVFZ6kQma6UE28sU6pyEgYqknqO0yoIhtlqCaqrTGhikykoe5eUo1SKrIQh2riUY7+yEAdqklYoYoM1J3uYt0fOlNX+rjUi5yoogN1pHuia1OsUUF76kifaIxSKtpSJ/qs1O0BTlTRhrrQZ9IVHlBBG+pAn4tnlplRRUvqPveVeosHVNCSOs99krlNSkUL6joPqPBuKrSgbvOgeIX3/aEpdZqHRNe4849m1GUekS6rNwlspO6ySalc/OModZbNSr3Ek9Q4TF1lM/FPlpj7x0HqKJuXen2Hwz8OUDfZXFTn5VQ4QJ1kKzVeToX91EG2lK5OcKKK59Q9thZv8XoKPKfOsY1kiI9S4hl1je1EjZOUiifUMbZX3RpQbyDYQZ1iB1F9Qr2FYAV1iR1VznH4hwOhmur8TfVGgp46wwySyQHmqYKnrjCLqD7Fwv/QqSPMprZwiqf+w6ZOMKN0npV/YVMXmFU8ycq/oKkDzCy6snBTvbGgo+6vC+kqH6YKl7q+bsQbPPcXLHV8XYnmeI9qqNTtdalygxf+h0ldXrfi8R1KDZE6vK5FjQVOVAOk7q4H8TzP/YVHXV1Pxi9y+A+NurnepIOzpBoWdXI9SoZ5mDos6uJ6FY1PnVdvO5RIHVzvKqMjHP7Doc6tD/EwC6rCoa6tH9GVTSaqQqGOrb9SGze4pgqEurU+VbfWWKYSBHVp/UpqL/Ei9RCoQ+tfOnmRw7//1JnlIK7zaUr/qSvLQxQPc/XvO3VkOamtqzckiqUuLC/JMC9T8Zo6sPwMLXOm6jF1XjmqLIxw+e8tdV15iid3OP77Sh1XrqI5VlT5St1Wzq4OL3Km6iV1WXlLrp3jlqqP1GHlL11Z5prKP+qsCpAMjXKjyjvqqgqRTq5zTeUZdVPFSObOsUzVL+qkipL+lJdUeEUdVGGiE6PM/ntE3VOB4hneUO0PdU2FamyyU/WFuqViJRsXuVHlB3VKRWtssqTKC+qQCpdsjTFT5QF1RyVovDTB8d956orKEG8M3lRvZ/RJHVE5Gqvr7FTdpk6oJPHQOZZUO01dUFmiyk95SaXL1AGVJ56bvsBO1VnqfMpUHX+V16m7Sh1PqaJ0eEm9wdEbdTslS87y3T83qcspX/24epujB+psBM5O3+T2v3PU1UjUNvnwn2vUzWjEk8usVHWLOhmRqLY9wVSVS9TFyMTXFgY4VXWHuhehqys7rFR1hroWpejKJb6n5gp1LFrx+MkzXP87QZ2KWro1yPHfBepQ5KLGyg7X//ZTd2KBuMb6P/upK7HC2Wt8T9126kYsUd1a5PrfaupCrBGtDHD8t5i6D4tUz7FUxV7qOqwyt8MCQFup27BLsjF2Uz0iaEqdhm3S4eVT7FUtpA7DOtHP5tc5V7WPugsLxfXt4zwBaBt1FVZKb7FW1TbqJixV2eKjanZRF2Gt9Poaj1VZRN2DvaLKDO+qtIc6B5slJ1Z+zApAS6hjsFvSWOVbVXZQp2C7pLbNG4BtoA7BAZXLp0hVTl2BE2qD3KtSUzfgiKEpVgBoqQtwRn2NTwAqqcffHdHW2hlSlVEPv0uqM2sD3AIQUQ++W9KZzSVSlVAPvWOiysyrLKxSUI+8c5LG1ii3AMqnHncHRenGSdYAlk096k6K0nGWq5ZMPeaOiqrXLi9xAlAi9Yg7Kzpbv3xGPXoBUY+3y+L6yRH1+AVDPdhuS+qj3Fgth3qonXf1EneryqAeZw+kL11gFWDh1KPsherwImurC6YeY0+kw2MsrSqUeoS9kc4MThxjt1oY9fh6JL21vczJalHUo+uV6rVL63y1qhjqsfXM2SurfGC1EOqR9U5c21pgGWD+1OPqoSgd32Zxdd7Uo+qlqFqf5rvV+VKPqa/ixuQUJ6s5Ug+ox6q3XiXV3KhH02txfZvFVTlRj6XvkuGLx2g1B+qB9F+yNTXCQsC+qYcxBMm1Ub6y1i/1IIYhqgxPsb66L+ohDEZ169wyn1npnXr8AhLX56d4c1Wv1KMXlKixwUrAHqnHLjTV+vDaGXar3VMPXHjixviNRc5Wu6UethBFcW3mVZ4G7I560AKVpPXpCc4AuqAesXAl6fjogHr43aEerqBFjVW+C5yReqxCVx0/t3Sa09XO1AOFpDY8NUKrnaiHCXtqLy2f4hygLfUQ4Yl4a+EiqwHbUA8QnkuvLywzu9qKenSwTzK3Onicm1ZNqccGB6XjN9YmWLdylHpgcFhUGV9dW2K/eoh6WNDE3rqVKdZYHaAeEzS32+qldR60ekE9IGglqjaGVnc4XX1KPRxoJ746dIMnrR5TDwU6SKr11TFeDUSoLojnVndC36+qxwDZxPX5ndmQl66oBwBZRdWh6bGBYF9kpd786EpldW0izHVW6i2PbqUrC4sj59XdECo6S2e2py4GttBKvc3Rm/jK8MJOSJ+0UG9w9CyuzWyvBfNNC/XWRj+Syvjq6M5ACN9gVW9q9ClKa7fmBydmfd+zqrczchBX6pOji34/cqXexshHkjbqMwser7dWb2DkJzlbGbqxftPPE1b1xkW+orhxfdPHzwWoNywKEM+tbF7wLFb1NkUxkqtD84NLx057Mxmg3qAoTly5tffs9TEv9q3qjYlixSc2bmwuD8w6H6t6Q6IE8dDqwo7jywPV2xAliYd+cnJt/YKzT7Wqtx9KFDc25hfGjjv5qKB626FkcWN8+PLg4il1eISKjuJKfebG6NjxkfPunAiotxlEovRn9a35zcUBR9ZdqbcXhKK4Uhua3F5bHrF/Rat6W0EtqaaNK5PbgxftrlW9mWCFJN7NtT55eXffqi6SUNFJFMVpbWt7x8Za1dsGFoobQyvbU0unX7HoXEC9TWCruHJlZnpz8dSx06dftiBY9eaA1ZK0Nr7yj6/dfv3m7GntK9rUWwLWe+PO3TfvvfVP999+5/a7I7PnRdOu6q0A671355n3733w4c/f/sU/f/R6+b2qtwJs98adQz5+85NfPrj/6Wu/uv3ZqfLegqneDLDde3eau/vw8w9+/eH9T9/+ly9uv178ogH1ZoDl3rjT3m/ef3jvXz948Nt/+/K1d26/XtzabPV2gOXeu5PN3UcP733y1r8/+O3vvvxq76rr5my+DxaqtwPs1mmHemQHe/frbx5++90nv/+P//zw/n/94Rdf3P5st9nz/e9p1RsCdsu6Q21S7N2vH7358OG39z75458e/Hn3zOBxtKd6jVa9IWC1bneozZv9+O7d9x89+mY3292zg18+uP/zT9/+6p3//mgv28z3vdRbAlbreYfaMtrffLyb7d333//660eP/rJ7kvD5J7//41t/+vWDP9//3Zd/+OpXX3z07ruf/fX1kZFTN2dnZ4+dP78b8ssvv/IKoaKNXHao2fp97OM9d/dOGh59881fHj58+D/f3rt377vvPv+cUNHG/5YVakeEitb+T50noSILe3aohIrWLNqhEipas2iHSqhoyaYdKqGiJZt2qISKVqzaoRIqWlGnSajI4v/VaRIqMvheXSahIgvLdqiEiqZs26ESKpr6mzpMQkUGpS3vI1T0I/f10oSKAti3QyVUNGHVzVNCRQt23TwlVLRg4Q6VUHGEbXP9hIpmrJvrJ1Q0Y+UOlVBxyA/qJAkVWVh385RQ0YSFc/2EiqNsnJoiVBxm41w/oeIwO6emCBWH2Dk1Rag4yN4dKqFiH0unpggVB9g6NUWoOMDWqSlCxX7WTk0RKvax+EqKUPGCvVNThIoXLF01Rag4yOKpKULFc1ZfSREqnrF5aopQ8YzdV1KEiifsnpoiVDxl+ZUUoeIxm2/yEyqes/1KilCxx/orKUKFceFKilBhXLiSIlTYf0+KUPGYA1dShAonrqQIFZav7iNUPGHf908IFUe5cSVFqKFzYgqVUOHIlRShBs6BxSiEClemUAk1dO4c+Ak1ZK5MoRJq4FyZQiXUsDkzhUqoQXNnCpVQg+bEKlRCDZ5bB35CDZVjB35CDZVLU6iEGi6H7p0SasgcundKqAFz7sBPqEFy78BPqEFy78BPqCFy8MBPqAFy8cBPqAFy8cBPqOFx8sBPqMFx88BPqMFx88BPqKFx9MBPqIFx9cBPqIFx9cBPqGFx9sBPqEFx98BPqCH53t0DP6GGxOEDP6EGxLXH+Qg1TM49zkeoYXLsOX5CDZTbB35CDYXjB35CDYVTb+4j1GA5PTNFqMFw+ZYUoQbE5VtShBoO9w/8hBoC12emCDUMzs9MEWoYHL8lRaiB8OLAT6je82BmilBD4MHMFKEGwIeZKUL1nycnqITqOT9mpgjVe76coBKq37w5QSVUr/lzgkqoPvPoBJVQfeb8on5CDYJPJ6iE6i9fbp0Sqt/8OkElVG/5dYJKqL7y7ASVUD3l2wkqofrJuxNUQvWTdyeohOol/05QCdVHXt3iJ1Rv+XiCSqge8mgNKqF6zI+n+AnVd36eoBKqbzyc6SdUDzn9yTNCDYePM/2E6h8vZ/oJ1TveXkgRqlf8vZAiVJ94fCFFqD7xdaafUP3i84UUofrD6wspQvWG3xdShOoLzy+kCNUXnl9IEaonfL+QIlQ/eH8hRahe8P9CilB94OkzUoTqG/8v+AnVBwFc8BOqB0K44CdU9wVxwU+ozgvjgp9QXRfIBT+hui6QC35CdVwoF/yE6rZgLvgJ1WnhXPATqssCuuAnVIeF1imhuimAJf2E6oPgOiVUJwU1MUWozgprYopQXRXYxBShOirITgnVOcFNTBGqk35QF0OoyCC8CVRCdVKonRKqWwKcQCVUB4U4gUqo7gm4U0J1SJgTqITqmqA7JVRnBDrRT6iOCbxTQnVESI/wE6q7gr0hRahOoVNCdYLHnzcnVI+Ee+P0BUK1H53eIVQHhHzj9AVCtR2dPkaolgv7xukLhGo3On2KUK1Gp88Qqs3o9DlCtVjoC1H2I1R70ek+hGotOt2PUG1FpwcQqqVCfSNKK4RqJxb2HUKoVqLTwwjVRnR6BKFaiE6PIlT70GkThGodOm2GUG1Dp00RqmXotDlCtQudtkCoVqHTVgjVJnTaEqFahE5bI1R70GkbhGoNOm2HUG1Bp20RqiXotD1CtQOddkCoVqDTTgjVBnTaEaFa4Ac67YhQ9XjeNANClaPTLAhVjU4zIVQxOs2GULV4X19GhCpFp1kRqhKdZkaoQnSaHaHq8L2TLhCqDJ12g1BV+B5fVwhVhE67Q6gS3/O96C4RqgLL+rpGqAJ02j1CLR+393tAqKWj014Qatm4HdUTQi0ZnfaGUMvF7ageEWqp6LRXhFombkf1jFDLw/RpHwi1NDy93w9CLQvTp30h1JIwLdUfQi0HnfaJUEvBtFS/CLUMTEv1jVCLx7RUDgi1cG/QaQ7+DqM3xz389ImDAAAAAElFTkSuQmCC);background-position:50%;background-repeat:no-repeat;background-size:cover;bottom:0;left:0;position:absolute;right:0;top:0}.profileModal-module__background_area__OHWte img{display:block;height:100%;object-fit:cover;width:100%}.profileModal-module__info_area__VRAIt{align-items:center;box-sizing:border-box;display:flex;flex:1 1 165px;flex-direction:column;min-height:-webkit-min-content;min-height:min-content;padding-bottom:10px;position:relative;width:100%}.profileModal-module__info_area__VRAIt>div[class*=thumbnail_wrap]{border-radius:50%;height:78px;margin:-39px 0 2px;width:78px}.profileModal-module__name_box__vJfbr{box-sizing:border-box;display:flex;justify-content:center;padding:0 36px;width:100%}.profileModal-module__name_box__vJfbr:first-child{margin-top:15px}.profileModal-module__name_box__vJfbr button[class*=button_edit]{border:1px solid #0000;box-sizing:border-box;height:auto;min-height:30px}.profileModal-module__name_box__vJfbr button[class*=button_edit]:not(:disabled):hover{border-color:#c8c8c8}.profileModal-module__name_box__vJfbr button[class*=button_edit] span[class*=name]{-webkit-line-clamp:2;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;overflow-wrap:anywhere}.profileModal-module__description_box__Jb6O2,.profileModal-module__original_name__h1yJ3{color:#8f95a4;font-size:12px;position:relative}.profileModal-module__description_box__Jb6O2{word-wrap:break-word;align-items:flex-start;box-sizing:border-box;display:flex;justify-content:space-between;margin-top:5px;max-height:120px;overflow-x:hidden;overflow-y:overlay;padding:0 36px;text-align:center;width:100%;word-break:break-word}.profileModal-module__description_box__Jb6O2 .profileModal-module__description__hSNDU{box-sizing:border-box;flex:1 1 auto}.profileModal-module__description_box__Jb6O2 .profileModal-module__button_state_edit__39eou{color:inherit;flex:0 0 auto;font-size:14px;margin-left:auto;margin-right:-19px;padding:2px;position:-webkit-sticky;position:sticky;top:0}.profileModal-module__group_member__d-bau{display:flex;gap:3px;margin:13px 0 35px}.profileModal-module__group_member__d-bau .profileModal-module__thumbnail__iYDys,.profileModal-module__group_member__d-bau>div[class*=thumbnail_wrap]{border-radius:50%;height:40px;width:40px}.profileModal-module__group_member__d-bau .profileModal-module__button_more__1M7Fc{align-items:center;background-color:#f2f4f7;border-radius:20px;box-sizing:border-box;color:#8f95a4;display:inline-flex;height:40px;justify-content:center;min-width:40px;padding:0 5px}.profileModal-module__group_member__d-bau .profileModal-module__button_more__1M7Fc .profileModal-module__count__abepI{font-size:10px}.profileModal-module__group_member__d-bau .profileModal-module__button_more__1M7Fc .profileModal-module__icon__ryFCf{color:inherit;height:10px;margin-left:1px;width:10px}.profileModal-module__button_favorite__KVUfr{color:#ced1d9;padding:10px;position:absolute;right:0;top:0}.profileModal-module__button_favorite__KVUfr[aria-pressed=true]{color:#07b53b}.profileModal-module__button_favorite__KVUfr .profileModal-module__icon__ryFCf{background-size:contain;color:inherit;height:16px;width:16px}.profileModal-module__action_area__gN4d-{border-top:1px solid #efefef;box-sizing:border-box;display:grid;grid-template-columns:repeat(auto-fit,minmax(0,1fr));height:64px;margin-top:auto;width:100%}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T{align-items:center;color:#525972;display:inline-flex;height:40px;justify-content:center;place-self:center;position:relative;width:40px}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T:not(:disabled):hover{color:#202a42}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T:disabled:after{background-color:#fff9;bottom:0;content:"";left:0;position:absolute;right:0;top:0}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T:hover [class*=tooltip_wrap]{display:inline-flex}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T [class*=tooltip_wrap]{bottom:100%;display:none;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T:not(:only-child):first-child [class*=tooltip_wrap]{left:0;-webkit-transform:none;transform:none}.profileModal-module__action_area__gN4d- .profileModal-module__button_action__SmB4T:not(:only-child):last-child [class*=tooltip_wrap]{left:auto;right:0;-webkit-transform:none;transform:none}.profileModal-module__action_area__gN4d- .profileModal-module__icon__ryFCf{height:27px;width:27px}.profileModal-module__laicon_camera__kmoZx{fill:#fff}.profileModal-module__button_camera__Yg3la{position:absolute;right:10px;top:10px}.profileModal-module__icon_camera__YNap0{background-color:#0000001a;border:1px solid #fffc;border-radius:100%;padding:5px}.profileModal-module__icon_camera__YNap0:hover{border:1px solid #fff}.mediaProgressPopup-module__popup__wM-7f{box-sizing:border-box;display:flex;flex-direction:column;height:100%;overflow-y:auto}.mediaProgressPopup-module__content__-6YjX{box-sizing:border-box;color:#777;font-size:12px;line-height:16px;margin:auto;overflow-y:auto;padding:30px 55px 0;text-align:center}.mediaProgressPopup-module__content__-6YjX .mediaProgressPopup-module__description__MrfYg{margin-bottom:15px}[class*=modal_wrap] .mediaProgressPopup-module__content__-6YjX{max-height:160px}.mediaProgressPopup-module__progress_bar_wrap__NoyJ-{align-items:center;display:flex;flex-direction:column;gap:2px;width:170px}.mediaProgressPopup-module__progress_bar_wrap__NoyJ- .mediaProgressPopup-module__status__kun-A{color:#b7b7b7;font-size:12px}.mediaProgressPopup-module__progress_bar__DKepS{-webkit-appearance:none;border-radius:7.5px;height:6px;overflow:hidden;position:relative;width:100%}.mediaProgressPopup-module__progress_bar__DKepS::-webkit-progress-bar{background-color:#dfdfdf}.mediaProgressPopup-module__progress_bar__DKepS::-webkit-progress-value{background-color:#07b53b;border-radius:7.5px}.mediaProgressPopup-module__progress_bar__DKepS:not([value="0"])+.mediaProgressPopup-module__status__kun-A{color:#07b53b}.mediaProgressPopup-module__footer__wEmYi{padding-top:18px}.mediaProgressPopup-module__footer__wEmYi .mediaProgressPopup-module__button_group__NVuja{box-sizing:border-box;display:flex;flex-wrap:wrap;gap:6px 5px;justify-content:center;padding:0 55px 26px}.mediaProgressPopup-module__footer__wEmYi .mediaProgressPopup-module__button_group__NVuja .mediaProgressPopup-module__button_action__lX1A8{order:var(--positive-button-order)}.mediaProgressPopup-module__footer__wEmYi .mediaProgressPopup-module__button_group__NVuja .mediaProgressPopup-module__button_action__lX1A8:disabled{background-color:#06c755}.mediaProgressPopup-module__footer__wEmYi button{height:32px;max-width:144px;min-width:60px;padding:0 12px}.mediaProgressPopup-module__footer__wEmYi button:disabled{opacity:.6}.editButton-module__button_edit__GA02s{align-items:flex-end;box-sizing:border-box;color:#3f475d;display:inline-flex;min-height:30px;padding:5px}.editButton-module__button_edit__GA02s[aria-pressed=true]{display:none}.editButton-module__button_edit__GA02s:not(:disabled):hover{background-color:#fcfcfc}.editButton-module__button_edit__GA02s:disabled .editButton-module__icon__rQo8u{display:none}.editButton-module__button_edit__GA02s[data-ellipsis="2"] .editButton-module__name__uQ-y5{-webkit-line-clamp:2}.editButton-module__button_edit__GA02s .editButton-module__name__uQ-y5{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;overflow-wrap:anywhere}.editButton-module__button_edit__GA02s .editButton-module__icon__rQo8u{color:inherit;margin-left:4px}.editStatePopup-module__popup__UUs44{display:flex;flex-direction:column;height:100%}.editStatePopup-module__contents__uZBZF{box-sizing:border-box;display:flex;flex:1 1 auto;flex-direction:column;overflow-y:overlay;position:relative}.textarea_wrap{background-color:#fff;border:0;box-sizing:border-box;font-size:12px;height:100%;padding:10px 14px;resize:none;width:100%}.textarea_wrap::part(input)::-webkit-input-placeholder{color:#b7b7b7}.textarea_wrap::part(input)::placeholder{color:#b7b7b7}.textarea_wrap:disabled,.textarea_wrap:disabled+div[class*=text]{opacity:.6}.textarea_wrap.editStatePopup-module__large-emoji__Il6n9{font-size:calc(var(--message-font-size)*var(--message-large-emoji-scale, 1.5))}.editStatePopup-module__edit_area__8xuQx{flex:1 1 auto;overflow:overlay}.editStatePopup-module__action_area__0d-6K{align-items:center;box-sizing:border-box;color:#c8c8c8;display:flex;flex:0 0 auto;justify-content:space-between;margin-top:8px;padding:0 14px 5px}.editStatePopup-module__counter__ZfX2U{font-size:11px}.editStatePopup-module__counter__ZfX2U .editStatePopup-module__max__qvX9V:before{content:"/"}.editStatePopup-module__button_sticker__NxNP6{color:#98a0b3;display:inline-flex;margin-right:-2px;padding:3px}.editStatePopup-module__button_sticker__NxNP6 .editStatePopup-module__icon_sticker__5njEr{font-size:18px}.editStatePopup-module__footer__C7XiN{border-top:1px solid #efefef;margin-top:auto}.editStatePopup-module__footer__C7XiN .editStatePopup-module__button_group__glweB{display:flex;justify-content:center;margin:7px 0}.editStatePopup-module__footer__C7XiN .editStatePopup-module__button_confirm__d8ip3{height:30px;min-width:90px;padding:0 14px}@keyframes FallEffect-module__falling__78-zZ{0%{left:var(--sx);top:-5em;transform:rotate(0deg)}to{left:var(--ex);top:100%;transform:rotate(1turn)}}.FallEffect-module__wrap__PDHF8{bottom:0;left:0;overflow:hidden;pointer-events:none;position:absolute;right:0;top:0}.FallEffect-module__flake__z6Z3e{display:flex;position:absolute}.FallEffect-module__flake__z6Z3e>*{flex:1 1}.FallEffect-module__flake__z6Z3e:first-child{--sx:25%;--ex:calc(var(--sx) - 1%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:first-child,.FallEffect-module__flake__z6Z3e:nth-child(2){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(2){--sx:16%;--ex:calc(var(--sx) - 8%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(3){--sx:91%;--ex:calc(var(--sx) - 2%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(4){--sx:34%;--ex:calc(var(--sx) - 5%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(4),.FallEffect-module__flake__z6Z3e:nth-child(5){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(5){--sx:30%;--ex:calc(var(--sx) + 1%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(6){--sx:4%;--ex:calc(var(--sx) - 7%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(6),.FallEffect-module__flake__z6Z3e:nth-child(7){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(7){--sx:16%;--ex:calc(var(--sx) - 6%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(8){--sx:86%;--ex:calc(var(--sx));--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(8),.FallEffect-module__flake__z6Z3e:nth-child(9){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(9){--sx:18%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:nth-child(10){--sx:15%;--ex:calc(var(--sx) + 5%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(10),.FallEffect-module__flake__z6Z3e:nth-child(11){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(11){--sx:69%;--ex:calc(var(--sx) + 6%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(12){--sx:9%;--ex:calc(var(--sx) - 5%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(12),.FallEffect-module__flake__z6Z3e:nth-child(13){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(13){--sx:71%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(14){--sx:19%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(14),.FallEffect-module__flake__z6Z3e:nth-child(15){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(15){--sx:1%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(16){--sx:28%;--ex:calc(var(--sx) - 1%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(16),.FallEffect-module__flake__z6Z3e:nth-child(17){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(17){--sx:88%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(18){--sx:62%;--ex:calc(var(--sx) + 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(18),.FallEffect-module__flake__z6Z3e:nth-child(19){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(19){--sx:17%;--ex:calc(var(--sx) + 5%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(20){--sx:7%;--ex:calc(var(--sx) - 5%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(20),.FallEffect-module__flake__z6Z3e:nth-child(21){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(21){--sx:39%;--ex:calc(var(--sx) + 5%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(22){--sx:20%;--ex:calc(var(--sx) + 9%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(22),.FallEffect-module__flake__z6Z3e:nth-child(23){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(23){--sx:6%;--ex:calc(var(--sx) + 4%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(24){--sx:14%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(24),.FallEffect-module__flake__z6Z3e:nth-child(25){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(25){--sx:23%;--ex:calc(var(--sx) - 6%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(26){--sx:43%;--ex:calc(var(--sx) - 5%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(26),.FallEffect-module__flake__z6Z3e:nth-child(27){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(27){--sx:37%;--ex:calc(var(--sx) - 3%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-10s}.FallEffect-module__flake__z6Z3e:nth-child(28){--sx:20%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(28),.FallEffect-module__flake__z6Z3e:nth-child(29){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(29){--sx:69%;--ex:calc(var(--sx) + 4%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(30){--sx:70%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(30),.FallEffect-module__flake__z6Z3e:nth-child(31){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(31){--sx:59%;--ex:calc(var(--sx) + 3%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(32){--sx:78%;--ex:calc(var(--sx) + 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(32),.FallEffect-module__flake__z6Z3e:nth-child(33){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(33){--sx:20%;--ex:calc(var(--sx) + 7%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(34){--sx:2%;--ex:calc(var(--sx) + 6%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-5s}.FallEffect-module__flake__z6Z3e:nth-child(34),.FallEffect-module__flake__z6Z3e:nth-child(35){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(35){--sx:90%;--ex:calc(var(--sx) + 3%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(36){--sx:14%;--ex:calc(var(--sx) - 1%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:nth-child(36),.FallEffect-module__flake__z6Z3e:nth-child(37){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(37){--sx:35%;--ex:calc(var(--sx) - 4%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(38){--sx:53%;--ex:calc(var(--sx) + 3%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(38),.FallEffect-module__flake__z6Z3e:nth-child(39){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(39){--sx:1%;--ex:calc(var(--sx) + 6%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(40){--sx:24%;--ex:calc(var(--sx) + 10%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:nth-child(40),.FallEffect-module__flake__z6Z3e:nth-child(41){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(41){--sx:12%;--ex:calc(var(--sx) + 4%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(42){--sx:98%;--ex:calc(var(--sx) - 8%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(42),.FallEffect-module__flake__z6Z3e:nth-child(43){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(43){--sx:24%;--ex:calc(var(--sx) - 1%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(44){--sx:97%;--ex:calc(var(--sx));--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(44),.FallEffect-module__flake__z6Z3e:nth-child(45){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(45){--sx:96%;--ex:calc(var(--sx) - 2%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(46){--sx:14%;--ex:calc(var(--sx) - 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(46),.FallEffect-module__flake__z6Z3e:nth-child(47){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(47){--sx:32%;--ex:calc(var(--sx) + 3%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(48){--sx:80%;--ex:calc(var(--sx) + 4%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(49){--sx:17%;--ex:calc(var(--sx) + 9%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(49),.FallEffect-module__flake__z6Z3e:nth-child(50){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(50){--sx:64%;--ex:calc(var(--sx) - 4%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:nth-child(51){--sx:12%;--ex:calc(var(--sx) + 8%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(51),.FallEffect-module__flake__z6Z3e:nth-child(52){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(52){--sx:67%;--ex:calc(var(--sx) + 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:nth-child(53){--sx:76%;--ex:calc(var(--sx) + 3%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-5s}.FallEffect-module__flake__z6Z3e:nth-child(53),.FallEffect-module__flake__z6Z3e:nth-child(54){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(54){--sx:45%;--ex:calc(var(--sx) - 5%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-10s}.FallEffect-module__flake__z6Z3e:nth-child(55){--sx:4%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(55),.FallEffect-module__flake__z6Z3e:nth-child(56){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(56){--sx:82%;--ex:calc(var(--sx) - 1%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(57){--sx:100%;--ex:calc(var(--sx) + 10%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(57),.FallEffect-module__flake__z6Z3e:nth-child(58){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(58){--sx:53%;--ex:calc(var(--sx) + 5%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-5s}.FallEffect-module__flake__z6Z3e:nth-child(59){--sx:2%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(59),.FallEffect-module__flake__z6Z3e:nth-child(60){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(60){--sx:84%;--ex:calc(var(--sx) - 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-10s}.FallEffect-module__flake__z6Z3e:nth-child(61){--sx:76%;--ex:calc(var(--sx) - 1%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(61),.FallEffect-module__flake__z6Z3e:nth-child(62){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(62){--sx:87%;--ex:calc(var(--sx) - 7%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(63){--sx:43%;--ex:calc(var(--sx) + 9%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(63),.FallEffect-module__flake__z6Z3e:nth-child(64){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(64){--sx:96%;--ex:calc(var(--sx) + 9%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(65){--sx:43%;--ex:calc(var(--sx) + 8%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(65),.FallEffect-module__flake__z6Z3e:nth-child(66){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(66){--sx:32%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(67){--sx:62%;--ex:calc(var(--sx) + 6%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(67),.FallEffect-module__flake__z6Z3e:nth-child(68){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(68){--sx:97%;--ex:calc(var(--sx) + 10%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-10s}.FallEffect-module__flake__z6Z3e:nth-child(69){--sx:81%;--ex:calc(var(--sx) + 9%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-5s}.FallEffect-module__flake__z6Z3e:nth-child(69),.FallEffect-module__flake__z6Z3e:nth-child(70){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(70){--sx:40%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(71){--sx:16%;--ex:calc(var(--sx) - 4%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(71),.FallEffect-module__flake__z6Z3e:nth-child(72){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(72){--sx:72%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-10s}.FallEffect-module__flake__z6Z3e:nth-child(73){--sx:1%;--ex:calc(var(--sx) - 7%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-4s}.FallEffect-module__flake__z6Z3e:nth-child(73),.FallEffect-module__flake__z6Z3e:nth-child(74){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(74){--sx:45%;--ex:calc(var(--sx) - 3%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(75){--sx:88%;--ex:calc(var(--sx) - 5%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(75),.FallEffect-module__flake__z6Z3e:nth-child(76){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(76){--sx:18%;--ex:calc(var(--sx) - 1%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-5s}.FallEffect-module__flake__z6Z3e:nth-child(77){--sx:71%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(77),.FallEffect-module__flake__z6Z3e:nth-child(78){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(78){--sx:80%;--ex:calc(var(--sx) - 2%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(79){--sx:61%;--ex:calc(var(--sx) + 1%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(79),.FallEffect-module__flake__z6Z3e:nth-child(80){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(80){--sx:24%;--ex:calc(var(--sx) - 1%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(81){--sx:49%;--ex:calc(var(--sx) - 8%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-10s}.FallEffect-module__flake__z6Z3e:nth-child(81),.FallEffect-module__flake__z6Z3e:nth-child(82){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(82){--sx:10%;--ex:calc(var(--sx) - 4%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(83){--sx:24%;--ex:calc(var(--sx) - 8%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(83),.FallEffect-module__flake__z6Z3e:nth-child(84){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(84){--sx:90%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-2s}.FallEffect-module__flake__z6Z3e:nth-child(85){--sx:28%;--ex:calc(var(--sx) - 5%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(85),.FallEffect-module__flake__z6Z3e:nth-child(86){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(86){--sx:34%;--ex:calc(var(--sx) - 1%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-7s}.FallEffect-module__flake__z6Z3e:nth-child(87){--sx:72%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(87),.FallEffect-module__flake__z6Z3e:nth-child(88){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(88){--sx:85%;--ex:calc(var(--sx) + 7%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(89){--sx:27%;--ex:calc(var(--sx) + 9%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(90){--sx:1%;--ex:calc(var(--sx) + 8%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-3s}.FallEffect-module__flake__z6Z3e:nth-child(90),.FallEffect-module__flake__z6Z3e:nth-child(91){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(91){--sx:43%;--ex:calc(var(--sx) - 4%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(92){--sx:55%;--ex:calc(var(--sx) + 3%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-9s}.FallEffect-module__flake__z6Z3e:nth-child(92),.FallEffect-module__flake__z6Z3e:nth-child(93){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(93){--sx:74%;--ex:calc(var(--sx) + 6%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(94){--sx:34%;--ex:calc(var(--sx) - 7%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(95){--sx:92%;--ex:calc(var(--sx) + 3%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-1s}.FallEffect-module__flake__z6Z3e:nth-child(95),.FallEffect-module__flake__z6Z3e:nth-child(96){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(96){--sx:46%;--ex:calc(var(--sx) + 7%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-6s}.FallEffect-module__flake__z6Z3e:nth-child(97){--sx:55%;--ex:calc(var(--sx) - 2%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(97),.FallEffect-module__flake__z6Z3e:nth-child(98){filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(98){--sx:98%;--ex:calc(var(--sx) + 1%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-8s}.FallEffect-module__flake__z6Z3e:nth-child(99){--sx:20%;--ex:calc(var(--sx) - 4%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(100){--sx:50%;--ex:calc(var(--sx) - 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(101){--sx:50%;--ex:calc(var(--sx) + 2%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(102){--sx:20%;--ex:calc(var(--sx) - 3%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(103){--sx:54%;--ex:calc(var(--sx) + 1%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(104){--sx:26%;--ex:calc(var(--sx) + 8%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(105){--sx:66%;--ex:calc(var(--sx) + 5%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(106){--sx:33%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(107){--sx:68%;--ex:calc(var(--sx) + 9%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(108){--sx:44%;--ex:calc(var(--sx) + 10%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(109){--sx:60%;--ex:calc(var(--sx) - 2%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(110){--sx:80%;--ex:calc(var(--sx) + 2%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(111){--sx:46%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(112){--sx:61%;--ex:calc(var(--sx) + 3%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(113){--sx:6%;--ex:calc(var(--sx) - 6%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(114){--sx:27%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(115){--sx:84%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(116){--sx:16%;--ex:calc(var(--sx) + 4%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(117){--sx:74%;--ex:calc(var(--sx) + 8%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(118){--sx:31%;--ex:calc(var(--sx) - 2%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(119){--sx:53%;--ex:calc(var(--sx) - 6%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(120){--sx:40%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(121){--sx:8%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(122){--sx:27%;--ex:calc(var(--sx) + 1%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(123){--sx:67%;--ex:calc(var(--sx) + 9%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(124){--sx:70%;--ex:calc(var(--sx) + 4%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(125){--sx:66%;--ex:calc(var(--sx) - 3%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(126){--sx:3%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(127){--sx:74%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(128){--sx:7%;--ex:calc(var(--sx) + 9%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(129){--sx:2%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(130){--sx:57%;--ex:calc(var(--sx) - 1%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(131){--sx:49%;--ex:calc(var(--sx) - 1%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(132){--sx:92%;--ex:calc(var(--sx) + 8%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(133){--sx:19%;--ex:calc(var(--sx) - 4%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(134){--sx:22%;--ex:calc(var(--sx) + 6%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(135){--sx:1%;--ex:calc(var(--sx) - 2%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(136){--sx:11%;--ex:calc(var(--sx) + 7%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(137){--sx:13%;--ex:calc(var(--sx));--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(138){--sx:91%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(139){--sx:100%;--ex:calc(var(--sx) + 8%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(140){--sx:52%;--ex:calc(var(--sx) - 5%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(141){--sx:88%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(142){--sx:47%;--ex:calc(var(--sx) + 2%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(143){--sx:24%;--ex:calc(var(--sx) - 5%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(144){--sx:18%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(145){--sx:40%;--ex:calc(var(--sx) + 6%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(146){--sx:72%;--ex:calc(var(--sx) + 10%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(147){--sx:83%;--ex:calc(var(--sx) - 7%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(148){--sx:38%;--ex:calc(var(--sx) + 6%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(149){--sx:64%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(150){--sx:69%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(151){--sx:1%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(152){--sx:75%;--ex:calc(var(--sx) - 3%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(153){--sx:22%;--ex:calc(var(--sx) + 9%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(154){--sx:38%;--ex:calc(var(--sx) - 8%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(155){--sx:24%;--ex:calc(var(--sx) + 2%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(156){--sx:41%;--ex:calc(var(--sx) - 6%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(157){--sx:59%;--ex:calc(var(--sx) - 1%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(158){--sx:32%;--ex:calc(var(--sx) + 8%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(159){--sx:4%;--ex:calc(var(--sx) - 2%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(160){--sx:94%;--ex:calc(var(--sx) + 10%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(161){--sx:92%;--ex:calc(var(--sx) + 5%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(162){--sx:15%;--ex:calc(var(--sx) - 5%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(163){--sx:94%;--ex:calc(var(--sx) + 5%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(164){--sx:70%;--ex:calc(var(--sx) - 9%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(165){--sx:17%;--ex:calc(var(--sx) + 1%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(166){--sx:30%;--ex:calc(var(--sx) + 9%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(167){--sx:27%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(168){--sx:66%;--ex:calc(var(--sx) - 4%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-6s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(169){--sx:21%;--ex:calc(var(--sx) + 8%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(170){--sx:18%;--ex:calc(var(--sx) - 7%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(171){--sx:52%;--ex:calc(var(--sx) - 9%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(172){--sx:13%;--ex:calc(var(--sx) - 9%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(173){--sx:60%;--ex:calc(var(--sx) + 6%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(174){--sx:25%;--ex:calc(var(--sx) + 8%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 12s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(175){--sx:27%;--ex:calc(var(--sx) - 6%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(176){--sx:5%;--ex:calc(var(--sx) - 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 7s linear infinite;animation-delay:-4s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(177){--sx:8%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(178){--sx:12%;--ex:calc(var(--sx) - 7%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(179){--sx:76%;--ex:calc(var(--sx) - 1%);--vx:1%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(180){--sx:22%;--ex:calc(var(--sx) - 3%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(181){--sx:36%;--ex:calc(var(--sx) + 1%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 6s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(182){--sx:66%;--ex:calc(var(--sx) + 2%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(183){--sx:54%;--ex:calc(var(--sx) + 10%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 8s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(184){--sx:10%;--ex:calc(var(--sx) + 7%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(185){--sx:54%;--ex:calc(var(--sx) + 7%);--vx:2%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(186){--sx:59%;--ex:calc(var(--sx) - 4%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(187){--sx:57%;--ex:calc(var(--sx) - 5%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(188){--sx:47%;--ex:calc(var(--sx) - 2%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(189){--sx:59%;--ex:calc(var(--sx) + 4%);--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 9s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(190){--sx:66%;--ex:calc(var(--sx) - 9%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-9s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(191){--sx:50%;--ex:calc(var(--sx) + 4%);--vx:3%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-10s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(192){--sx:39%;--ex:calc(var(--sx) + 2%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(193){--sx:55%;--ex:calc(var(--sx) - 4%);--vx:2%;--size:1em;animation:FallEffect-module__falling__78-zZ 10s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(194){--sx:96%;--ex:calc(var(--sx) - 5%);--vx:1%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-2s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(195){--sx:54%;--ex:calc(var(--sx) + 9%);--vx:2%;--size:0.8em}.FallEffect-module__flake__z6Z3e:nth-child(195),.FallEffect-module__flake__z6Z3e:nth-child(196){animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-3s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(196){--sx:21%;--ex:calc(var(--sx) + 5%);--vx:2%;--size:0.6em}.FallEffect-module__flake__z6Z3e:nth-child(197){--sx:18%;--ex:calc(var(--sx) + 4%);--vx:3%;--size:1em;animation:FallEffect-module__falling__78-zZ 15s linear infinite;animation-delay:-1s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(198){--sx:12%;--ex:calc(var(--sx) + 10%);--vx:1%;--size:1em;animation:FallEffect-module__falling__78-zZ 11s linear infinite;animation-delay:-5s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(199){--sx:89%;--ex:calc(var(--sx));--vx:2%;--size:0.8em;animation:FallEffect-module__falling__78-zZ 14s linear infinite;animation-delay:-7s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.FallEffect-module__flake__z6Z3e:nth-child(200){--sx:34%;--ex:calc(var(--sx) - 2%);--vx:3%;--size:0.6em;animation:FallEffect-module__falling__78-zZ 13s linear infinite;animation-delay:-8s;filter:blur(calc((var(--size))*.1));font-size:var(--size);height:var(--size);width:var(--size)}.badge-module__badge__Eh36I{align-items:center;background-color:#ff3a44;border-radius:8.5px;box-sizing:border-box;color:#fff;display:inline-flex;font-size:11px;justify-content:center;min-height:17px;min-width:17px;padding:0 4px}.gnb-module__gnb__01tnB{background-color:#202a43;box-sizing:border-box;color:#fff;display:grid;gap:40px;grid-area:gnb;min-height:-webkit-min-content;min-height:min-content;padding:20px 0 15px;width:62px}.gnb-module__nav_bottom_list__t-ASJ,.gnb-module__nav_list__wRO2S{align-items:center;display:grid;grid-auto-rows:-webkit-min-content;grid-auto-rows:min-content;justify-content:center}.gnb-module__nav_list__wRO2S{gap:22px}.gnb-module__nav_bottom_list__t-ASJ{gap:10px;margin-top:auto}.gnb-module__nav_list_item__tbnc4{position:relative}.gnb-module__button_action__aTdj7{align-items:center;color:#707991;display:inline-flex;height:32px;justify-content:center;width:32px}.gnb-module__button_action__aTdj7[aria-current=true]{color:#fff}.gnb-module__button_action__aTdj7:not([aria-current=true]):hover{color:#858fa8}.gnb-module__button_action__aTdj7:not([aria-current=true]):hover .gnb-module__clock__2yjYQ path{stroke:#858fa8}.gnb-module__button_action__aTdj7:not([aria-current=true]):hover .gnb-module__tooltip__E7KDB{display:block}.gnb-module__button_action__aTdj7:disabled{color:#fff9}.gnb-module__button_action__aTdj7 .gnb-module__icon__RvjKM{height:21px;width:21px}.gnb-module__button_action__aTdj7 .gnb-module__icon_clock__YWI88{height:12px;position:absolute;right:-1px;top:0;width:12px}.gnb-module__button_action__aTdj7 .gnb-module__icon_clock__YWI88 path{stroke:currentColor}.gnb-module__tooltip__E7KDB{display:none}.gnb-module__badge__nU45a{left:100%;position:absolute;top:0;-webkit-transform:translate3d(-13px,0,0);transform:translate3d(-13px,0,0)}.gnb-module__badge_voom__sL9Lx{border-radius:50%;min-height:5px;min-width:5px;padding:0;position:absolute;right:0;top:0}.pageLayout-module__wrap__h-oSt{display:grid;grid-template-areas:"gnb tab tab" "gnb list room";grid-template-columns:62px 328px minmax(0,auto);grid-template-rows:-webkit-min-content 1fr;grid-template-rows:min-content 1fr;height:100%;overflow:hidden}.pageLayout-module__wrap__h-oSt [class*=notification_toast]{grid-area:list;margin:auto}.pageLayout-module__wrap__h-oSt [class*=network_error]{grid-area:list;height:40px}.modal-module__modal_wrap__Cwr-i{bottom:0;left:0;position:fixed;right:0;top:0;z-index:30}.modal-module__modal_wrap__Cwr-i:not([data-dimmed=false]):before{background-color:#0006;content:"";display:block;height:100%;position:absolute;width:100%;z-index:-1}.modal-module__modal_inner__7y1Xb{display:flex;height:100%;width:100%}.modal-module__modal__wJL7t{background-color:#fff;border-radius:5px;box-shadow:1px 2px 30px 0 #00000040;box-sizing:border-box;margin:auto;overflow:hidden;position:relative}.modal-module__button_group__DasuP{display:flex;position:absolute;right:8px;top:8px}.modal-module__modal_wrap__Cwr-i[data-type=folder-setting] .modal-module__button_group__DasuP{right:3px;top:3px}.modal-module__modal_wrap__Cwr-i[data-type=folder-setting] .modal-module__button_group__DasuP .modal-module__button_close__qWp2J svg{height:12px;width:12px}.modal-module__button_close__qWp2J,.modal-module__button_info__hXus2{color:#c8c8c8;display:inline-flex;padding:7px;z-index:1}.modal-module__button_close__qWp2J:hover,.modal-module__button_info__hXus2:hover{color:#b7b7b7}.modal-module__button_close__qWp2J:active,.modal-module__button_info__hXus2:active{color:#c8c8c8}.modal-module__button_close__qWp2J:not(:only-child),.modal-module__button_info__hXus2:not(:only-child){padding:7px 5px}.modal-module__button_close__qWp2J svg,.modal-module__button_info__hXus2 svg{height:14px;width:14px}.modal-module__button_close__qWp2J svg g,.modal-module__button_info__hXus2 svg g{fill:currentColor;stroke:currentColor}.modal-module__modal_wrap__Cwr-i[data-type=profile] .modal-module__button_close__qWp2J,.modal-module__modal_wrap__Cwr-i[data-type=profile] .modal-module__button_close__qWp2J:active,.modal-module__modal_wrap__Cwr-i[data-type=profile] .modal-module__button_close__qWp2J:hover{color:#fff}.modal-module__modal_wrap__Cwr-i[data-type=profile] .modal-module__button_close__qWp2J svg{-webkit-filter:drop-shadow(0 0 1px #000000b3);filter:drop-shadow(0 0 1px rgba(0,0,0,.7))}.modal-module__button_info__hXus2{display:inline-flex}.networkError-module__network_error__TKxQ4{align-items:center;background-color:#000c;box-sizing:border-box;color:#fffc;display:flex;justify-content:center;min-height:40px;min-width:295px;padding:12px 20px;pointer-events:none;z-index:100;z-index:10}.networkError-module__icon__L-qMt{height:15px;margin-right:5px;width:15px}.networkError-module__text__zHiT1{font-size:13px;font-weight:500}.noticePopup-module__popup__S7FNc{box-sizing:border-box;display:flex;flex-direction:column;height:100%;overflow-y:overlay}.noticePopup-module__header__yelNO{margin:32px 0 8px;text-align:center}.noticePopup-module__header__yelNO .noticePopup-module__title__g0Ddy{color:#1f1f1f;font-size:13px;line-height:16px;margin:0}.noticePopup-module__content__8isW0{box-sizing:border-box;color:#777;font-size:12px;line-height:16px;overflow-y:overlay;padding:0 28px}[class*=modal_wrap] .noticePopup-module__content__8isW0{max-height:160px}.noticePopup-module__content__8isW0 a{color:#1f5eff;font-size:inherit;font-weight:300;line-height:inherit;-webkit-user-select:text;user-select:text}.noticePopup-module__footer__AdOcl{margin-top:auto;padding-top:22px}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo{box-sizing:border-box;display:flex;flex-wrap:wrap;gap:6px 5px;justify-content:center;padding:0 28px 26px}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_action__IjQBj,.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_cancel__c277f{color:#1f1f1f}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_cancel__c277f{background-color:#efefef}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_cancel__c277f:hover{background-color:#ebebeb}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_action__IjQBj{background-color:#fcfcfc}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_confirm__rm46E{order:var(--positive-button-order)}.noticePopup-module__footer__AdOcl .noticePopup-module__button_group__B-WAo .noticePopup-module__button_confirm__rm46E:disabled{background-color:#06c755}.noticePopup-module__footer__AdOcl button{height:32px;max-width:144px;min-width:60px;padding:0 12px}.noticePopup-module__footer__AdOcl button:disabled{opacity:.6}.noticePopup-module__footer__AdOcl button:nth-last-child(3):first-child{flex:0 0 auto;max-width:none;width:100%}.noticePopup-module__footer__AdOcl button:nth-last-child(3):first-child.noticePopup-module__button_cancel__c277f,.noticePopup-module__footer__AdOcl button:nth-last-child(3):first-child~.noticePopup-module__button_cancel__c277f{background-color:#0000;border-color:#0000;order:2}.noticePopup-module__footer__AdOcl button:nth-last-child(3):first-child.noticePopup-module__button_cancel__c277f:hover,.noticePopup-module__footer__AdOcl button:nth-last-child(3):first-child~.noticePopup-module__button_cancel__c277f:hover{background-color:revert}.noticePopup-module__footer__AdOcl button:nth-last-child(3):first-child~button{flex:0 0 auto;max-width:none;width:100%}.actionPopoverList-module__action_list__tJDFe{display:flex;flex-direction:column;padding:5px 0}.actionPopoverList-module__action_list__tJDFe+.actionPopoverList-module__action_list__tJDFe{border-top:1px solid var(--action-popover-action-list-border-top-color)}.actionPopoverListItem-module__action_item__sCl2u{position:relative}.actionPopoverListItem-module__action_item__sCl2u div[class*=popover_wrap]{display:none;left:calc(100% - 8px);top:0;z-index:1}.actionPopoverListItem-module__action_item__sCl2u div[class*=popover_wrap][data-horizontal=left]{left:auto;right:calc(100% - 8px)}.actionPopoverListItem-module__action_item__sCl2u div[class*=popover_wrap][data-horizontal=right]{right:auto}.actionPopoverListItem-module__action_item__sCl2u div[class*=popover_wrap][data-vertical=top]{bottom:0;top:auto}.actionPopoverListItem-module__action_item__sCl2u div[class*=popover_wrap][data-vertical=bottom]{bottom:auto}.actionPopoverListItem-module__button_action__mHl56,.actionPopoverListItem-module__text__LNdyQ{align-items:center;box-sizing:border-box;color:var(--action-popover-action-item-font-color);display:inline-flex;font-size:13px;min-height:27px;padding:5px 19px;width:100%}.actionPopoverListItem-module__button_action__mHl56[aria-haspopup=true]{padding-right:8px}.actionPopoverListItem-module__button_action__mHl56[aria-expanded=true]+div[class*=popover_wrap]{display:block}.actionPopoverListItem-module__button_action__mHl56:disabled{color:var(--action-popover-action-item-font-color-disabled)}.actionPopoverListItem-module__button_action__mHl56:not([disabled]):hover{background-color:var(--action-popover-action-item-background-color-hover)}.actionPopoverListItem-module__button_action__mHl56 .actionPopoverListItem-module__icon_arrow__dnoau{color:var(--action-popover-action-item-icon-color);font-size:10px;margin-left:auto}.actionPopoverLayout-module__popover_wrap__Eob7j{background-color:var(--action-popover-popover-wrap-background-color);border:1px solid var(--action-popover-popover-wrap-border-color);border-radius:5px;box-shadow:0 0 10px 0 var(--action-popover-popover-wrap-box-shadow);position:absolute;white-space:nowrap}.description-module__description_area__faxyl{align-items:flex-start;box-sizing:border-box;display:flex;font-size:12px;gap:4px;line-height:16px;padding:8px 19px 16px;white-space:normal}ul[class*=action_list]+.description-module__description_area__faxyl{border-top:1px solid var(--action-popover-description-border-top-color)}.description-module__icon__QEk0A{color:var(--action-popover-description-icon-color);flex:0 0 auto;margin-top:2px}.description-module__description__ohbuA{color:var(--action-popover-description-font-color)}.radio-module__radio_wrap__AaS4a{display:flex}.radio-module__radio_label__sDfDn{align-items:center;display:inherit}.radio-module__icon__17T16{align-items:center;border:1px solid #c8c8c8;border-radius:50%;box-sizing:border-box;color:#07b53b;display:inline-flex;height:14px;justify-content:center;width:14px}.radio-module__radio_input__xqGP8:checked~.radio-module__icon__17T16:before{background-color:currentColor;border-radius:50%;content:"";height:6px;width:6px}.radio-module__text__CEMXA{color:#1f1f1f;font-size:12px;margin-left:8px}.reportPopup-module__popup__gOoi-{display:flex;flex-direction:column;height:100%}.reportPopup-module__header__tvDLL{display:flex;justify-content:center;margin:15px 0}.reportPopup-module__header__tvDLL .reportPopup-module__title__aWBrs{color:#1f1f1f;font-size:13px}.reportPopup-module__contents__ym78g{overflow-y:overlay}.reportPopup-module__contents__ym78g>.reportPopup-module__description__SZQas{word-wrap:break-word;color:#949494;font-size:12px;line-height:16px;margin:10px 31px 0 25px;word-break:break-word}.reportPopup-module__select_box__330HE{border:1px solid #efefef;border-radius:5px;box-sizing:border-box;margin:0 10px;padding:16px 15px}.reportPopup-module__select_box__330HE .reportPopup-module__description__SZQas{word-wrap:break-word;color:#1f1f1f;font-size:12px;word-break:break-word}.reportPopup-module__select_box__330HE ul{margin-top:10px}.reportPopup-module__select_box__330HE li+li{margin-top:9px}.reportPopup-module__footer__8dbYz{margin-top:auto}.reportPopup-module__footer__8dbYz .reportPopup-module__button_group__Aw3yL{display:flex;gap:6px;justify-content:center;margin:25px 0 16px}.reportPopup-module__footer__8dbYz .reportPopup-module__button_cancel__-9EqR,.reportPopup-module__footer__8dbYz .reportPopup-module__button_confirm__epFlj{height:32px;padding:0 14px}.reportPopup-module__footer__8dbYz .reportPopup-module__button_confirm__epFlj{font-weight:700;min-width:60px;order:var(--positive-button-order)}.searchInput-module__label__40CWI{align-items:center;background-color:#f5f5f5;border-radius:5px;box-sizing:border-box;display:flex;padding:0 6px;width:100%}.searchInput-module__icon_search__amOMA{flex:0 0 auto;margin-right:2px}.searchInput-module__input__ekGp7{align-items:center;box-sizing:border-box;color:#1f1f1f;display:flex;flex:1 1 auto;font-size:13px;height:42px;width:inherit}.searchInput-module__input__ekGp7::-webkit-input-placeholder{color:#b7b7b7}.searchInput-module__input__ekGp7::placeholder{color:#b7b7b7}.searchInput-module__input__ekGp7:placeholder-shown+.searchInput-module__button_reset__l2-td{display:none}.searchInput-module__button_reset__l2-td{display:flex}.select-module__select_wrap__IQjyl{background-color:#fff;font-size:13px;position:relative;width:100%}.select-module__select__gDFFI{align-items:center;-webkit-appearance:none;appearance:none;background-color:#fff;border:1px solid #dbdfe5;box-sizing:border-box;display:flex;gap:10px;height:25px;justify-content:space-between;overflow:hidden;padding:0 23px 0 6px;width:inherit}.select-module__select__gDFFI .select-module__text__m8i5-{margin-bottom:-20px;min-width:-webkit-max-content;min-width:max-content;overflow-x:overlay;padding-bottom:20px}.select-module__select__gDFFI .select-module__text__m8i5-:empty:before{color:#b7b7b7;content:attr(placeholder)}.select-module__icon__ie7pA{color:#647085;pointer-events:none;position:absolute;right:5px;top:5px}@keyframes ToastContainer-module__appear__ona18{0%{max-height:0;opacity:0;transform:translateY(20px) scale(.9)}to{max-height:5em;opacity:1;transform:translateY(0) scale(1)}}.ToastContainer-module__toast-list__QAniw{bottom:16px;left:50%;max-width:min(336px,100vw);overflow:hidden;pointer-events:none;position:absolute;transform:translateX(-50%);word-break:break-all}.ToastContainer-module__toast-list__QAniw li{animation:ToastContainer-module__appear__ona18 .5s ease-out;clip-path:inset(0 0 0 0);display:flex;margin:2px 0;transition:all .3s ease}.ToastContainer-module__toast-list__QAniw li.ToastContainer-module__is-hiding__16-b6{clip-path:inset(100% 0 0 0);opacity:0;transform:translateY(20px) scale(.9)}.ToastContainer-module__toast-list__QAniw li>*{margin:0 auto}.ChatSelector-module__search_form__3VAUw{display:flex;margin-bottom:2px;position:relative}.ChatSelector-module__search_form__3VAUw button.ChatSelector-module__search__1pawR{align-items:center;border:1px solid #c8c8c8;bottom:0;display:flex;font-size:1em;left:0;padding:0 .5em;pointer-events:none;position:absolute;right:0;top:0}.ChatSelector-module__search_form__3VAUw button.ChatSelector-module__search__1pawR [data-profile-image]{box-shadow:0 0 1px #00000040;height:18px;margin-right:5px;width:18px}.ChatSelector-module__search_form__3VAUw input[type=search]{border:1px solid #c8c8c8;flex:1 1;font-size:1em;min-height:25px;min-width:300px;opacity:0;padding:0 .5em}.ChatSelector-module__search_form__3VAUw.ChatSelector-module__is_searching__qblkc button{visibility:hidden}.ChatSelector-module__search_form__3VAUw.ChatSelector-module__is_searching__qblkc input[type=search]{opacity:1}.ChatSelector-module__search_form__3VAUw.ChatSelector-module__is_empty__V9GRA button{color:#777}.ChatSelector-module__search_form__3VAUw .ChatSelector-module__search_list__GWCx4{background-color:#fff;border:1px solid #c8c8c8;left:0;margin-top:-1px;max-height:250px;overflow:overlay;position:absolute;top:100%;width:100%;z-index:9}.ChatSelector-module__search_form__3VAUw .ChatSelector-module__search_list__GWCx4 li{align-items:center;border-top:1px solid #c8c8c8;cursor:pointer;display:flex;padding:5px .5em}.ChatSelector-module__search_form__3VAUw .ChatSelector-module__search_list__GWCx4 li [data-profile-image]{box-shadow:0 0 1px #00000040;height:32px;margin-right:5px;width:32px}.ChatSelector-module__search_form__3VAUw .ChatSelector-module__search_list__GWCx4 li:first-child{border-top:0}.ChatSelector-module__search_form__3VAUw .ChatSelector-module__search_list__GWCx4 li:hover,.ChatSelector-module__search_form__3VAUw .ChatSelector-module__search_list__GWCx4:not(:hover) li.ChatSelector-module__selected__yeBvi{background-color:#f0f0f0}.settingGroup-module__setting_group__zDeQH{font-size:12px}.settingGroup-module__setting_group__zDeQH:not(:first-child){margin-top:40px}.settingGroup-module__title_box__fyl29{min-width:-webkit-max-content;min-width:max-content}.settingGroup-module__title__Zf02i{color:#313a48;font-weight:500}.settingGroup-module__count__V8uGC{color:#07b53b;margin-left:3px}.settingGroup-module__description__pk-kX{word-wrap:break-word;color:#9e9e9e;line-height:16px;margin-top:6px;word-break:break-word}.DevToolsContent-module__popup__ubh2d{display:flex;height:100%;width:100%}.DevToolsContent-module__popup__ubh2d>div:first-child{border-right:1px solid #e6eaef;box-sizing:border-box;flex:0 0 165px;overflow-y:overlay;position:relative}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__input__FIRWQ{font-size:1em;margin-top:10px;width:300px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__input__FIRWQ>label{background-color:#fff!important}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__small_input__H9R7e{margin-right:10px;margin-top:5px;width:100px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__small_input__H9R7e>label{background-color:#fff!important}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__checkbox_list__Mk0qD{display:grid;gap:5px 10px;grid-template-columns:minmax(170px,auto);margin-top:10px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__checkbox__Hdfj3{line-height:0}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__checkbox__Hdfj3 label{min-height:auto}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__checkbox__Hdfj3 label span[class*=text]{font-size:1em}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__checkbox__Hdfj3 i{align-self:flex-start;border-radius:0;height:17px;margin-top:3px;width:17px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__checkbox__Hdfj3 i:before{background-color:#fff;border:1px solid #dfdfdf}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__textarea__FLfKo{border:1px solid #c8c8c8;flex:1 1;font-family:inherit;font-size:.9em;height:150px;margin-top:10px;padding:.5em;resize:none;width:400px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__input__FIRWQ+button,.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__textarea__FLfKo+button,.DevToolsContent-module__popup__ubh2d button.primary{background-color:#07b53b;border-radius:5px;color:#fff;display:block;font-size:inherit;margin:5px 5px 0 0;min-width:4em;padding:5px 10px;text-align:center}.DevToolsContent-module__popup__ubh2d button:active{filter:brightness(.9)}.DevToolsContent-module__popup__ubh2d button:disabled{filter:grayscale(1)}.DevToolsContent-module__popup__ubh2d fieldset{margin-top:.5em}.DevToolsContent-module__popup__ubh2d fieldset legend{padding:0 .5em}.DevToolsContent-module__popup__ubh2d fieldset legend button{margin-top:0!important}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__small_input_list__h09GW{border:1px solid #d4d4d4;display:flex}.DevToolsContent-module__popup__ubh2d button.small{background-color:#ddd;border-radius:3px;font-size:.9em!important;margin:10px 0 0 .5em;padding:2px 5px}@keyframes DevToolsContent-module__appear__-Kfx9{0%{opacity:0;transform:scale(.8)}to{opacity:1;transform:scale(1)}}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__find-xlt-key__dBFvK{flex:1 1}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__find-xlt-key__dBFvK h2{margin:10px 0 3px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__find-xlt-key__dBFvK input{width:100%}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__inputs__tfBjZ{grid-gap:5px;display:grid;grid-template-columns:repeat(4,1fr);margin-bottom:5px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__inputs__tfBjZ li{display:flex}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH>div{align-items:center;background-color:#eee;border-radius:5px;display:flex;justify-content:center;margin-top:10px;padding:1em 0}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH table{border-collapse:collapse;margin-top:1em;table-layout:fixed;width:100%}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH thead tr th:first-child{width:300px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tr th{background-color:#eee;font-weight:400;padding:5px 0}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tr td,.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tr th{border:1px solid #ddd;overflow:hidden;text-overflow:ellipsis}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tr code{display:block;font-size:.9em;opacity:.4;user-select:text}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tr code.DevToolsContent-module__matched__sIxgc{opacity:1}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tbody tr td{overflow:hidden;position:relative;text-overflow:ellipsis;white-space:nowrap}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tbody tr td .DevToolsContent-module__fullText__t8eXm{align-items:center;animation:DevToolsContent-module__appear__-Kfx9 .3s ease;background-color:#fff;box-shadow:2px 2px 10px #0000004d;display:none;left:0;margin:-5px;min-height:calc(100% + 10px);min-width:calc(100% + 10px);outline:1px solid #ddd;padding:5px;position:absolute;top:0;user-select:text;white-space:nowrap;z-index:1}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tbody tr td:hover{overflow:overlay}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__results__v76OH tbody tr td:hover .DevToolsContent-module__fullText__t8eXm{display:flex}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__metadata__JLeV7{display:grid;flex:1 1 auto;font-size:12px;gap:10px 25px;grid-template-columns:minmax(100px,30%) auto;margin-top:8px;max-width:max-content}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__property__RTsai{align-items:center;color:#758295;display:inline-flex}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__wrap__rR-Q2{display:flex;flex:1 1;flex-direction:row;margin:-20px;overflow:hidden}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__wrap__rR-Q2 .DevToolsContent-module__configs__o3gY-{display:flex;flex:1 1;flex-direction:column;overflow:overlay;padding:20px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__wrap__rR-Q2 .DevToolsContent-module__inspector__Idqbq{border-left:1px solid #ddd;display:flex;height:100vh;position:relative;transition:flex .2s ease,width .2s ease;width:10px}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__wrap__rR-Q2 .DevToolsContent-module__inspector__Idqbq:before{background:#fff;border:1px solid #ddd;border-radius:5px;box-shadow:inset -2px -1px 0 0 #ddd;color:#666;content:"<";cursor:pointer;font-family:monospace;font-weight:700;height:40px;left:-15px;line-height:40px;position:absolute;text-align:center;top:50%;transform:translateY(-50%) scaleX(.5);width:26px;z-index:9}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__wrap__rR-Q2 .DevToolsContent-module__inspector__Idqbq.DevToolsContent-module__expanded__WS-zT{flex:1 1;width:0}.DevToolsContent-module__popup__ubh2d .DevToolsContent-module__wrap__rR-Q2 .DevToolsContent-module__inspector__Idqbq.DevToolsContent-module__expanded__WS-zT:before{content:">"}.DevToolsContentTime-module__time-title__fpdrP{font-size:12px;font-weight:700}.DevToolsContentTime-module__time-content__L7e9W{color:#00000080;font-size:12px;padding-bottom:16px}.settingPopup-module__popup__wDlhr{display:flex;height:100%;width:100%}.settingPopup-module__menu__4-otT{border-right:1px solid #e6eaef;box-sizing:border-box;flex:0 0 155px;overflow-y:overlay;position:relative}.settingPopup-module__contents__rgdP5{box-sizing:border-box;flex:1 1 auto;overflow-y:overlay;padding:20px;position:relative}.settingPopup-module__menu_list__nRUGt{display:flex;flex-direction:column;overflow-y:overlay}.settingPopup-module__menu_list_item__i-60E{display:flex;height:42px;position:relative}.settingPopup-module__menu_list_item__i-60E .settingPopup-module__badge__1wHZZ{border-radius:50%;font-size:10px;font-weight:700;line-height:0;padding:0;position:absolute;right:12px;top:50%;-webkit-transform:translateY(-50%) scale(.706);transform:translateY(-50%) scale(.706)}.settingPopup-module__button_menu__8XxD0{align-items:center;box-sizing:border-box;color:#717c89;display:inline-flex;font-size:12px;padding:0 30px 0 18px;width:100%}.settingPopup-module__button_menu__8XxD0:only-child{padding-right:0}.settingPopup-module__button_menu__8XxD0[aria-current=true]{background-color:#e9ebf3;color:#111;font-weight:700}h2{border-bottom:1px solid #ddd;font-size:12px;padding:5px}.Inspector-module__inspector__CBmAl{overflow:overlay;user-select:text;width:100%}.Inspector-module__inspector__CBmAl p{font-size:12px;line-height:1.25;margin:20px;text-align:justify}.Inspector-module__inspector__CBmAl>ul{font-size:.8em;margin:0!important;padding:10px!important}.Inspector-module__inspector__CBmAl>ul>li{padding:0!important}.Inspector-module__copy__XUEK2{font-size:.8em;margin-left:.5em}.Inspector-module__copy__XUEK2:active{transform:translateY(1px)}.StorageTree-module__storage-tree__xEGoT{color:#777}.StorageTree-module__storage-tree__xEGoT li{margin-left:1em}.StorageTree-module__storage-tree__xEGoT span.StorageTree-module__key__ogvd-{color:#000;margin-right:.5em;position:relative}.StorageTree-module__storage-tree__xEGoT span.StorageTree-module__key__ogvd- .StorageTree-module__remove-button__zf0lh{background-color:#0000;box-sizing:border-box;color:red;font-size:.75em;opacity:0;overflow:hidden;text-align:center;transition:all .3s ease;white-space:nowrap;width:0}.StorageTree-module__storage-tree__xEGoT span.StorageTree-module__key__ogvd-:hover .StorageTree-module__remove-button__zf0lh{opacity:1;width:3em}.findFriendModal-module__modal__BvCaB{height:100%;position:relative}.modal_wrap .findFriendModal-module__modal__BvCaB{width:370px}.findFriendModal-module__content__mP849{box-sizing:border-box;display:flex;flex-direction:column;height:100%}.findFriendModal-module__search_area__-EVRc{background-color:#f1f4f6;box-sizing:border-box;padding:15px 10px 20px;width:100%}.findFriendModal-module__radio_group__NF2aX{display:flex;gap:20px;margin-bottom:8px}.findFriendModal-module__radio_group__NF2aX .findFriendModal-module__radio__SMmsY i{height:15px;width:15px}.findFriendModal-module__radio_group__NF2aX .findFriendModal-module__radio__SMmsY i:before{background-color:#fff;border:1px solid #dfdfdf}.findFriendModal-module__radio_group__NF2aX .findFriendModal-module__radio__SMmsY span[class*=text]{font-size:13px;margin-left:5px}.findFriendModal-module__input_group__CoSgA{display:flex;flex-direction:column;gap:6px}.findFriendModal-module__input_group__CoSgA select{color:#484c54;font-size:13px}.findFriendModal-module__input_group__CoSgA>div[class*=input_box] i{height:22px;width:22px}.findFriendModal-module__input_group__CoSgA>div[class*=input_box] label{background-color:#fff;border:1px solid #dfdfdf;border-radius:0}.findFriendModal-module__input_group__CoSgA>div[class*=input_box] input{height:22px}.findFriendModal-module__result_area__UOs-p{box-sizing:border-box;display:flex;flex:1 1 auto;min-height:370px;width:100%}.findFriendModal-module__result_area__UOs-p div[class*=errorMessage] button{height:32px;margin-top:18px;min-width:89px}.resultFriend-module__result_friend__gEFCA{align-items:center;box-sizing:border-box;display:flex;flex-direction:column;justify-content:center;margin:auto;padding:0 35px}.resultFriend-module__result_friend__gEFCA .thumbnail{border-radius:50%;height:95px;width:95px}.resultFriend-module__error_message__EAnvQ,.resultFriend-module__name__Xlmis,.resultFriend-module__state_message__TI2rZ{word-wrap:break-word;word-break:break-word}.resultFriend-module__name__Xlmis{color:#1f1f1f;font-size:16px;font-weight:400;margin-top:15px}.resultFriend-module__state_message__TI2rZ{-webkit-line-clamp:2;-webkit-box-orient:vertical;color:#949494;display:-webkit-box;font-size:11px;margin-top:10px;overflow:hidden;overflow-wrap:anywhere}.resultFriend-module__error_message__EAnvQ{color:#777;font-size:12px;margin-top:20px}.resultFriend-module__button_group__T4CfR{display:flex;gap:3px;margin-top:20px}.resultFriend-module__button_action__hWTm3{height:32px;min-width:86px}.resultFriend-module__button_action__hWTm3[data-color=primary]{order:var(--positive-button-order)}.noticeBanner-module__notice_banner__UVxBC{word-wrap:break-word;align-items:center;background-color:#20bd6f;box-sizing:border-box;color:#fff;min-height:40px;position:relative;word-break:break-word;z-index:25}.noticeBanner-module__button_notice__z8sfa{box-sizing:border-box;color:inherit;display:flex;flex:1 1 auto;flex-direction:column;justify-content:center;min-height:inherit;padding:0 34px 0 23px;width:100%}.noticeBanner-module__title__cDXpa{font-size:13px;font-weight:500}.noticeBanner-module__button_delete__glRzi{color:inherit;display:inline-flex;position:absolute;right:6px;top:12px}.findPasswordModal-module__modal__IRSHp{align-items:center;display:flex;flex-direction:column;height:100%;justify-content:center;margin:auto;padding:37px 0 20px;position:relative;width:298px}.findPasswordModal-module__header__7B51b{display:flex;width:100%}.findPasswordModal-module__content__ScfNP{align-items:center;box-sizing:border-box;display:flex;flex-direction:column;justify-content:center;padding:0 25px;width:100%}.findPasswordModal-module__thumbnail__OAKh3{height:130px;width:130px}.findPasswordModal-module__thumbnail__OAKh3 img{display:block;height:100%;object-fit:contain;width:100%}.findPasswordModal-module__thumbnail__OAKh3+.findPasswordModal-module__title__E6j4w{margin-top:18px}.findPasswordModal-module__title__E6j4w{color:#1f1f1f;font-size:14px;font-weight:700;line-height:16px;text-align:center}.findPasswordModal-module__title__E6j4w+.findPasswordModal-module__description__gWiB2{margin-top:10px}.findPasswordModal-module__description__gWiB2{color:#949494;font-size:12px;line-height:16px;text-align:center}.findPasswordModal-module__footer__rIBIN{margin-top:22px}.findPasswordModal-module__footer__rIBIN .findPasswordModal-module__button_confirm__zD3-B{width:156px}.findPasswordModal-module__footer__rIBIN .findPasswordModal-module__button_confirm__zD3-B:disabled{background-color:#06c755}.findPasswordModal-module__button_info__qJ3ct{box-sizing:border-box;color:#c8c8c8;display:inline-flex;margin-left:auto;padding:10px}[class*=modal_wrap] .findPasswordModal-module__button_info__qJ3ct{position:absolute;right:0;top:0}.findPasswordModal-module__button_info__qJ3ct:hover{color:#b7b7b7}.findPasswordModal-module__button_info__qJ3ct:active{color:#c8c8c8}.findPasswordModal-module__button_info__qJ3ct g{fill:currentColor;stroke:currentColor}.loginForm-module__login_form__l0k04{display:flex;flex-direction:column;position:relative}.loginForm-module__input_group__CME7M{border:1px solid #dfdfdf;border-radius:4px;box-sizing:border-box}.loginForm-module__input_group__CME7M[data-state=error]{border-color:#ff3a44}.loginForm-module__input_box__2iDRo{box-sizing:border-box}.loginForm-module__input_box__2iDRo+.loginForm-module__input_box__2iDRo{border-top:1px solid #dfdfdf80}.loginForm-module__input__rIJ6n{align-items:center;box-sizing:border-box;color:#1f1f1f;display:flex;font-size:12px;height:42px;padding:0 15px;width:100%}.loginForm-module__input__rIJ6n::-webkit-input-placeholder{color:#949494}.loginForm-module__input__rIJ6n::placeholder{color:#949494}.loginForm-module__button_login__gnKsN{margin-top:10px}.loginForm-module__button_find__X5-DH{color:#777;font-size:12px;height:auto;letter-spacing:-.2px;margin:10px 0 0 auto}.loginForm-module__button_find__X5-DH:hover{color:#555}.loginForm-module__error_description__p27bp{word-wrap:break-word;bottom:-10px;color:#ff3a44;font-size:12px;line-height:15px;position:absolute;-webkit-transform:translateY(100%);transform:translateY(100%);word-break:keep-all}.loginPage-module__page_login__C5I-r{display:flex!important;height:100%;margin:auto;max-width:768px;min-height:380px;min-width:604px;width:100%}.loginPage-module__title__zFCNd{display:block;line-height:0;margin-bottom:37px}.loginPage-module__icon_logo__8V9rM{height:25px;width:68px}.loginPage-module__login_form_area__GYMw3,.loginPage-module__login_qr_area__Z-7PZ{align-items:center;display:flex;flex:1 1 auto;flex-direction:column;justify-content:center}.loginPage-module__login_form_area__GYMw3{min-width:384px}.loginPage-module__login_qr_area__Z-7PZ{border-left:1px solid #efefef;box-sizing:border-box;min-width:220px}.loginPage-module__button_info__R8Bpn,.loginPage-module__button_menu__csOFt{box-sizing:border-box;color:#c8c8c8;display:inline-flex;padding:10px;position:absolute;top:0}.loginPage-module__button_info__R8Bpn:hover,.loginPage-module__button_menu__csOFt:hover{color:#b7b7b7}.loginPage-module__button_info__R8Bpn:active,.loginPage-module__button_menu__csOFt:active{color:#c8c8c8}.loginPage-module__button_info__R8Bpn g,.loginPage-module__button_menu__csOFt g{fill:currentColor;stroke:currentColor}.loginPage-module__button_info__R8Bpn{right:25px}.loginPage-module__button_menu__csOFt{right:0}.loginPage-module__login_form__z9FmV{min-width:280px}.loginPage-module__login_qr__R5oRk{top:-25px;width:138px}.loginQr-module__login_qr__7gV08{align-items:center;display:flex;flex-direction:column;position:relative}.loginQr-module__thumbnail__hBnex{height:115px;position:relative;width:115px}.loginQr-module__thumbnail__hBnex:after{border:1px solid #e8e8e8;bottom:0;box-sizing:border-box;content:"";left:0;position:absolute;right:0;top:0}.loginQr-module__thumbnail__hBnex>canvas,.loginQr-module__thumbnail__hBnex>img{bottom:0;display:block;height:100%;left:0;object-fit:contain;position:absolute;right:0;top:0;width:100%;z-index:1}.loginQr-module__thumbnail__hBnex .loginQr-module__icon_qr_line__pnieJ{height:30px;left:50%;position:absolute;top:50%;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0);width:30px;z-index:1}.loginQr-module__thumbnail__hBnex .loginQr-module__button_refresh__QRSvo{align-items:center;border:.5px solid #dfdfdf;border-radius:50%;box-sizing:border-box;display:inline-flex;height:32px;justify-content:center;left:50%;position:absolute;top:50%;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0);width:32px;z-index:1}.loginQr-module__title__01OwN{color:#1f1f1f;font-size:14px;letter-spacing:-.11px;line-height:17px;margin-top:20px}.loginQr-module__description__XIaZL{word-wrap:break-word;bottom:-16px;color:#777;font-size:12px;letter-spacing:-.15px;line-height:17px;position:absolute;text-align:center;-webkit-transform:translateY(100%);transform:translateY(100%);word-break:keep-all}.loginQr-module__description__XIaZL[data-state=error]{color:#ff3a44}.pinCodeModal-module__modal__DHXh8{height:100%;margin:auto;position:relative;width:370px}.pinCodeModal-module__content__rW8Wo,.pinCodeModal-module__modal__DHXh8{align-items:center;display:flex;flex-direction:column;justify-content:center}.pinCodeModal-module__content__rW8Wo{box-sizing:border-box;padding:40px 20px}.pinCodeModal-module__title__HsMXM{font-size:16px;margin-bottom:8px;text-align:center}.pinCodeModal-module__description__amI1c{color:#1f1f1f;font-size:13px;letter-spacing:-.2px;line-height:16px;text-align:center}.pinCodeModal-module__description__amI1c[data-color=primary]{color:#07b53b}.pinCodeModal-module__description__amI1c+.pinCodeModal-module__description__amI1c{margin-top:12px}.pinCodeModal-module__pincode__bFKMn{color:#1f1f1f;font-size:40px;font-weight:500;letter-spacing:2.5px;line-height:48px;margin-top:25px}.aboutLineContent-module__about_line__v0Brx{align-items:center;display:flex;flex-direction:column;height:100%;justify-content:center;margin:auto}.aboutLineContent-module__icon__S2zwR{color:#07b53b;height:70px;width:70px}.aboutLineContent-module__icon__S2zwR path{fill:currentColor}.aboutLineContent-module__version__lzNQb{color:#07b53b;margin-top:10px}.aboutLineContent-module__build_info__5jA2H{color:#949494;display:block;font-size:.7em;margin-top:1em;-webkit-user-select:text;user-select:text}.aboutLineContent-module__link_group__Y63VV{display:flex;gap:20px;margin-top:40px}.aboutLineContent-module__link_group__Y63VV .aboutLineContent-module__link__NenOB{align-items:center;color:#b7b7b7;display:inline-flex;font-size:14px;gap:4px;height:30px;justify-content:center;padding:0 15px}.aboutLineContent-module__link_group__Y63VV .aboutLineContent-module__link__NenOB:hover{color:#949494}.aboutLineContent-module__link_group__Y63VV .aboutLineContent-module__link__NenOB:after{border-bottom:4px solid #0000;border-left:4px solid;border-top:4px solid #0000;content:""}.profileSetting-module__profile_setting__Ud4uZ{display:flex;gap:17px}.profileSetting-module__profile_setting__Ud4uZ .button_name_edit,.profileSetting-module__profile_setting__Ud4uZ .button_state_edit{align-items:center;border:1px solid #0000;box-sizing:border-box;font-size:12px;height:25px;margin-left:-5px;padding:0 5px;position:relative}.profileSetting-module__profile_setting__Ud4uZ .button_name_edit:hover,.profileSetting-module__profile_setting__Ud4uZ .button_state_edit:hover{border:1px solid #c8c8c8}.profileSetting-module__profile_setting__Ud4uZ .button_state_edit{color:inherit}.profileSetting-module__profile_setting__Ud4uZ .button_state_edit .icon{color:#3f475d}.profileSetting-module__profile_setting__Ud4uZ .input_edit{margin-left:-5px}.profileSetting-module__profile_setting__Ud4uZ .thumbnail{border-radius:50%;height:98px;width:98px}.profileSetting-module__profile_setting__Ud4uZ .thumbnail button[class*=button_action]{height:25px;width:25px}.profileSetting-module__profile_setting__Ud4uZ .thumbnail button[class*=button_action] i[class*=icon]{color:#3c4461;height:13px;width:13px}.profileSetting-module__metadata__ysrHX{align-items:center;display:grid;flex:1 1 auto;font-size:12px;gap:5px 10px;grid-auto-rows:minmax(25px,auto);grid-template-columns:minmax(-webkit-max-content,110px) auto;grid-template-columns:minmax(max-content,110px) auto}.profileSetting-module__property__ABx3b{color:#313a48}.profileSetting-module__value__ToFEv{box-sizing:border-box;color:#707991;min-width:225px;overflow-wrap:break-word;padding-left:5px}.profileSetting-module__button_home__4vG15{align-items:center;color:inherit;display:inline-flex;font-size:inherit;gap:4px}.chatContent-module__metadata__4TJ87{display:grid;flex:1 1 auto;font-size:12px;gap:10px 25px;grid-template-columns:minmax(100px,30%) auto;margin-top:8px;max-width:-webkit-max-content;max-width:max-content}.chatContent-module__property__KLN1x{align-items:center;color:#758295;display:inline-flex}.chatContent-module__value__yN4mg{width:230px}.chatContent-module__hidden_chatroom_list__hSW9G{border:1px solid #dfdfdf;border-radius:2px;box-sizing:border-box;display:flex;flex-direction:column;height:170px;margin-top:15px;overflow-y:overlay}.chatContent-module__checkbox_list__5XLrF{display:grid;gap:5px 10px;grid-template-columns:minmax(170px,auto);margin-top:10px}.chatContent-module__checkbox_list__5XLrF[data-grid="2"]{grid-template-columns:minmax(auto,50%) auto;min-width:-webkit-max-content;min-width:max-content}.chatContent-module__checkbox__RNGTZ{line-height:0}.chatContent-module__checkbox__RNGTZ label{min-height:auto}.chatContent-module__checkbox__RNGTZ i{align-self:flex-start;border-radius:0;height:17px;margin-top:3px;width:17px}.chatContent-module__checkbox__RNGTZ i:before{background-color:#fff;border:1px solid #dfdfdf}.chatContent-module__checkbox__RNGTZ span[class*=text]{word-wrap:break-word;font-size:13px;word-break:break-word}.friendContent-module__friend_manage__5dRix{bottom:0;display:grid;grid-template-columns:50% 50%;left:0;position:absolute;right:0;top:0}.friendContent-module__setting_group__ZobIN{margin-bottom:15px;padding:20px 18px 0}.friendContent-module__manage_area__3-p6Q{box-sizing:border-box;display:flex;flex-direction:column;overflow-y:overlay;position:relative}.friendContent-module__manage_area__3-p6Q+.friendContent-module__manage_area__3-p6Q{border-left:1px solid #e7eaef}.notificationContent-module__checkbox_list__tUKas{display:grid;gap:5px 10px;grid-template-columns:minmax(170px,auto);margin-top:10px}.notificationContent-module__checkbox_list__tUKas[data-grid="2"]{grid-template-columns:minmax(auto,50%) auto;min-width:-webkit-max-content;min-width:max-content}.notificationContent-module__checkbox__MYIsv{line-height:0}.notificationContent-module__checkbox__MYIsv label{min-height:auto}.notificationContent-module__checkbox__MYIsv i{align-self:flex-start;border-radius:0;height:17px;margin-top:3px;width:17px}.notificationContent-module__checkbox__MYIsv i:before{background-color:#fff;border:1px solid #dfdfdf}.notificationContent-module__checkbox__MYIsv span[class*=text]{word-wrap:break-word;font-size:13px;word-break:break-word}.shortcutGroup-module__shortcut_group__X-mKe{font-size:12px}.shortcutGroup-module__shortcut_group__X-mKe:not(:first-child){margin-top:30px}.shortcutGroup-module__title_box__XzEUp{min-width:-webkit-max-content;min-width:max-content}.shortcutGroup-module__title__5ZD7h{color:#313a48;font-weight:500}.shortcutGroup-module__description__dh6oJ{word-wrap:break-word;color:#9e9e9e;line-height:16px;margin-top:6px;word-break:break-word}.shortcutGroup-module__metadata__wAeIj{display:grid;flex:1 1 auto;font-size:12px;gap:15px 25px;grid-template-columns:minmax(215px,30%) auto;margin-top:14px;max-width:-webkit-max-content;max-width:max-content}.shortcutItem-module__property__tX-z8{color:#758295;display:inline-flex}.shortcutItem-module__value__8Ii6j{color:#758295;line-height:1.5;width:230px}